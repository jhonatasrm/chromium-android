// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/search/now/wire/feed/mockserver/mock_server.proto

package com.google.search.now.wire.feed.mockserver;

public final class MockServerProto {
  private MockServerProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface MockServerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:search.now.wire.feed.mockserver.MockServer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The initial response
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
     */
    boolean hasInitialResponse();
    /**
     * <pre>
     * The initial response
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
     */
    com.google.search.now.wire.feed.ResponseProto.Response getInitialResponse();

    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    java.util.List<com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse> 
        getConditionalResponsesList();
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse getConditionalResponses(int index);
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    int getConditionalResponsesCount();

    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    java.util.List<com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate> 
        getMockUpdatesList();
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate getMockUpdates(int index);
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    int getMockUpdatesCount();
  }
  /**
   * Protobuf type {@code search.now.wire.feed.mockserver.MockServer}
   */
  public  static final class MockServer extends
      com.google.protobuf.GeneratedMessageLite<
          MockServer, MockServer.Builder> implements
      // @@protoc_insertion_point(message_implements:search.now.wire.feed.mockserver.MockServer)
      MockServerOrBuilder {
    private MockServer() {
      conditionalResponses_ = emptyProtobufList();
      mockUpdates_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int INITIAL_RESPONSE_FIELD_NUMBER = 1;
    private com.google.search.now.wire.feed.ResponseProto.Response initialResponse_;
    /**
     * <pre>
     * The initial response
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
     */
    public boolean hasInitialResponse() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The initial response
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
     */
    public com.google.search.now.wire.feed.ResponseProto.Response getInitialResponse() {
      return initialResponse_ == null ? com.google.search.now.wire.feed.ResponseProto.Response.getDefaultInstance() : initialResponse_;
    }
    /**
     * <pre>
     * The initial response
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
     */
    private void setInitialResponse(com.google.search.now.wire.feed.ResponseProto.Response value) {
      if (value == null) {
        throw new NullPointerException();
      }
      initialResponse_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * The initial response
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
     */
    private void setInitialResponse(
        com.google.search.now.wire.feed.ResponseProto.Response.Builder builderForValue) {
      initialResponse_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The initial response
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
     */
    private void mergeInitialResponse(com.google.search.now.wire.feed.ResponseProto.Response value) {
      if (initialResponse_ != null &&
          initialResponse_ != com.google.search.now.wire.feed.ResponseProto.Response.getDefaultInstance()) {
        initialResponse_ =
          com.google.search.now.wire.feed.ResponseProto.Response.newBuilder(initialResponse_).mergeFrom(value).buildPartial();
      } else {
        initialResponse_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The initial response
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
     */
    private void clearInitialResponse() {  initialResponse_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int CONDITIONAL_RESPONSES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse> conditionalResponses_;
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    public java.util.List<com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse> getConditionalResponsesList() {
      return conditionalResponses_;
    }
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    public java.util.List<? extends com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponseOrBuilder> 
        getConditionalResponsesOrBuilderList() {
      return conditionalResponses_;
    }
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    public int getConditionalResponsesCount() {
      return conditionalResponses_.size();
    }
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    public com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse getConditionalResponses(int index) {
      return conditionalResponses_.get(index);
    }
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    public com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponseOrBuilder getConditionalResponsesOrBuilder(
        int index) {
      return conditionalResponses_.get(index);
    }
    private void ensureConditionalResponsesIsMutable() {
      if (!conditionalResponses_.isModifiable()) {
        conditionalResponses_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(conditionalResponses_);
       }
    }

    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    private void setConditionalResponses(
        int index, com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureConditionalResponsesIsMutable();
      conditionalResponses_.set(index, value);
    }
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    private void setConditionalResponses(
        int index, com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse.Builder builderForValue) {
      ensureConditionalResponsesIsMutable();
      conditionalResponses_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    private void addConditionalResponses(com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureConditionalResponsesIsMutable();
      conditionalResponses_.add(value);
    }
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    private void addConditionalResponses(
        int index, com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureConditionalResponsesIsMutable();
      conditionalResponses_.add(index, value);
    }
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    private void addConditionalResponses(
        com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse.Builder builderForValue) {
      ensureConditionalResponsesIsMutable();
      conditionalResponses_.add(builderForValue.build());
    }
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    private void addConditionalResponses(
        int index, com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse.Builder builderForValue) {
      ensureConditionalResponsesIsMutable();
      conditionalResponses_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    private void addAllConditionalResponses(
        java.lang.Iterable<? extends com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse> values) {
      ensureConditionalResponsesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, conditionalResponses_);
    }
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    private void clearConditionalResponses() {
      conditionalResponses_ = emptyProtobufList();
    }
    /**
     * <pre>
     * conditional responses represent responses for paged content
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
     */
    private void removeConditionalResponses(int index) {
      ensureConditionalResponsesIsMutable();
      conditionalResponses_.remove(index);
    }

    public static final int MOCK_UPDATES_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate> mockUpdates_;
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    public java.util.List<com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate> getMockUpdatesList() {
      return mockUpdates_;
    }
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    public java.util.List<? extends com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdateOrBuilder> 
        getMockUpdatesOrBuilderList() {
      return mockUpdates_;
    }
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    public int getMockUpdatesCount() {
      return mockUpdates_.size();
    }
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    public com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate getMockUpdates(int index) {
      return mockUpdates_.get(index);
    }
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    public com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdateOrBuilder getMockUpdatesOrBuilder(
        int index) {
      return mockUpdates_.get(index);
    }
    private void ensureMockUpdatesIsMutable() {
      if (!mockUpdates_.isModifiable()) {
        mockUpdates_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(mockUpdates_);
       }
    }

    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    private void setMockUpdates(
        int index, com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMockUpdatesIsMutable();
      mockUpdates_.set(index, value);
    }
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    private void setMockUpdates(
        int index, com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate.Builder builderForValue) {
      ensureMockUpdatesIsMutable();
      mockUpdates_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    private void addMockUpdates(com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMockUpdatesIsMutable();
      mockUpdates_.add(value);
    }
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    private void addMockUpdates(
        int index, com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMockUpdatesIsMutable();
      mockUpdates_.add(index, value);
    }
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    private void addMockUpdates(
        com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate.Builder builderForValue) {
      ensureMockUpdatesIsMutable();
      mockUpdates_.add(builderForValue.build());
    }
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    private void addMockUpdates(
        int index, com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate.Builder builderForValue) {
      ensureMockUpdatesIsMutable();
      mockUpdates_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    private void addAllMockUpdates(
        java.lang.Iterable<? extends com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate> values) {
      ensureMockUpdatesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mockUpdates_);
    }
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    private void clearMockUpdates() {
      mockUpdates_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Mock updates to existing cards
     * </pre>
     *
     * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
     */
    private void removeMockUpdates(int index) {
      ensureMockUpdatesIsMutable();
      mockUpdates_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getInitialResponse());
      }
      for (int i = 0; i < conditionalResponses_.size(); i++) {
        output.writeMessage(2, conditionalResponses_.get(i));
      }
      for (int i = 0; i < mockUpdates_.size(); i++) {
        output.writeMessage(3, mockUpdates_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInitialResponse());
      }
      for (int i = 0; i < conditionalResponses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, conditionalResponses_.get(i));
      }
      for (int i = 0; i < mockUpdates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, mockUpdates_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code search.now.wire.feed.mockserver.MockServer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer, Builder> implements
        // @@protoc_insertion_point(builder_implements:search.now.wire.feed.mockserver.MockServer)
        com.google.search.now.wire.feed.mockserver.MockServerProto.MockServerOrBuilder {
      // Construct using com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The initial response
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
       */
      public boolean hasInitialResponse() {
        return instance.hasInitialResponse();
      }
      /**
       * <pre>
       * The initial response
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
       */
      public com.google.search.now.wire.feed.ResponseProto.Response getInitialResponse() {
        return instance.getInitialResponse();
      }
      /**
       * <pre>
       * The initial response
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
       */
      public Builder setInitialResponse(com.google.search.now.wire.feed.ResponseProto.Response value) {
        copyOnWrite();
        instance.setInitialResponse(value);
        return this;
        }
      /**
       * <pre>
       * The initial response
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
       */
      public Builder setInitialResponse(
          com.google.search.now.wire.feed.ResponseProto.Response.Builder builderForValue) {
        copyOnWrite();
        instance.setInitialResponse(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The initial response
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
       */
      public Builder mergeInitialResponse(com.google.search.now.wire.feed.ResponseProto.Response value) {
        copyOnWrite();
        instance.mergeInitialResponse(value);
        return this;
      }
      /**
       * <pre>
       * The initial response
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response initial_response = 1;</code>
       */
      public Builder clearInitialResponse() {  copyOnWrite();
        instance.clearInitialResponse();
        return this;
      }

      /**
       * <pre>
       * conditional responses represent responses for paged content
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
       */
      public java.util.List<com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse> getConditionalResponsesList() {
        return java.util.Collections.unmodifiableList(
            instance.getConditionalResponsesList());
      }
      /**
       * <pre>
       * conditional responses represent responses for paged content
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
       */
      public int getConditionalResponsesCount() {
        return instance.getConditionalResponsesCount();
      }/**
       * <pre>
       * conditional responses represent responses for paged content
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
       */
      public com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse getConditionalResponses(int index) {
        return instance.getConditionalResponses(index);
      }
      /**
       * <pre>
       * conditional responses represent responses for paged content
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
       */
      public Builder setConditionalResponses(
          int index, com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse value) {
        copyOnWrite();
        instance.setConditionalResponses(index, value);
        return this;
      }
      /**
       * <pre>
       * conditional responses represent responses for paged content
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
       */
      public Builder setConditionalResponses(
          int index, com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse.Builder builderForValue) {
        copyOnWrite();
        instance.setConditionalResponses(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * conditional responses represent responses for paged content
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
       */
      public Builder addConditionalResponses(com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse value) {
        copyOnWrite();
        instance.addConditionalResponses(value);
        return this;
      }
      /**
       * <pre>
       * conditional responses represent responses for paged content
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
       */
      public Builder addConditionalResponses(
          int index, com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse value) {
        copyOnWrite();
        instance.addConditionalResponses(index, value);
        return this;
      }
      /**
       * <pre>
       * conditional responses represent responses for paged content
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
       */
      public Builder addConditionalResponses(
          com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse.Builder builderForValue) {
        copyOnWrite();
        instance.addConditionalResponses(builderForValue);
        return this;
      }
      /**
       * <pre>
       * conditional responses represent responses for paged content
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
       */
      public Builder addConditionalResponses(
          int index, com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse.Builder builderForValue) {
        copyOnWrite();
        instance.addConditionalResponses(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * conditional responses represent responses for paged content
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
       */
      public Builder addAllConditionalResponses(
          java.lang.Iterable<? extends com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse> values) {
        copyOnWrite();
        instance.addAllConditionalResponses(values);
        return this;
      }
      /**
       * <pre>
       * conditional responses represent responses for paged content
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
       */
      public Builder clearConditionalResponses() {
        copyOnWrite();
        instance.clearConditionalResponses();
        return this;
      }
      /**
       * <pre>
       * conditional responses represent responses for paged content
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.ConditionalResponse conditional_responses = 2;</code>
       */
      public Builder removeConditionalResponses(int index) {
        copyOnWrite();
        instance.removeConditionalResponses(index);
        return this;
      }

      /**
       * <pre>
       * Mock updates to existing cards
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
       */
      public java.util.List<com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate> getMockUpdatesList() {
        return java.util.Collections.unmodifiableList(
            instance.getMockUpdatesList());
      }
      /**
       * <pre>
       * Mock updates to existing cards
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
       */
      public int getMockUpdatesCount() {
        return instance.getMockUpdatesCount();
      }/**
       * <pre>
       * Mock updates to existing cards
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
       */
      public com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate getMockUpdates(int index) {
        return instance.getMockUpdates(index);
      }
      /**
       * <pre>
       * Mock updates to existing cards
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
       */
      public Builder setMockUpdates(
          int index, com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate value) {
        copyOnWrite();
        instance.setMockUpdates(index, value);
        return this;
      }
      /**
       * <pre>
       * Mock updates to existing cards
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
       */
      public Builder setMockUpdates(
          int index, com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate.Builder builderForValue) {
        copyOnWrite();
        instance.setMockUpdates(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Mock updates to existing cards
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
       */
      public Builder addMockUpdates(com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate value) {
        copyOnWrite();
        instance.addMockUpdates(value);
        return this;
      }
      /**
       * <pre>
       * Mock updates to existing cards
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
       */
      public Builder addMockUpdates(
          int index, com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate value) {
        copyOnWrite();
        instance.addMockUpdates(index, value);
        return this;
      }
      /**
       * <pre>
       * Mock updates to existing cards
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
       */
      public Builder addMockUpdates(
          com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate.Builder builderForValue) {
        copyOnWrite();
        instance.addMockUpdates(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Mock updates to existing cards
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
       */
      public Builder addMockUpdates(
          int index, com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate.Builder builderForValue) {
        copyOnWrite();
        instance.addMockUpdates(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Mock updates to existing cards
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
       */
      public Builder addAllMockUpdates(
          java.lang.Iterable<? extends com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate> values) {
        copyOnWrite();
        instance.addAllMockUpdates(values);
        return this;
      }
      /**
       * <pre>
       * Mock updates to existing cards
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
       */
      public Builder clearMockUpdates() {
        copyOnWrite();
        instance.clearMockUpdates();
        return this;
      }
      /**
       * <pre>
       * Mock updates to existing cards
       * </pre>
       *
       * <code>repeated .search.now.wire.feed.mockserver.MockUpdate mock_updates = 3;</code>
       */
      public Builder removeMockUpdates(int index) {
        copyOnWrite();
        instance.removeMockUpdates(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.now.wire.feed.mockserver.MockServer)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasInitialResponse()) {
            if (!getInitialResponse().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getConditionalResponsesCount(); i++) {
            if (!getConditionalResponses(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getMockUpdatesCount(); i++) {
            if (!getMockUpdates(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          conditionalResponses_.makeImmutable();
          mockUpdates_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer other = (com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer) arg1;
          initialResponse_ = visitor.visitMessage(initialResponse_, other.initialResponse_);
          conditionalResponses_= visitor.visitList(conditionalResponses_, other.conditionalResponses_);
          mockUpdates_= visitor.visitList(mockUpdates_, other.mockUpdates_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.google.search.now.wire.feed.ResponseProto.Response.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = initialResponse_.toBuilder();
                  }
                  initialResponse_ = input.readMessage(com.google.search.now.wire.feed.ResponseProto.Response.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(initialResponse_);
                    initialResponse_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 18: {
                  if (!conditionalResponses_.isModifiable()) {
                    conditionalResponses_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(conditionalResponses_);
                  }
                  conditionalResponses_.add(
                      input.readMessage(com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  if (!mockUpdates_.isModifiable()) {
                    mockUpdates_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(mockUpdates_);
                  }
                  mockUpdates_.add(
                      input.readMessage(com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:search.now.wire.feed.mockserver.MockServer)
    private static final com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MockServer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockServer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MockServer> PARSER;

    public static com.google.protobuf.Parser<MockServer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MockUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:search.now.wire.feed.mockserver.MockUpdate)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The response with the push update
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 1;</code>
     */
    boolean hasResponse();
    /**
     * <pre>
     * The response with the push update
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 1;</code>
     */
    com.google.search.now.wire.feed.ResponseProto.Response getResponse();

    /**
     * <pre>
     * The amount of time to wait, in milliseconds, before the push is triggered.
     * This is relative to the time the GCL file is loaded.
     * </pre>
     *
     * <code>optional int32 update_trigger_time = 2;</code>
     */
    boolean hasUpdateTriggerTime();
    /**
     * <pre>
     * The amount of time to wait, in milliseconds, before the push is triggered.
     * This is relative to the time the GCL file is loaded.
     * </pre>
     *
     * <code>optional int32 update_trigger_time = 2;</code>
     */
    int getUpdateTriggerTime();
  }
  /**
   * <pre>
   ** This represents a response providing updates to the stream. 
   * </pre>
   *
   * Protobuf type {@code search.now.wire.feed.mockserver.MockUpdate}
   */
  public  static final class MockUpdate extends
      com.google.protobuf.GeneratedMessageLite<
          MockUpdate, MockUpdate.Builder> implements
      // @@protoc_insertion_point(message_implements:search.now.wire.feed.mockserver.MockUpdate)
      MockUpdateOrBuilder {
    private MockUpdate() {
    }
    private int bitField0_;
    public static final int RESPONSE_FIELD_NUMBER = 1;
    private com.google.search.now.wire.feed.ResponseProto.Response response_;
    /**
     * <pre>
     * The response with the push update
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 1;</code>
     */
    public boolean hasResponse() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The response with the push update
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 1;</code>
     */
    public com.google.search.now.wire.feed.ResponseProto.Response getResponse() {
      return response_ == null ? com.google.search.now.wire.feed.ResponseProto.Response.getDefaultInstance() : response_;
    }
    /**
     * <pre>
     * The response with the push update
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 1;</code>
     */
    private void setResponse(com.google.search.now.wire.feed.ResponseProto.Response value) {
      if (value == null) {
        throw new NullPointerException();
      }
      response_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     * The response with the push update
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 1;</code>
     */
    private void setResponse(
        com.google.search.now.wire.feed.ResponseProto.Response.Builder builderForValue) {
      response_ = builderForValue.build();
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The response with the push update
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 1;</code>
     */
    private void mergeResponse(com.google.search.now.wire.feed.ResponseProto.Response value) {
      if (response_ != null &&
          response_ != com.google.search.now.wire.feed.ResponseProto.Response.getDefaultInstance()) {
        response_ =
          com.google.search.now.wire.feed.ResponseProto.Response.newBuilder(response_).mergeFrom(value).buildPartial();
      } else {
        response_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     * The response with the push update
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 1;</code>
     */
    private void clearResponse() {  response_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int UPDATE_TRIGGER_TIME_FIELD_NUMBER = 2;
    private int updateTriggerTime_;
    /**
     * <pre>
     * The amount of time to wait, in milliseconds, before the push is triggered.
     * This is relative to the time the GCL file is loaded.
     * </pre>
     *
     * <code>optional int32 update_trigger_time = 2;</code>
     */
    public boolean hasUpdateTriggerTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The amount of time to wait, in milliseconds, before the push is triggered.
     * This is relative to the time the GCL file is loaded.
     * </pre>
     *
     * <code>optional int32 update_trigger_time = 2;</code>
     */
    public int getUpdateTriggerTime() {
      return updateTriggerTime_;
    }
    /**
     * <pre>
     * The amount of time to wait, in milliseconds, before the push is triggered.
     * This is relative to the time the GCL file is loaded.
     * </pre>
     *
     * <code>optional int32 update_trigger_time = 2;</code>
     */
    private void setUpdateTriggerTime(int value) {
      bitField0_ |= 0x00000002;
      updateTriggerTime_ = value;
    }
    /**
     * <pre>
     * The amount of time to wait, in milliseconds, before the push is triggered.
     * This is relative to the time the GCL file is loaded.
     * </pre>
     *
     * <code>optional int32 update_trigger_time = 2;</code>
     */
    private void clearUpdateTriggerTime() {
      bitField0_ = (bitField0_ & ~0x00000002);
      updateTriggerTime_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getResponse());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, updateTriggerTime_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResponse());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, updateTriggerTime_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ** This represents a response providing updates to the stream. 
     * </pre>
     *
     * Protobuf type {@code search.now.wire.feed.mockserver.MockUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate, Builder> implements
        // @@protoc_insertion_point(builder_implements:search.now.wire.feed.mockserver.MockUpdate)
        com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdateOrBuilder {
      // Construct using com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The response with the push update
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response response = 1;</code>
       */
      public boolean hasResponse() {
        return instance.hasResponse();
      }
      /**
       * <pre>
       * The response with the push update
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response response = 1;</code>
       */
      public com.google.search.now.wire.feed.ResponseProto.Response getResponse() {
        return instance.getResponse();
      }
      /**
       * <pre>
       * The response with the push update
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response response = 1;</code>
       */
      public Builder setResponse(com.google.search.now.wire.feed.ResponseProto.Response value) {
        copyOnWrite();
        instance.setResponse(value);
        return this;
        }
      /**
       * <pre>
       * The response with the push update
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response response = 1;</code>
       */
      public Builder setResponse(
          com.google.search.now.wire.feed.ResponseProto.Response.Builder builderForValue) {
        copyOnWrite();
        instance.setResponse(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The response with the push update
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response response = 1;</code>
       */
      public Builder mergeResponse(com.google.search.now.wire.feed.ResponseProto.Response value) {
        copyOnWrite();
        instance.mergeResponse(value);
        return this;
      }
      /**
       * <pre>
       * The response with the push update
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response response = 1;</code>
       */
      public Builder clearResponse() {  copyOnWrite();
        instance.clearResponse();
        return this;
      }

      /**
       * <pre>
       * The amount of time to wait, in milliseconds, before the push is triggered.
       * This is relative to the time the GCL file is loaded.
       * </pre>
       *
       * <code>optional int32 update_trigger_time = 2;</code>
       */
      public boolean hasUpdateTriggerTime() {
        return instance.hasUpdateTriggerTime();
      }
      /**
       * <pre>
       * The amount of time to wait, in milliseconds, before the push is triggered.
       * This is relative to the time the GCL file is loaded.
       * </pre>
       *
       * <code>optional int32 update_trigger_time = 2;</code>
       */
      public int getUpdateTriggerTime() {
        return instance.getUpdateTriggerTime();
      }
      /**
       * <pre>
       * The amount of time to wait, in milliseconds, before the push is triggered.
       * This is relative to the time the GCL file is loaded.
       * </pre>
       *
       * <code>optional int32 update_trigger_time = 2;</code>
       */
      public Builder setUpdateTriggerTime(int value) {
        copyOnWrite();
        instance.setUpdateTriggerTime(value);
        return this;
      }
      /**
       * <pre>
       * The amount of time to wait, in milliseconds, before the push is triggered.
       * This is relative to the time the GCL file is loaded.
       * </pre>
       *
       * <code>optional int32 update_trigger_time = 2;</code>
       */
      public Builder clearUpdateTriggerTime() {
        copyOnWrite();
        instance.clearUpdateTriggerTime();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.now.wire.feed.mockserver.MockUpdate)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasResponse()) {
            if (!getResponse().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate other = (com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate) arg1;
          response_ = visitor.visitMessage(response_, other.response_);
          updateTriggerTime_ = visitor.visitInt(
              hasUpdateTriggerTime(), updateTriggerTime_,
              other.hasUpdateTriggerTime(), other.updateTriggerTime_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.google.search.now.wire.feed.ResponseProto.Response.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    subBuilder = response_.toBuilder();
                  }
                  response_ = input.readMessage(com.google.search.now.wire.feed.ResponseProto.Response.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(response_);
                    response_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000001;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  updateTriggerTime_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:search.now.wire.feed.mockserver.MockUpdate)
    private static final com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MockUpdate();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.search.now.wire.feed.mockserver.MockServerProto.MockUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MockUpdate> PARSER;

    public static com.google.protobuf.Parser<MockUpdate> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ConditionalResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:search.now.wire.feed.mockserver.ConditionalResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The continuation token in the request must match this value
     * </pre>
     *
     * <code>optional bytes continuation_token = 1;</code>
     */
    boolean hasContinuationToken();
    /**
     * <pre>
     * The continuation token in the request must match this value
     * </pre>
     *
     * <code>optional bytes continuation_token = 1;</code>
     */
    com.google.protobuf.ByteString getContinuationToken();

    /**
     * <pre>
     * The response to use
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 2;</code>
     */
    boolean hasResponse();
    /**
     * <pre>
     * The response to use
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 2;</code>
     */
    com.google.search.now.wire.feed.ResponseProto.Response getResponse();
  }
  /**
   * <pre>
   * Conditional responses are served based upon a continuation token.
   * </pre>
   *
   * Protobuf type {@code search.now.wire.feed.mockserver.ConditionalResponse}
   */
  public  static final class ConditionalResponse extends
      com.google.protobuf.GeneratedMessageLite<
          ConditionalResponse, ConditionalResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:search.now.wire.feed.mockserver.ConditionalResponse)
      ConditionalResponseOrBuilder {
    private ConditionalResponse() {
      continuationToken_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int CONTINUATION_TOKEN_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString continuationToken_;
    /**
     * <pre>
     * The continuation token in the request must match this value
     * </pre>
     *
     * <code>optional bytes continuation_token = 1;</code>
     */
    public boolean hasContinuationToken() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The continuation token in the request must match this value
     * </pre>
     *
     * <code>optional bytes continuation_token = 1;</code>
     */
    public com.google.protobuf.ByteString getContinuationToken() {
      return continuationToken_;
    }
    /**
     * <pre>
     * The continuation token in the request must match this value
     * </pre>
     *
     * <code>optional bytes continuation_token = 1;</code>
     */
    private void setContinuationToken(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      continuationToken_ = value;
    }
    /**
     * <pre>
     * The continuation token in the request must match this value
     * </pre>
     *
     * <code>optional bytes continuation_token = 1;</code>
     */
    private void clearContinuationToken() {
      bitField0_ = (bitField0_ & ~0x00000001);
      continuationToken_ = getDefaultInstance().getContinuationToken();
    }

    public static final int RESPONSE_FIELD_NUMBER = 2;
    private com.google.search.now.wire.feed.ResponseProto.Response response_;
    /**
     * <pre>
     * The response to use
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 2;</code>
     */
    public boolean hasResponse() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The response to use
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 2;</code>
     */
    public com.google.search.now.wire.feed.ResponseProto.Response getResponse() {
      return response_ == null ? com.google.search.now.wire.feed.ResponseProto.Response.getDefaultInstance() : response_;
    }
    /**
     * <pre>
     * The response to use
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 2;</code>
     */
    private void setResponse(com.google.search.now.wire.feed.ResponseProto.Response value) {
      if (value == null) {
        throw new NullPointerException();
      }
      response_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * The response to use
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 2;</code>
     */
    private void setResponse(
        com.google.search.now.wire.feed.ResponseProto.Response.Builder builderForValue) {
      response_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The response to use
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 2;</code>
     */
    private void mergeResponse(com.google.search.now.wire.feed.ResponseProto.Response value) {
      if (response_ != null &&
          response_ != com.google.search.now.wire.feed.ResponseProto.Response.getDefaultInstance()) {
        response_ =
          com.google.search.now.wire.feed.ResponseProto.Response.newBuilder(response_).mergeFrom(value).buildPartial();
      } else {
        response_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * The response to use
     * </pre>
     *
     * <code>optional .search.now.wire.feed.Response response = 2;</code>
     */
    private void clearResponse() {  response_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, continuationToken_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getResponse());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, continuationToken_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getResponse());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Conditional responses are served based upon a continuation token.
     * </pre>
     *
     * Protobuf type {@code search.now.wire.feed.mockserver.ConditionalResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:search.now.wire.feed.mockserver.ConditionalResponse)
        com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponseOrBuilder {
      // Construct using com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The continuation token in the request must match this value
       * </pre>
       *
       * <code>optional bytes continuation_token = 1;</code>
       */
      public boolean hasContinuationToken() {
        return instance.hasContinuationToken();
      }
      /**
       * <pre>
       * The continuation token in the request must match this value
       * </pre>
       *
       * <code>optional bytes continuation_token = 1;</code>
       */
      public com.google.protobuf.ByteString getContinuationToken() {
        return instance.getContinuationToken();
      }
      /**
       * <pre>
       * The continuation token in the request must match this value
       * </pre>
       *
       * <code>optional bytes continuation_token = 1;</code>
       */
      public Builder setContinuationToken(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setContinuationToken(value);
        return this;
      }
      /**
       * <pre>
       * The continuation token in the request must match this value
       * </pre>
       *
       * <code>optional bytes continuation_token = 1;</code>
       */
      public Builder clearContinuationToken() {
        copyOnWrite();
        instance.clearContinuationToken();
        return this;
      }

      /**
       * <pre>
       * The response to use
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response response = 2;</code>
       */
      public boolean hasResponse() {
        return instance.hasResponse();
      }
      /**
       * <pre>
       * The response to use
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response response = 2;</code>
       */
      public com.google.search.now.wire.feed.ResponseProto.Response getResponse() {
        return instance.getResponse();
      }
      /**
       * <pre>
       * The response to use
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response response = 2;</code>
       */
      public Builder setResponse(com.google.search.now.wire.feed.ResponseProto.Response value) {
        copyOnWrite();
        instance.setResponse(value);
        return this;
        }
      /**
       * <pre>
       * The response to use
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response response = 2;</code>
       */
      public Builder setResponse(
          com.google.search.now.wire.feed.ResponseProto.Response.Builder builderForValue) {
        copyOnWrite();
        instance.setResponse(builderForValue);
        return this;
      }
      /**
       * <pre>
       * The response to use
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response response = 2;</code>
       */
      public Builder mergeResponse(com.google.search.now.wire.feed.ResponseProto.Response value) {
        copyOnWrite();
        instance.mergeResponse(value);
        return this;
      }
      /**
       * <pre>
       * The response to use
       * </pre>
       *
       * <code>optional .search.now.wire.feed.Response response = 2;</code>
       */
      public Builder clearResponse() {  copyOnWrite();
        instance.clearResponse();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.now.wire.feed.mockserver.ConditionalResponse)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasResponse()) {
            if (!getResponse().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse other = (com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse) arg1;
          continuationToken_ = visitor.visitByteString(
              hasContinuationToken(), continuationToken_,
              other.hasContinuationToken(), other.continuationToken_);
          response_ = visitor.visitMessage(response_, other.response_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  bitField0_ |= 0x00000001;
                  continuationToken_ = input.readBytes();
                  break;
                }
                case 18: {
                  com.google.search.now.wire.feed.ResponseProto.Response.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = response_.toBuilder();
                  }
                  response_ = input.readMessage(com.google.search.now.wire.feed.ResponseProto.Response.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(response_);
                    response_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:search.now.wire.feed.mockserver.ConditionalResponse)
    private static final com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ConditionalResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.search.now.wire.feed.mockserver.MockServerProto.ConditionalResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ConditionalResponse> PARSER;

    public static com.google.protobuf.Parser<ConditionalResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
