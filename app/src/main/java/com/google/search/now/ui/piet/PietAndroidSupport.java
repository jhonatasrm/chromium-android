// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/search/now/ui/piet/piet_android_support.proto

package com.google.search.now.ui.piet;

public final class PietAndroidSupport {
  private PietAndroidSupport() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ShardingControlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:search.now.ui.piet.ShardingControl)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The first slice to render, if this is undefined we will render the
     * full card.
     * </pre>
     *
     * <code>optional int32 start_slice = 1;</code>
     */
    boolean hasStartSlice();
    /**
     * <pre>
     * The first slice to render, if this is undefined we will render the
     * full card.
     * </pre>
     *
     * <code>optional int32 start_slice = 1;</code>
     */
    int getStartSlice();

    /**
     * <pre>
     * The last slice to render.
     * </pre>
     *
     * <code>optional int32 end_slice = 2;</code>
     */
    boolean hasEndSlice();
    /**
     * <pre>
     * The last slice to render.
     * </pre>
     *
     * <code>optional int32 end_slice = 2;</code>
     */
    int getEndSlice();

    /**
     * <pre>
     * If we are rendering a list, this is the first index in the list.
     * </pre>
     *
     * <code>optional int32 list_start = 3;</code>
     */
    boolean hasListStart();
    /**
     * <pre>
     * If we are rendering a list, this is the first index in the list.
     * </pre>
     *
     * <code>optional int32 list_start = 3;</code>
     */
    int getListStart();

    /**
     * <pre>
     * if we are rendering a list, this is the last index in the list.
     * </pre>
     *
     * <code>optional int32 list_end = 4;</code>
     */
    boolean hasListEnd();
    /**
     * <pre>
     * if we are rendering a list, this is the last index in the list.
     * </pre>
     *
     * <code>optional int32 list_end = 4;</code>
     */
    int getListEnd();
  }
  /**
   * <pre>
   * This allows the Host to control the granularity of slices by returning
   * only slices specified instead of generating all the slices within the
   * full Card message.
   * TODO: Is this still relevant?
   * </pre>
   *
   * Protobuf type {@code search.now.ui.piet.ShardingControl}
   */
  public  static final class ShardingControl extends
      com.google.protobuf.GeneratedMessageLite<
          ShardingControl, ShardingControl.Builder> implements
      // @@protoc_insertion_point(message_implements:search.now.ui.piet.ShardingControl)
      ShardingControlOrBuilder {
    private ShardingControl() {
    }
    private int bitField0_;
    public static final int START_SLICE_FIELD_NUMBER = 1;
    private int startSlice_;
    /**
     * <pre>
     * The first slice to render, if this is undefined we will render the
     * full card.
     * </pre>
     *
     * <code>optional int32 start_slice = 1;</code>
     */
    public boolean hasStartSlice() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * The first slice to render, if this is undefined we will render the
     * full card.
     * </pre>
     *
     * <code>optional int32 start_slice = 1;</code>
     */
    public int getStartSlice() {
      return startSlice_;
    }
    /**
     * <pre>
     * The first slice to render, if this is undefined we will render the
     * full card.
     * </pre>
     *
     * <code>optional int32 start_slice = 1;</code>
     */
    private void setStartSlice(int value) {
      bitField0_ |= 0x00000001;
      startSlice_ = value;
    }
    /**
     * <pre>
     * The first slice to render, if this is undefined we will render the
     * full card.
     * </pre>
     *
     * <code>optional int32 start_slice = 1;</code>
     */
    private void clearStartSlice() {
      bitField0_ = (bitField0_ & ~0x00000001);
      startSlice_ = 0;
    }

    public static final int END_SLICE_FIELD_NUMBER = 2;
    private int endSlice_;
    /**
     * <pre>
     * The last slice to render.
     * </pre>
     *
     * <code>optional int32 end_slice = 2;</code>
     */
    public boolean hasEndSlice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * The last slice to render.
     * </pre>
     *
     * <code>optional int32 end_slice = 2;</code>
     */
    public int getEndSlice() {
      return endSlice_;
    }
    /**
     * <pre>
     * The last slice to render.
     * </pre>
     *
     * <code>optional int32 end_slice = 2;</code>
     */
    private void setEndSlice(int value) {
      bitField0_ |= 0x00000002;
      endSlice_ = value;
    }
    /**
     * <pre>
     * The last slice to render.
     * </pre>
     *
     * <code>optional int32 end_slice = 2;</code>
     */
    private void clearEndSlice() {
      bitField0_ = (bitField0_ & ~0x00000002);
      endSlice_ = 0;
    }

    public static final int LIST_START_FIELD_NUMBER = 3;
    private int listStart_;
    /**
     * <pre>
     * If we are rendering a list, this is the first index in the list.
     * </pre>
     *
     * <code>optional int32 list_start = 3;</code>
     */
    public boolean hasListStart() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * If we are rendering a list, this is the first index in the list.
     * </pre>
     *
     * <code>optional int32 list_start = 3;</code>
     */
    public int getListStart() {
      return listStart_;
    }
    /**
     * <pre>
     * If we are rendering a list, this is the first index in the list.
     * </pre>
     *
     * <code>optional int32 list_start = 3;</code>
     */
    private void setListStart(int value) {
      bitField0_ |= 0x00000004;
      listStart_ = value;
    }
    /**
     * <pre>
     * If we are rendering a list, this is the first index in the list.
     * </pre>
     *
     * <code>optional int32 list_start = 3;</code>
     */
    private void clearListStart() {
      bitField0_ = (bitField0_ & ~0x00000004);
      listStart_ = 0;
    }

    public static final int LIST_END_FIELD_NUMBER = 4;
    private int listEnd_;
    /**
     * <pre>
     * if we are rendering a list, this is the last index in the list.
     * </pre>
     *
     * <code>optional int32 list_end = 4;</code>
     */
    public boolean hasListEnd() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * if we are rendering a list, this is the last index in the list.
     * </pre>
     *
     * <code>optional int32 list_end = 4;</code>
     */
    public int getListEnd() {
      return listEnd_;
    }
    /**
     * <pre>
     * if we are rendering a list, this is the last index in the list.
     * </pre>
     *
     * <code>optional int32 list_end = 4;</code>
     */
    private void setListEnd(int value) {
      bitField0_ |= 0x00000008;
      listEnd_ = value;
    }
    /**
     * <pre>
     * if we are rendering a list, this is the last index in the list.
     * </pre>
     *
     * <code>optional int32 list_end = 4;</code>
     */
    private void clearListEnd() {
      bitField0_ = (bitField0_ & ~0x00000008);
      listEnd_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, startSlice_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, endSlice_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, listStart_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, listEnd_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, startSlice_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, endSlice_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, listStart_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, listEnd_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * This allows the Host to control the granularity of slices by returning
     * only slices specified instead of generating all the slices within the
     * full Card message.
     * TODO: Is this still relevant?
     * </pre>
     *
     * Protobuf type {@code search.now.ui.piet.ShardingControl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl, Builder> implements
        // @@protoc_insertion_point(builder_implements:search.now.ui.piet.ShardingControl)
        com.google.search.now.ui.piet.PietAndroidSupport.ShardingControlOrBuilder {
      // Construct using com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The first slice to render, if this is undefined we will render the
       * full card.
       * </pre>
       *
       * <code>optional int32 start_slice = 1;</code>
       */
      public boolean hasStartSlice() {
        return instance.hasStartSlice();
      }
      /**
       * <pre>
       * The first slice to render, if this is undefined we will render the
       * full card.
       * </pre>
       *
       * <code>optional int32 start_slice = 1;</code>
       */
      public int getStartSlice() {
        return instance.getStartSlice();
      }
      /**
       * <pre>
       * The first slice to render, if this is undefined we will render the
       * full card.
       * </pre>
       *
       * <code>optional int32 start_slice = 1;</code>
       */
      public Builder setStartSlice(int value) {
        copyOnWrite();
        instance.setStartSlice(value);
        return this;
      }
      /**
       * <pre>
       * The first slice to render, if this is undefined we will render the
       * full card.
       * </pre>
       *
       * <code>optional int32 start_slice = 1;</code>
       */
      public Builder clearStartSlice() {
        copyOnWrite();
        instance.clearStartSlice();
        return this;
      }

      /**
       * <pre>
       * The last slice to render.
       * </pre>
       *
       * <code>optional int32 end_slice = 2;</code>
       */
      public boolean hasEndSlice() {
        return instance.hasEndSlice();
      }
      /**
       * <pre>
       * The last slice to render.
       * </pre>
       *
       * <code>optional int32 end_slice = 2;</code>
       */
      public int getEndSlice() {
        return instance.getEndSlice();
      }
      /**
       * <pre>
       * The last slice to render.
       * </pre>
       *
       * <code>optional int32 end_slice = 2;</code>
       */
      public Builder setEndSlice(int value) {
        copyOnWrite();
        instance.setEndSlice(value);
        return this;
      }
      /**
       * <pre>
       * The last slice to render.
       * </pre>
       *
       * <code>optional int32 end_slice = 2;</code>
       */
      public Builder clearEndSlice() {
        copyOnWrite();
        instance.clearEndSlice();
        return this;
      }

      /**
       * <pre>
       * If we are rendering a list, this is the first index in the list.
       * </pre>
       *
       * <code>optional int32 list_start = 3;</code>
       */
      public boolean hasListStart() {
        return instance.hasListStart();
      }
      /**
       * <pre>
       * If we are rendering a list, this is the first index in the list.
       * </pre>
       *
       * <code>optional int32 list_start = 3;</code>
       */
      public int getListStart() {
        return instance.getListStart();
      }
      /**
       * <pre>
       * If we are rendering a list, this is the first index in the list.
       * </pre>
       *
       * <code>optional int32 list_start = 3;</code>
       */
      public Builder setListStart(int value) {
        copyOnWrite();
        instance.setListStart(value);
        return this;
      }
      /**
       * <pre>
       * If we are rendering a list, this is the first index in the list.
       * </pre>
       *
       * <code>optional int32 list_start = 3;</code>
       */
      public Builder clearListStart() {
        copyOnWrite();
        instance.clearListStart();
        return this;
      }

      /**
       * <pre>
       * if we are rendering a list, this is the last index in the list.
       * </pre>
       *
       * <code>optional int32 list_end = 4;</code>
       */
      public boolean hasListEnd() {
        return instance.hasListEnd();
      }
      /**
       * <pre>
       * if we are rendering a list, this is the last index in the list.
       * </pre>
       *
       * <code>optional int32 list_end = 4;</code>
       */
      public int getListEnd() {
        return instance.getListEnd();
      }
      /**
       * <pre>
       * if we are rendering a list, this is the last index in the list.
       * </pre>
       *
       * <code>optional int32 list_end = 4;</code>
       */
      public Builder setListEnd(int value) {
        copyOnWrite();
        instance.setListEnd(value);
        return this;
      }
      /**
       * <pre>
       * if we are rendering a list, this is the last index in the list.
       * </pre>
       *
       * <code>optional int32 list_end = 4;</code>
       */
      public Builder clearListEnd() {
        copyOnWrite();
        instance.clearListEnd();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.now.ui.piet.ShardingControl)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl other = (com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl) arg1;
          startSlice_ = visitor.visitInt(
              hasStartSlice(), startSlice_,
              other.hasStartSlice(), other.startSlice_);
          endSlice_ = visitor.visitInt(
              hasEndSlice(), endSlice_,
              other.hasEndSlice(), other.endSlice_);
          listStart_ = visitor.visitInt(
              hasListStart(), listStart_,
              other.hasListStart(), other.listStart_);
          listEnd_ = visitor.visitInt(
              hasListEnd(), listEnd_,
              other.hasListEnd(), other.listEnd_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  startSlice_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  endSlice_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  listStart_ = input.readInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  listEnd_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:search.now.ui.piet.ShardingControl)
    private static final com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ShardingControl();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.search.now.ui.piet.PietAndroidSupport.ShardingControl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ShardingControl> PARSER;

    public static com.google.protobuf.Parser<ShardingControl> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
