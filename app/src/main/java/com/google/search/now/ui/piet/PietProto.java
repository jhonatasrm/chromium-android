// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/search/now/ui/piet/piet.proto

package com.google.search.now.ui.piet;

public final class PietProto {
  private PietProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface FrameOrBuilder extends 
      // @@protoc_insertion_point(interface_extends:search.now.ui.piet.Frame)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                Frame, Frame.Builder> {

    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     */
    boolean hasTag();
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     */
    java.lang.String getTag();
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     */
    com.google.protobuf.ByteString
        getTagBytes();

    /**
     * <pre>
     * If this is defined the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    boolean hasStylesheetId();
    /**
     * <pre>
     * If this is defined the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    java.lang.String getStylesheetId();
    /**
     * <pre>
     * If this is defined the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getStylesheetIdBytes();

    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    boolean hasStylesheet();
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    com.google.search.now.ui.piet.PietProto.Stylesheet getStylesheet();

    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    boolean hasStyleReferences();
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    com.google.search.now.ui.piet.StylesProto.StyleIdsStack getStyleReferences();

    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    java.util.List<com.google.search.now.ui.piet.PietProto.Template> 
        getTemplatesList();
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    com.google.search.now.ui.piet.PietProto.Template getTemplates(int index);
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    int getTemplatesCount();

    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    java.util.List<com.google.search.now.ui.piet.ElementsProto.Content> 
        getContentsList();
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    com.google.search.now.ui.piet.ElementsProto.Content getContents(int index);
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    int getContentsCount();

    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
     */
    boolean hasActions();
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
     */
    com.google.search.now.ui.piet.ActionsProto.Actions getActions();

    /**
     * <pre>
     * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
     * logged Visual Element corresponding to this Frame.
     * </pre>
     *
     * <code>optional string ved = 8;</code>
     */
    boolean hasVed();
    /**
     * <pre>
     * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
     * logged Visual Element corresponding to this Frame.
     * </pre>
     *
     * <code>optional string ved = 8;</code>
     */
    java.lang.String getVed();
    /**
     * <pre>
     * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
     * logged Visual Element corresponding to this Frame.
     * </pre>
     *
     * <code>optional string ved = 8;</code>
     */
    com.google.protobuf.ByteString
        getVedBytes();

    public com.google.search.now.ui.piet.PietProto.Frame.FrameStyleScopeCase getFrameStyleScopeCase();
  }
  /**
   * <pre>
   * A Frame is the top-level UI construct in Piet. Every layout is contained
   * within a Frame. Each frame defines the contents displayed to the user as a
   * single view, which may contain a complex set of child views.
   * </pre>
   *
   * Protobuf type {@code search.now.ui.piet.Frame}
   */
  public  static final class Frame extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        Frame, Frame.Builder> implements
      // @@protoc_insertion_point(message_implements:search.now.ui.piet.Frame)
      FrameOrBuilder {
    private Frame() {
      tag_ = "";
      templates_ = emptyProtobufList();
      contents_ = emptyProtobufList();
      ved_ = "";
    }
    private int bitField0_;
    private int frameStyleScopeCase_ = 0;
    private java.lang.Object frameStyleScope_;
    public enum FrameStyleScopeCase
        implements com.google.protobuf.Internal.EnumLite {
      STYLESHEET_ID(2),
      STYLESHEET(3),
      FRAMESTYLESCOPE_NOT_SET(0);
      private final int value;
      private FrameStyleScopeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FrameStyleScopeCase valueOf(int value) {
        return forNumber(value);
      }

      public static FrameStyleScopeCase forNumber(int value) {
        switch (value) {
          case 2: return STYLESHEET_ID;
          case 3: return STYLESHEET;
          case 0: return FRAMESTYLESCOPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public FrameStyleScopeCase
    getFrameStyleScopeCase() {
      return FrameStyleScopeCase.forNumber(
          frameStyleScopeCase_);
    }

    private void clearFrameStyleScope() {
      frameStyleScopeCase_ = 0;
      frameStyleScope_ = null;
    }

    public static final int TAG_FIELD_NUMBER = 1;
    private java.lang.String tag_;
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     */
    public boolean hasTag() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     */
    public java.lang.String getTag() {
      return tag_;
    }
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTagBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(tag_);
    }
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     */
    private void setTag(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      tag_ = value;
    }
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     */
    private void clearTag() {
      bitField0_ = (bitField0_ & ~0x00000001);
      tag_ = getDefaultInstance().getTag();
    }
    /**
     * <pre>
     * A string tag for the frame, currently used for debugging purposes. Need not
     * be unique.
     * </pre>
     *
     * <code>optional string tag = 1;</code>
     */
    private void setTagBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      tag_ = value.toStringUtf8();
    }

    public static final int STYLESHEET_ID_FIELD_NUMBER = 2;
    /**
     * <pre>
     * If this is defined the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    public boolean hasStylesheetId() {
      return frameStyleScopeCase_ == 2;
    }
    /**
     * <pre>
     * If this is defined the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    public java.lang.String getStylesheetId() {
      java.lang.String ref = "";
      if (frameStyleScopeCase_ == 2) {
        ref = (java.lang.String) frameStyleScope_;
      }
      return ref;
    }
    /**
     * <pre>
     * If this is defined the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStylesheetIdBytes() {
      java.lang.String ref = "";
      if (frameStyleScopeCase_ == 2) {
        ref = (java.lang.String) frameStyleScope_;
      }
      return com.google.protobuf.ByteString.copyFromUtf8(ref);
    }
    /**
     * <pre>
     * If this is defined the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    private void setStylesheetId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  frameStyleScopeCase_ = 2;
      frameStyleScope_ = value;
    }
    /**
     * <pre>
     * If this is defined the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    private void clearStylesheetId() {
      if (frameStyleScopeCase_ == 2) {
        frameStyleScopeCase_ = 0;
        frameStyleScope_ = null;
      }
    }
    /**
     * <pre>
     * If this is defined the Stylesheet for the Frame is found by a lookup
     * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    private void setStylesheetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  frameStyleScopeCase_ = 2;
      frameStyleScope_ = value.toStringUtf8();
    }

    public static final int STYLESHEET_FIELD_NUMBER = 3;
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    public boolean hasStylesheet() {
      return frameStyleScopeCase_ == 3;
    }
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    public com.google.search.now.ui.piet.PietProto.Stylesheet getStylesheet() {
      if (frameStyleScopeCase_ == 3) {
         return (com.google.search.now.ui.piet.PietProto.Stylesheet) frameStyleScope_;
      }
      return com.google.search.now.ui.piet.PietProto.Stylesheet.getDefaultInstance();
    }
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    private void setStylesheet(com.google.search.now.ui.piet.PietProto.Stylesheet value) {
      if (value == null) {
        throw new NullPointerException();
      }
      frameStyleScope_ = value;
      frameStyleScopeCase_ = 3;
    }
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    private void setStylesheet(
        com.google.search.now.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
      frameStyleScope_ = builderForValue.build();
      frameStyleScopeCase_ = 3;
    }
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    private void mergeStylesheet(com.google.search.now.ui.piet.PietProto.Stylesheet value) {
      if (frameStyleScopeCase_ == 3 &&
          frameStyleScope_ != com.google.search.now.ui.piet.PietProto.Stylesheet.getDefaultInstance()) {
        frameStyleScope_ = com.google.search.now.ui.piet.PietProto.Stylesheet.newBuilder((com.google.search.now.ui.piet.PietProto.Stylesheet) frameStyleScope_)
            .mergeFrom(value).buildPartial();
      } else {
        frameStyleScope_ = value;
      }
      frameStyleScopeCase_ = 3;
    }
    /**
     * <pre>
     * A local Stylesheet that provides styles used by Elements in this Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    private void clearStylesheet() {
      if (frameStyleScopeCase_ == 3) {
        frameStyleScopeCase_ = 0;
        frameStyleScope_ = null;
      }
    }

    public static final int STYLE_REFERENCES_FIELD_NUMBER = 4;
    private com.google.search.now.ui.piet.StylesProto.StyleIdsStack styleReferences_;
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    public boolean hasStyleReferences() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    public com.google.search.now.ui.piet.StylesProto.StyleIdsStack getStyleReferences() {
      return styleReferences_ == null ? com.google.search.now.ui.piet.StylesProto.StyleIdsStack.getDefaultInstance() : styleReferences_;
    }
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    private void setStyleReferences(com.google.search.now.ui.piet.StylesProto.StyleIdsStack value) {
      if (value == null) {
        throw new NullPointerException();
      }
      styleReferences_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    private void setStyleReferences(
        com.google.search.now.ui.piet.StylesProto.StyleIdsStack.Builder builderForValue) {
      styleReferences_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    private void mergeStyleReferences(com.google.search.now.ui.piet.StylesProto.StyleIdsStack value) {
      if (styleReferences_ != null &&
          styleReferences_ != com.google.search.now.ui.piet.StylesProto.StyleIdsStack.getDefaultInstance()) {
        styleReferences_ =
          com.google.search.now.ui.piet.StylesProto.StyleIdsStack.newBuilder(styleReferences_).mergeFrom(value).buildPartial();
      } else {
        styleReferences_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * Styles applied to this Frame. If any style_ids cannot be found,
     * ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
     */
    private void clearStyleReferences() {  styleReferences_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int TEMPLATES_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<com.google.search.now.ui.piet.PietProto.Template> templates_;
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    public java.util.List<com.google.search.now.ui.piet.PietProto.Template> getTemplatesList() {
      return templates_;
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    public java.util.List<? extends com.google.search.now.ui.piet.PietProto.TemplateOrBuilder> 
        getTemplatesOrBuilderList() {
      return templates_;
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    public int getTemplatesCount() {
      return templates_.size();
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    public com.google.search.now.ui.piet.PietProto.Template getTemplates(int index) {
      return templates_.get(index);
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    public com.google.search.now.ui.piet.PietProto.TemplateOrBuilder getTemplatesOrBuilder(
        int index) {
      return templates_.get(index);
    }
    private void ensureTemplatesIsMutable() {
      if (!templates_.isModifiable()) {
        templates_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(templates_);
       }
    }

    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    private void setTemplates(
        int index, com.google.search.now.ui.piet.PietProto.Template value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTemplatesIsMutable();
      templates_.set(index, value);
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    private void setTemplates(
        int index, com.google.search.now.ui.piet.PietProto.Template.Builder builderForValue) {
      ensureTemplatesIsMutable();
      templates_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    private void addTemplates(com.google.search.now.ui.piet.PietProto.Template value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTemplatesIsMutable();
      templates_.add(value);
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    private void addTemplates(
        int index, com.google.search.now.ui.piet.PietProto.Template value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTemplatesIsMutable();
      templates_.add(index, value);
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    private void addTemplates(
        com.google.search.now.ui.piet.PietProto.Template.Builder builderForValue) {
      ensureTemplatesIsMutable();
      templates_.add(builderForValue.build());
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    private void addTemplates(
        int index, com.google.search.now.ui.piet.PietProto.Template.Builder builderForValue) {
      ensureTemplatesIsMutable();
      templates_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    private void addAllTemplates(
        java.lang.Iterable<? extends com.google.search.now.ui.piet.PietProto.Template> values) {
      ensureTemplatesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, templates_);
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    private void clearTemplates() {
      templates_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Templates that are available for use within the scope of this Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
     */
    private void removeTemplates(int index) {
      ensureTemplatesIsMutable();
      templates_.remove(index);
    }

    public static final int CONTENTS_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.ProtobufList<com.google.search.now.ui.piet.ElementsProto.Content> contents_;
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    public java.util.List<com.google.search.now.ui.piet.ElementsProto.Content> getContentsList() {
      return contents_;
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    public java.util.List<? extends com.google.search.now.ui.piet.ElementsProto.ContentOrBuilder> 
        getContentsOrBuilderList() {
      return contents_;
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    public int getContentsCount() {
      return contents_.size();
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    public com.google.search.now.ui.piet.ElementsProto.Content getContents(int index) {
      return contents_.get(index);
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    public com.google.search.now.ui.piet.ElementsProto.ContentOrBuilder getContentsOrBuilder(
        int index) {
      return contents_.get(index);
    }
    private void ensureContentsIsMutable() {
      if (!contents_.isModifiable()) {
        contents_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(contents_);
       }
    }

    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    private void setContents(
        int index, com.google.search.now.ui.piet.ElementsProto.Content value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureContentsIsMutable();
      contents_.set(index, value);
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    private void setContents(
        int index, com.google.search.now.ui.piet.ElementsProto.Content.Builder builderForValue) {
      ensureContentsIsMutable();
      contents_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    private void addContents(com.google.search.now.ui.piet.ElementsProto.Content value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureContentsIsMutable();
      contents_.add(value);
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    private void addContents(
        int index, com.google.search.now.ui.piet.ElementsProto.Content value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureContentsIsMutable();
      contents_.add(index, value);
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    private void addContents(
        com.google.search.now.ui.piet.ElementsProto.Content.Builder builderForValue) {
      ensureContentsIsMutable();
      contents_.add(builderForValue.build());
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    private void addContents(
        int index, com.google.search.now.ui.piet.ElementsProto.Content.Builder builderForValue) {
      ensureContentsIsMutable();
      contents_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    private void addAllContents(
        java.lang.Iterable<? extends com.google.search.now.ui.piet.ElementsProto.Content> values) {
      ensureContentsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, contents_);
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    private void clearContents() {
      contents_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Content that makes up this Frame.
     * There are a few differences in the use of Content here vs. elsewhere:
     *  - These Contents are arranged in a vertical list layout.
     *  - Bindings are not supported in these Contents, since there is no
     *    BindingContext available at the Frame level.
     *  - These Contents support sharding: each of these Contents can be recycled
     *    as it leaves the screen, to reduce memory usage when scrolling a very
     *    long Frame.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
     */
    private void removeContents(int index) {
      ensureContentsIsMutable();
      contents_.remove(index);
    }

    public static final int ACTIONS_FIELD_NUMBER = 7;
    private com.google.search.now.ui.piet.ActionsProto.Actions actions_;
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
     */
    public boolean hasActions() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
     */
    public com.google.search.now.ui.piet.ActionsProto.Actions getActions() {
      return actions_ == null ? com.google.search.now.ui.piet.ActionsProto.Actions.getDefaultInstance() : actions_;
    }
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
     */
    private void setActions(com.google.search.now.ui.piet.ActionsProto.Actions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      actions_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
     */
    private void setActions(
        com.google.search.now.ui.piet.ActionsProto.Actions.Builder builderForValue) {
      actions_ = builderForValue.build();
      bitField0_ |= 0x00000010;
    }
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
     */
    private void mergeActions(com.google.search.now.ui.piet.ActionsProto.Actions value) {
      if (actions_ != null &&
          actions_ != com.google.search.now.ui.piet.ActionsProto.Actions.getDefaultInstance()) {
        actions_ =
          com.google.search.now.ui.piet.ActionsProto.Actions.newBuilder(actions_).mergeFrom(value).buildPartial();
      } else {
        actions_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <pre>
     * Actions associated with the full Frame.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
     */
    private void clearActions() {  actions_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int VED_FIELD_NUMBER = 8;
    private java.lang.String ved_;
    /**
     * <pre>
     * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
     * logged Visual Element corresponding to this Frame.
     * </pre>
     *
     * <code>optional string ved = 8;</code>
     */
    public boolean hasVed() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
     * logged Visual Element corresponding to this Frame.
     * </pre>
     *
     * <code>optional string ved = 8;</code>
     */
    public java.lang.String getVed() {
      return ved_;
    }
    /**
     * <pre>
     * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
     * logged Visual Element corresponding to this Frame.
     * </pre>
     *
     * <code>optional string ved = 8;</code>
     */
    public com.google.protobuf.ByteString
        getVedBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ved_);
    }
    /**
     * <pre>
     * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
     * logged Visual Element corresponding to this Frame.
     * </pre>
     *
     * <code>optional string ved = 8;</code>
     */
    private void setVed(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      ved_ = value;
    }
    /**
     * <pre>
     * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
     * logged Visual Element corresponding to this Frame.
     * </pre>
     *
     * <code>optional string ved = 8;</code>
     */
    private void clearVed() {
      bitField0_ = (bitField0_ & ~0x00000020);
      ved_ = getDefaultInstance().getVed();
    }
    /**
     * <pre>
     * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
     * logged Visual Element corresponding to this Frame.
     * </pre>
     *
     * <code>optional string ved = 8;</code>
     */
    private void setVedBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      ved_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.search.now.ui.piet.PietProto.Frame, com.google.search.now.ui.piet.PietProto.Frame.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getTag());
      }
      if (frameStyleScopeCase_ == 2) {
        output.writeString(2, getStylesheetId());
      }
      if (frameStyleScopeCase_ == 3) {
        output.writeMessage(3, (com.google.search.now.ui.piet.PietProto.Stylesheet) frameStyleScope_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getStyleReferences());
      }
      for (int i = 0; i < templates_.size(); i++) {
        output.writeMessage(5, templates_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(7, getActions());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeString(8, getVed());
      }
      for (int i = 0; i < contents_.size(); i++) {
        output.writeMessage(10, contents_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getTag());
      }
      if (frameStyleScopeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getStylesheetId());
      }
      if (frameStyleScopeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.google.search.now.ui.piet.PietProto.Stylesheet) frameStyleScope_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getStyleReferences());
      }
      for (int i = 0; i < templates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, templates_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getActions());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getVed());
      }
      for (int i = 0; i < contents_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, contents_.get(i));
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.search.now.ui.piet.PietProto.Frame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.PietProto.Frame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.Frame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.PietProto.Frame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.Frame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietProto.Frame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.Frame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietProto.Frame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.Frame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietProto.Frame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.search.now.ui.piet.PietProto.Frame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A Frame is the top-level UI construct in Piet. Every layout is contained
     * within a Frame. Each frame defines the contents displayed to the user as a
     * single view, which may contain a complex set of child views.
     * </pre>
     *
     * Protobuf type {@code search.now.ui.piet.Frame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.search.now.ui.piet.PietProto.Frame, Builder> implements
        // @@protoc_insertion_point(builder_implements:search.now.ui.piet.Frame)
        com.google.search.now.ui.piet.PietProto.FrameOrBuilder {
      // Construct using com.google.search.now.ui.piet.PietProto.Frame.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public FrameStyleScopeCase
          getFrameStyleScopeCase() {
        return instance.getFrameStyleScopeCase();
      }

      public Builder clearFrameStyleScope() {
        copyOnWrite();
        instance.clearFrameStyleScope();
        return this;
      }


      /**
       * <pre>
       * A string tag for the frame, currently used for debugging purposes. Need not
       * be unique.
       * </pre>
       *
       * <code>optional string tag = 1;</code>
       */
      public boolean hasTag() {
        return instance.hasTag();
      }
      /**
       * <pre>
       * A string tag for the frame, currently used for debugging purposes. Need not
       * be unique.
       * </pre>
       *
       * <code>optional string tag = 1;</code>
       */
      public java.lang.String getTag() {
        return instance.getTag();
      }
      /**
       * <pre>
       * A string tag for the frame, currently used for debugging purposes. Need not
       * be unique.
       * </pre>
       *
       * <code>optional string tag = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTagBytes() {
        return instance.getTagBytes();
      }
      /**
       * <pre>
       * A string tag for the frame, currently used for debugging purposes. Need not
       * be unique.
       * </pre>
       *
       * <code>optional string tag = 1;</code>
       */
      public Builder setTag(
          java.lang.String value) {
        copyOnWrite();
        instance.setTag(value);
        return this;
      }
      /**
       * <pre>
       * A string tag for the frame, currently used for debugging purposes. Need not
       * be unique.
       * </pre>
       *
       * <code>optional string tag = 1;</code>
       */
      public Builder clearTag() {
        copyOnWrite();
        instance.clearTag();
        return this;
      }
      /**
       * <pre>
       * A string tag for the frame, currently used for debugging purposes. Need not
       * be unique.
       * </pre>
       *
       * <code>optional string tag = 1;</code>
       */
      public Builder setTagBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTagBytes(value);
        return this;
      }

      /**
       * <pre>
       * If this is defined the Stylesheet for the Frame is found by a lookup
       * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>optional string stylesheet_id = 2;</code>
       */
      public boolean hasStylesheetId() {
        return instance.hasStylesheetId();
      }
      /**
       * <pre>
       * If this is defined the Stylesheet for the Frame is found by a lookup
       * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>optional string stylesheet_id = 2;</code>
       */
      public java.lang.String getStylesheetId() {
        return instance.getStylesheetId();
      }
      /**
       * <pre>
       * If this is defined the Stylesheet for the Frame is found by a lookup
       * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>optional string stylesheet_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStylesheetIdBytes() {
        return instance.getStylesheetIdBytes();
      }
      /**
       * <pre>
       * If this is defined the Stylesheet for the Frame is found by a lookup
       * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>optional string stylesheet_id = 2;</code>
       */
      public Builder setStylesheetId(
          java.lang.String value) {
        copyOnWrite();
        instance.setStylesheetId(value);
        return this;
      }
      /**
       * <pre>
       * If this is defined the Stylesheet for the Frame is found by a lookup
       * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>optional string stylesheet_id = 2;</code>
       */
      public Builder clearStylesheetId() {
        copyOnWrite();
        instance.clearStylesheetId();
        return this;
      }
      /**
       * <pre>
       * If this is defined the Stylesheet for the Frame is found by a lookup
       * in PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>optional string stylesheet_id = 2;</code>
       */
      public Builder setStylesheetIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStylesheetIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * A local Stylesheet that provides styles used by Elements in this Frame.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
       */
      public boolean hasStylesheet() {
        return instance.hasStylesheet();
      }
      /**
       * <pre>
       * A local Stylesheet that provides styles used by Elements in this Frame.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
       */
      public com.google.search.now.ui.piet.PietProto.Stylesheet getStylesheet() {
        return instance.getStylesheet();
      }
      /**
       * <pre>
       * A local Stylesheet that provides styles used by Elements in this Frame.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
       */
      public Builder setStylesheet(com.google.search.now.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.setStylesheet(value);
        return this;
      }
      /**
       * <pre>
       * A local Stylesheet that provides styles used by Elements in this Frame.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
       */
      public Builder setStylesheet(
          com.google.search.now.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.setStylesheet(builderForValue);
        return this;
      }
      /**
       * <pre>
       * A local Stylesheet that provides styles used by Elements in this Frame.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
       */
      public Builder mergeStylesheet(com.google.search.now.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.mergeStylesheet(value);
        return this;
      }
      /**
       * <pre>
       * A local Stylesheet that provides styles used by Elements in this Frame.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
       */
      public Builder clearStylesheet() {
        copyOnWrite();
        instance.clearStylesheet();
        return this;
      }

      /**
       * <pre>
       * Styles applied to this Frame. If any style_ids cannot be found,
       * ERR_MISSING_STYLES is raised.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
       */
      public boolean hasStyleReferences() {
        return instance.hasStyleReferences();
      }
      /**
       * <pre>
       * Styles applied to this Frame. If any style_ids cannot be found,
       * ERR_MISSING_STYLES is raised.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
       */
      public com.google.search.now.ui.piet.StylesProto.StyleIdsStack getStyleReferences() {
        return instance.getStyleReferences();
      }
      /**
       * <pre>
       * Styles applied to this Frame. If any style_ids cannot be found,
       * ERR_MISSING_STYLES is raised.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
       */
      public Builder setStyleReferences(com.google.search.now.ui.piet.StylesProto.StyleIdsStack value) {
        copyOnWrite();
        instance.setStyleReferences(value);
        return this;
        }
      /**
       * <pre>
       * Styles applied to this Frame. If any style_ids cannot be found,
       * ERR_MISSING_STYLES is raised.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
       */
      public Builder setStyleReferences(
          com.google.search.now.ui.piet.StylesProto.StyleIdsStack.Builder builderForValue) {
        copyOnWrite();
        instance.setStyleReferences(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Styles applied to this Frame. If any style_ids cannot be found,
       * ERR_MISSING_STYLES is raised.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
       */
      public Builder mergeStyleReferences(com.google.search.now.ui.piet.StylesProto.StyleIdsStack value) {
        copyOnWrite();
        instance.mergeStyleReferences(value);
        return this;
      }
      /**
       * <pre>
       * Styles applied to this Frame. If any style_ids cannot be found,
       * ERR_MISSING_STYLES is raised.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.StyleIdsStack style_references = 4;</code>
       */
      public Builder clearStyleReferences() {  copyOnWrite();
        instance.clearStyleReferences();
        return this;
      }

      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
       */
      public java.util.List<com.google.search.now.ui.piet.PietProto.Template> getTemplatesList() {
        return java.util.Collections.unmodifiableList(
            instance.getTemplatesList());
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
       */
      public int getTemplatesCount() {
        return instance.getTemplatesCount();
      }/**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
       */
      public com.google.search.now.ui.piet.PietProto.Template getTemplates(int index) {
        return instance.getTemplates(index);
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
       */
      public Builder setTemplates(
          int index, com.google.search.now.ui.piet.PietProto.Template value) {
        copyOnWrite();
        instance.setTemplates(index, value);
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
       */
      public Builder setTemplates(
          int index, com.google.search.now.ui.piet.PietProto.Template.Builder builderForValue) {
        copyOnWrite();
        instance.setTemplates(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
       */
      public Builder addTemplates(com.google.search.now.ui.piet.PietProto.Template value) {
        copyOnWrite();
        instance.addTemplates(value);
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
       */
      public Builder addTemplates(
          int index, com.google.search.now.ui.piet.PietProto.Template value) {
        copyOnWrite();
        instance.addTemplates(index, value);
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
       */
      public Builder addTemplates(
          com.google.search.now.ui.piet.PietProto.Template.Builder builderForValue) {
        copyOnWrite();
        instance.addTemplates(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
       */
      public Builder addTemplates(
          int index, com.google.search.now.ui.piet.PietProto.Template.Builder builderForValue) {
        copyOnWrite();
        instance.addTemplates(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
       */
      public Builder addAllTemplates(
          java.lang.Iterable<? extends com.google.search.now.ui.piet.PietProto.Template> values) {
        copyOnWrite();
        instance.addAllTemplates(values);
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
       */
      public Builder clearTemplates() {
        copyOnWrite();
        instance.clearTemplates();
        return this;
      }
      /**
       * <pre>
       * Templates that are available for use within the scope of this Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 5;</code>
       */
      public Builder removeTemplates(int index) {
        copyOnWrite();
        instance.removeTemplates(index);
        return this;
      }

      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
       */
      public java.util.List<com.google.search.now.ui.piet.ElementsProto.Content> getContentsList() {
        return java.util.Collections.unmodifiableList(
            instance.getContentsList());
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
       */
      public int getContentsCount() {
        return instance.getContentsCount();
      }/**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
       */
      public com.google.search.now.ui.piet.ElementsProto.Content getContents(int index) {
        return instance.getContents(index);
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
       */
      public Builder setContents(
          int index, com.google.search.now.ui.piet.ElementsProto.Content value) {
        copyOnWrite();
        instance.setContents(index, value);
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
       */
      public Builder setContents(
          int index, com.google.search.now.ui.piet.ElementsProto.Content.Builder builderForValue) {
        copyOnWrite();
        instance.setContents(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
       */
      public Builder addContents(com.google.search.now.ui.piet.ElementsProto.Content value) {
        copyOnWrite();
        instance.addContents(value);
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
       */
      public Builder addContents(
          int index, com.google.search.now.ui.piet.ElementsProto.Content value) {
        copyOnWrite();
        instance.addContents(index, value);
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
       */
      public Builder addContents(
          com.google.search.now.ui.piet.ElementsProto.Content.Builder builderForValue) {
        copyOnWrite();
        instance.addContents(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
       */
      public Builder addContents(
          int index, com.google.search.now.ui.piet.ElementsProto.Content.Builder builderForValue) {
        copyOnWrite();
        instance.addContents(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
       */
      public Builder addAllContents(
          java.lang.Iterable<? extends com.google.search.now.ui.piet.ElementsProto.Content> values) {
        copyOnWrite();
        instance.addAllContents(values);
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
       */
      public Builder clearContents() {
        copyOnWrite();
        instance.clearContents();
        return this;
      }
      /**
       * <pre>
       * Content that makes up this Frame.
       * There are a few differences in the use of Content here vs. elsewhere:
       *  - These Contents are arranged in a vertical list layout.
       *  - Bindings are not supported in these Contents, since there is no
       *    BindingContext available at the Frame level.
       *  - These Contents support sharding: each of these Contents can be recycled
       *    as it leaves the screen, to reduce memory usage when scrolling a very
       *    long Frame.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Content contents = 10;</code>
       */
      public Builder removeContents(int index) {
        copyOnWrite();
        instance.removeContents(index);
        return this;
      }

      /**
       * <pre>
       * Actions associated with the full Frame.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
       */
      public boolean hasActions() {
        return instance.hasActions();
      }
      /**
       * <pre>
       * Actions associated with the full Frame.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
       */
      public com.google.search.now.ui.piet.ActionsProto.Actions getActions() {
        return instance.getActions();
      }
      /**
       * <pre>
       * Actions associated with the full Frame.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
       */
      public Builder setActions(com.google.search.now.ui.piet.ActionsProto.Actions value) {
        copyOnWrite();
        instance.setActions(value);
        return this;
        }
      /**
       * <pre>
       * Actions associated with the full Frame.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
       */
      public Builder setActions(
          com.google.search.now.ui.piet.ActionsProto.Actions.Builder builderForValue) {
        copyOnWrite();
        instance.setActions(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Actions associated with the full Frame.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
       */
      public Builder mergeActions(com.google.search.now.ui.piet.ActionsProto.Actions value) {
        copyOnWrite();
        instance.mergeActions(value);
        return this;
      }
      /**
       * <pre>
       * Actions associated with the full Frame.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Actions actions = 7;</code>
       */
      public Builder clearActions() {  copyOnWrite();
        instance.clearActions();
        return this;
      }

      /**
       * <pre>
       * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
       * logged Visual Element corresponding to this Frame.
       * </pre>
       *
       * <code>optional string ved = 8;</code>
       */
      public boolean hasVed() {
        return instance.hasVed();
      }
      /**
       * <pre>
       * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
       * logged Visual Element corresponding to this Frame.
       * </pre>
       *
       * <code>optional string ved = 8;</code>
       */
      public java.lang.String getVed() {
        return instance.getVed();
      }
      /**
       * <pre>
       * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
       * logged Visual Element corresponding to this Frame.
       * </pre>
       *
       * <code>optional string ved = 8;</code>
       */
      public com.google.protobuf.ByteString
          getVedBytes() {
        return instance.getVedBytes();
      }
      /**
       * <pre>
       * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
       * logged Visual Element corresponding to this Frame.
       * </pre>
       *
       * <code>optional string ved = 8;</code>
       */
      public Builder setVed(
          java.lang.String value) {
        copyOnWrite();
        instance.setVed(value);
        return this;
      }
      /**
       * <pre>
       * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
       * logged Visual Element corresponding to this Frame.
       * </pre>
       *
       * <code>optional string ved = 8;</code>
       */
      public Builder clearVed() {
        copyOnWrite();
        instance.clearVed();
        return this;
      }
      /**
       * <pre>
       * A Base64-encoded serialized ClickTrackingCGI proto that identifies the
       * logged Visual Element corresponding to this Frame.
       * </pre>
       *
       * <code>optional string ved = 8;</code>
       */
      public Builder setVedBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setVedBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.now.ui.piet.Frame)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.search.now.ui.piet.PietProto.Frame();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasStylesheet()) {
            if (!getStylesheet().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasStyleReferences()) {
            if (!getStyleReferences().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getTemplatesCount(); i++) {
            if (!getTemplates(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getContentsCount(); i++) {
            if (!getContents(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasActions()) {
            if (!getActions().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          templates_.makeImmutable();
          contents_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.search.now.ui.piet.PietProto.Frame other = (com.google.search.now.ui.piet.PietProto.Frame) arg1;
          tag_ = visitor.visitString(
              hasTag(), tag_,
              other.hasTag(), other.tag_);
          styleReferences_ = visitor.visitMessage(styleReferences_, other.styleReferences_);
          templates_= visitor.visitList(templates_, other.templates_);
          contents_= visitor.visitList(contents_, other.contents_);
          actions_ = visitor.visitMessage(actions_, other.actions_);
          ved_ = visitor.visitString(
              hasVed(), ved_,
              other.hasVed(), other.ved_);
          switch (other.getFrameStyleScopeCase()) {
            case STYLESHEET_ID: {
              frameStyleScope_ = visitor.visitOneofString(
                 frameStyleScopeCase_ == 2, frameStyleScope_, other.frameStyleScope_);
              break;
            }
            case STYLESHEET: {
              frameStyleScope_ = visitor.visitOneofMessage(
                  frameStyleScopeCase_ == 3,
                  frameStyleScope_,
                  other.frameStyleScope_);
              break;
            }
            case FRAMESTYLESCOPE_NOT_SET: {
              visitor.visitOneofNotSet(frameStyleScopeCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.frameStyleScopeCase_ != 0) {
              frameStyleScopeCase_ = other.frameStyleScopeCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  tag_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  frameStyleScopeCase_ = 2;
                  frameStyleScope_ = s;
                  break;
                }
                case 26: {
                  com.google.search.now.ui.piet.PietProto.Stylesheet.Builder subBuilder = null;
                  if (frameStyleScopeCase_ == 3) {
                    subBuilder = ((com.google.search.now.ui.piet.PietProto.Stylesheet) frameStyleScope_).toBuilder();
                  }
                  frameStyleScope_ =
                       input.readMessage(com.google.search.now.ui.piet.PietProto.Stylesheet.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.google.search.now.ui.piet.PietProto.Stylesheet) frameStyleScope_);
                    frameStyleScope_ = subBuilder.buildPartial();
                  }
                  frameStyleScopeCase_ = 3;
                  break;
                }
                case 34: {
                  com.google.search.now.ui.piet.StylesProto.StyleIdsStack.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = styleReferences_.toBuilder();
                  }
                  styleReferences_ = input.readMessage(com.google.search.now.ui.piet.StylesProto.StyleIdsStack.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(styleReferences_);
                    styleReferences_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 42: {
                  if (!templates_.isModifiable()) {
                    templates_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(templates_);
                  }
                  templates_.add(
                      input.readMessage(com.google.search.now.ui.piet.PietProto.Template.parser(), extensionRegistry));
                  break;
                }
                case 58: {
                  com.google.search.now.ui.piet.ActionsProto.Actions.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    subBuilder = actions_.toBuilder();
                  }
                  actions_ = input.readMessage(com.google.search.now.ui.piet.ActionsProto.Actions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(actions_);
                    actions_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
                case 66: {
                  String s = input.readString();
                  bitField0_ |= 0x00000020;
                  ved_ = s;
                  break;
                }
                case 82: {
                  if (!contents_.isModifiable()) {
                    contents_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(contents_);
                  }
                  contents_.add(
                      input.readMessage(com.google.search.now.ui.piet.ElementsProto.Content.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.search.now.ui.piet.PietProto.Frame.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:search.now.ui.piet.Frame)
    private static final com.google.search.now.ui.piet.PietProto.Frame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Frame();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.search.now.ui.piet.PietProto.Frame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Frame> PARSER;

    public static com.google.protobuf.Parser<Frame> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StylesheetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:search.now.ui.piet.Stylesheet)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     */
    boolean hasStylesheetId();
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     */
    java.lang.String getStylesheetId();
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getStylesheetIdBytes();

    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    java.util.List<com.google.search.now.ui.piet.StylesProto.Style> 
        getStylesList();
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    com.google.search.now.ui.piet.StylesProto.Style getStyles(int index);
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    int getStylesCount();

    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    java.util.List<com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition> 
        getConditionsList();
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition getConditions(int index);
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    int getConditionsCount();
  }
  /**
   * <pre>
   * A set of Styles; each Style must have a style_id that is unique within this
   * Stylesheet. If the same style_id is found twice, ERR_DUPLICATE_STYLES is
   * raised. Stylesheet is scoped to Frames or Templates. When a UI element uses a
   * Style, it is looked up in the Stylesheet within scope. If the style cannot be
   * found, ERR_MISSING_STYLES is raised.
   * </pre>
   *
   * Protobuf type {@code search.now.ui.piet.Stylesheet}
   */
  public  static final class Stylesheet extends
      com.google.protobuf.GeneratedMessageLite<
          Stylesheet, Stylesheet.Builder> implements
      // @@protoc_insertion_point(message_implements:search.now.ui.piet.Stylesheet)
      StylesheetOrBuilder {
    private Stylesheet() {
      stylesheetId_ = "";
      styles_ = emptyProtobufList();
      conditions_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int STYLESHEET_ID_FIELD_NUMBER = 1;
    private java.lang.String stylesheetId_;
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     */
    public boolean hasStylesheetId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     */
    public java.lang.String getStylesheetId() {
      return stylesheetId_;
    }
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getStylesheetIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(stylesheetId_);
    }
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     */
    private void setStylesheetId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      stylesheetId_ = value;
    }
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     */
    private void clearStylesheetId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      stylesheetId_ = getDefaultInstance().getStylesheetId();
    }
    /**
     * <pre>
     * A string uniquely identifying this Stylesheet within the PietSharedState in
     * which it is used. If two Stylesheets with the same stylesheet_id are found
     * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
     * `stylesheet_id` is used to select this Stylesheet using
     * Frame.stylesheet_id.
     * </pre>
     *
     * <code>optional string stylesheet_id = 1;</code>
     */
    private void setStylesheetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      stylesheetId_ = value.toStringUtf8();
    }

    public static final int STYLES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.search.now.ui.piet.StylesProto.Style> styles_;
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    public java.util.List<com.google.search.now.ui.piet.StylesProto.Style> getStylesList() {
      return styles_;
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    public java.util.List<? extends com.google.search.now.ui.piet.StylesProto.StyleOrBuilder> 
        getStylesOrBuilderList() {
      return styles_;
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    public int getStylesCount() {
      return styles_.size();
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    public com.google.search.now.ui.piet.StylesProto.Style getStyles(int index) {
      return styles_.get(index);
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    public com.google.search.now.ui.piet.StylesProto.StyleOrBuilder getStylesOrBuilder(
        int index) {
      return styles_.get(index);
    }
    private void ensureStylesIsMutable() {
      if (!styles_.isModifiable()) {
        styles_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(styles_);
       }
    }

    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    private void setStyles(
        int index, com.google.search.now.ui.piet.StylesProto.Style value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStylesIsMutable();
      styles_.set(index, value);
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    private void setStyles(
        int index, com.google.search.now.ui.piet.StylesProto.Style.Builder builderForValue) {
      ensureStylesIsMutable();
      styles_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    private void addStyles(com.google.search.now.ui.piet.StylesProto.Style value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStylesIsMutable();
      styles_.add(value);
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    private void addStyles(
        int index, com.google.search.now.ui.piet.StylesProto.Style value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStylesIsMutable();
      styles_.add(index, value);
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    private void addStyles(
        com.google.search.now.ui.piet.StylesProto.Style.Builder builderForValue) {
      ensureStylesIsMutable();
      styles_.add(builderForValue.build());
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    private void addStyles(
        int index, com.google.search.now.ui.piet.StylesProto.Style.Builder builderForValue) {
      ensureStylesIsMutable();
      styles_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    private void addAllStyles(
        java.lang.Iterable<? extends com.google.search.now.ui.piet.StylesProto.Style> values) {
      ensureStylesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, styles_);
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    private void clearStyles() {
      styles_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Styles available in this Stylesheet.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
     */
    private void removeStyles(int index) {
      ensureStylesIsMutable();
      styles_.remove(index);
    }

    public static final int CONDITIONS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition> conditions_;
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    public java.util.List<com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition> getConditionsList() {
      return conditions_;
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    public java.util.List<? extends com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryConditionOrBuilder> 
        getConditionsOrBuilderList() {
      return conditions_;
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    public int getConditionsCount() {
      return conditions_.size();
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    public com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition getConditions(int index) {
      return conditions_.get(index);
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    public com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryConditionOrBuilder getConditionsOrBuilder(
        int index) {
      return conditions_.get(index);
    }
    private void ensureConditionsIsMutable() {
      if (!conditions_.isModifiable()) {
        conditions_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(conditions_);
       }
    }

    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void setConditions(
        int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureConditionsIsMutable();
      conditions_.set(index, value);
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void setConditions(
        int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
      ensureConditionsIsMutable();
      conditions_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void addConditions(com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureConditionsIsMutable();
      conditions_.add(value);
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void addConditions(
        int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureConditionsIsMutable();
      conditions_.add(index, value);
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void addConditions(
        com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
      ensureConditionsIsMutable();
      conditions_.add(builderForValue.build());
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void addConditions(
        int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
      ensureConditionsIsMutable();
      conditions_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void addAllConditions(
        java.lang.Iterable<? extends com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition> values) {
      ensureConditionsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, conditions_);
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void clearConditions() {
      conditions_ = emptyProtobufList();
    }
    /**
     * <pre>
     * This Stylesheet is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied,
     * this Stylesheet is treated as if it was never sent, which may cause
     * ERR_STYLESHEET_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
     */
    private void removeConditions(int index) {
      ensureConditionsIsMutable();
      conditions_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getStylesheetId());
      }
      for (int i = 0; i < styles_.size(); i++) {
        output.writeMessage(2, styles_.get(i));
      }
      for (int i = 0; i < conditions_.size(); i++) {
        output.writeMessage(3, conditions_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getStylesheetId());
      }
      for (int i = 0; i < styles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, styles_.get(i));
      }
      for (int i = 0; i < conditions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, conditions_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.search.now.ui.piet.PietProto.Stylesheet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.PietProto.Stylesheet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.Stylesheet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.PietProto.Stylesheet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.Stylesheet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietProto.Stylesheet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.Stylesheet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietProto.Stylesheet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.Stylesheet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietProto.Stylesheet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.search.now.ui.piet.PietProto.Stylesheet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A set of Styles; each Style must have a style_id that is unique within this
     * Stylesheet. If the same style_id is found twice, ERR_DUPLICATE_STYLES is
     * raised. Stylesheet is scoped to Frames or Templates. When a UI element uses a
     * Style, it is looked up in the Stylesheet within scope. If the style cannot be
     * found, ERR_MISSING_STYLES is raised.
     * </pre>
     *
     * Protobuf type {@code search.now.ui.piet.Stylesheet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.search.now.ui.piet.PietProto.Stylesheet, Builder> implements
        // @@protoc_insertion_point(builder_implements:search.now.ui.piet.Stylesheet)
        com.google.search.now.ui.piet.PietProto.StylesheetOrBuilder {
      // Construct using com.google.search.now.ui.piet.PietProto.Stylesheet.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * A string uniquely identifying this Stylesheet within the PietSharedState in
       * which it is used. If two Stylesheets with the same stylesheet_id are found
       * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
       * `stylesheet_id` is used to select this Stylesheet using
       * Frame.stylesheet_id.
       * </pre>
       *
       * <code>optional string stylesheet_id = 1;</code>
       */
      public boolean hasStylesheetId() {
        return instance.hasStylesheetId();
      }
      /**
       * <pre>
       * A string uniquely identifying this Stylesheet within the PietSharedState in
       * which it is used. If two Stylesheets with the same stylesheet_id are found
       * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
       * `stylesheet_id` is used to select this Stylesheet using
       * Frame.stylesheet_id.
       * </pre>
       *
       * <code>optional string stylesheet_id = 1;</code>
       */
      public java.lang.String getStylesheetId() {
        return instance.getStylesheetId();
      }
      /**
       * <pre>
       * A string uniquely identifying this Stylesheet within the PietSharedState in
       * which it is used. If two Stylesheets with the same stylesheet_id are found
       * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
       * `stylesheet_id` is used to select this Stylesheet using
       * Frame.stylesheet_id.
       * </pre>
       *
       * <code>optional string stylesheet_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStylesheetIdBytes() {
        return instance.getStylesheetIdBytes();
      }
      /**
       * <pre>
       * A string uniquely identifying this Stylesheet within the PietSharedState in
       * which it is used. If two Stylesheets with the same stylesheet_id are found
       * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
       * `stylesheet_id` is used to select this Stylesheet using
       * Frame.stylesheet_id.
       * </pre>
       *
       * <code>optional string stylesheet_id = 1;</code>
       */
      public Builder setStylesheetId(
          java.lang.String value) {
        copyOnWrite();
        instance.setStylesheetId(value);
        return this;
      }
      /**
       * <pre>
       * A string uniquely identifying this Stylesheet within the PietSharedState in
       * which it is used. If two Stylesheets with the same stylesheet_id are found
       * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
       * `stylesheet_id` is used to select this Stylesheet using
       * Frame.stylesheet_id.
       * </pre>
       *
       * <code>optional string stylesheet_id = 1;</code>
       */
      public Builder clearStylesheetId() {
        copyOnWrite();
        instance.clearStylesheetId();
        return this;
      }
      /**
       * <pre>
       * A string uniquely identifying this Stylesheet within the PietSharedState in
       * which it is used. If two Stylesheets with the same stylesheet_id are found
       * in a PietSharedState, ERR_DUPLICATE_STYLESHEET is raised. This
       * `stylesheet_id` is used to select this Stylesheet using
       * Frame.stylesheet_id.
       * </pre>
       *
       * <code>optional string stylesheet_id = 1;</code>
       */
      public Builder setStylesheetIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStylesheetIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
       */
      public java.util.List<com.google.search.now.ui.piet.StylesProto.Style> getStylesList() {
        return java.util.Collections.unmodifiableList(
            instance.getStylesList());
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
       */
      public int getStylesCount() {
        return instance.getStylesCount();
      }/**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
       */
      public com.google.search.now.ui.piet.StylesProto.Style getStyles(int index) {
        return instance.getStyles(index);
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
       */
      public Builder setStyles(
          int index, com.google.search.now.ui.piet.StylesProto.Style value) {
        copyOnWrite();
        instance.setStyles(index, value);
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
       */
      public Builder setStyles(
          int index, com.google.search.now.ui.piet.StylesProto.Style.Builder builderForValue) {
        copyOnWrite();
        instance.setStyles(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
       */
      public Builder addStyles(com.google.search.now.ui.piet.StylesProto.Style value) {
        copyOnWrite();
        instance.addStyles(value);
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
       */
      public Builder addStyles(
          int index, com.google.search.now.ui.piet.StylesProto.Style value) {
        copyOnWrite();
        instance.addStyles(index, value);
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
       */
      public Builder addStyles(
          com.google.search.now.ui.piet.StylesProto.Style.Builder builderForValue) {
        copyOnWrite();
        instance.addStyles(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
       */
      public Builder addStyles(
          int index, com.google.search.now.ui.piet.StylesProto.Style.Builder builderForValue) {
        copyOnWrite();
        instance.addStyles(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
       */
      public Builder addAllStyles(
          java.lang.Iterable<? extends com.google.search.now.ui.piet.StylesProto.Style> values) {
        copyOnWrite();
        instance.addAllStyles(values);
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
       */
      public Builder clearStyles() {
        copyOnWrite();
        instance.clearStyles();
        return this;
      }
      /**
       * <pre>
       * Styles available in this Stylesheet.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Style styles = 2;</code>
       */
      public Builder removeStyles(int index) {
        copyOnWrite();
        instance.removeStyles(index);
        return this;
      }

      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public java.util.List<com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition> getConditionsList() {
        return java.util.Collections.unmodifiableList(
            instance.getConditionsList());
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public int getConditionsCount() {
        return instance.getConditionsCount();
      }/**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition getConditions(int index) {
        return instance.getConditions(index);
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder setConditions(
          int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
        copyOnWrite();
        instance.setConditions(index, value);
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder setConditions(
          int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
        copyOnWrite();
        instance.setConditions(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder addConditions(com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
        copyOnWrite();
        instance.addConditions(value);
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder addConditions(
          int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
        copyOnWrite();
        instance.addConditions(index, value);
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder addConditions(
          com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
        copyOnWrite();
        instance.addConditions(builderForValue);
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder addConditions(
          int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
        copyOnWrite();
        instance.addConditions(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder addAllConditions(
          java.lang.Iterable<? extends com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition> values) {
        copyOnWrite();
        instance.addAllConditions(values);
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder clearConditions() {
        copyOnWrite();
        instance.clearConditions();
        return this;
      }
      /**
       * <pre>
       * This Stylesheet is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied,
       * this Stylesheet is treated as if it was never sent, which may cause
       * ERR_STYLESHEET_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 3;</code>
       */
      public Builder removeConditions(int index) {
        copyOnWrite();
        instance.removeConditions(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.now.ui.piet.Stylesheet)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.search.now.ui.piet.PietProto.Stylesheet();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getStylesCount(); i++) {
            if (!getStyles(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          styles_.makeImmutable();
          conditions_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.search.now.ui.piet.PietProto.Stylesheet other = (com.google.search.now.ui.piet.PietProto.Stylesheet) arg1;
          stylesheetId_ = visitor.visitString(
              hasStylesheetId(), stylesheetId_,
              other.hasStylesheetId(), other.stylesheetId_);
          styles_= visitor.visitList(styles_, other.styles_);
          conditions_= visitor.visitList(conditions_, other.conditions_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  stylesheetId_ = s;
                  break;
                }
                case 18: {
                  if (!styles_.isModifiable()) {
                    styles_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(styles_);
                  }
                  styles_.add(
                      input.readMessage(com.google.search.now.ui.piet.StylesProto.Style.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  if (!conditions_.isModifiable()) {
                    conditions_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(conditions_);
                  }
                  conditions_.add(
                      input.readMessage(com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.search.now.ui.piet.PietProto.Stylesheet.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:search.now.ui.piet.Stylesheet)
    private static final com.google.search.now.ui.piet.PietProto.Stylesheet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Stylesheet();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.search.now.ui.piet.PietProto.Stylesheet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Stylesheet> PARSER;

    public static com.google.protobuf.Parser<Stylesheet> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TemplateOrBuilder extends 
      // @@protoc_insertion_point(interface_extends:search.now.ui.piet.Template)
       com.google.protobuf.GeneratedMessageLite.
            ExtendableMessageOrBuilder<
                Template, Template.Builder> {

    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     */
    boolean hasTemplateId();
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     */
    java.lang.String getTemplateId();
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getTemplateIdBytes();

    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    boolean hasStylesheetId();
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    java.lang.String getStylesheetId();
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getStylesheetIdBytes();

    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    boolean hasStylesheet();
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    com.google.search.now.ui.piet.PietProto.Stylesheet getStylesheet();

    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
     */
    boolean hasChildDefaultStyleIds();
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
     */
    com.google.search.now.ui.piet.StylesProto.StyleIdsStack getChildDefaultStyleIds();

    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Element element = 6;</code>
     */
    boolean hasElement();
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Element element = 6;</code>
     */
    com.google.search.now.ui.piet.ElementsProto.Element getElement();

    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    java.util.List<com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition> 
        getConditionsList();
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition getConditions(int index);
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    int getConditionsCount();

    public com.google.search.now.ui.piet.PietProto.Template.TemplateStylesheetCase getTemplateStylesheetCase();
  }
  /**
   * <pre>
   * A Template defines a reusable ElementList. The content is data-bound from
   * Bindings in the TemplateInvocation. Templates allow consistent creation of
   * elements using bound data. For example, table rows with different values, or
   * GridCells with different data values.
   * </pre>
   *
   * Protobuf type {@code search.now.ui.piet.Template}
   */
  public  static final class Template extends
      com.google.protobuf.GeneratedMessageLite.ExtendableMessage<
        Template, Template.Builder> implements
      // @@protoc_insertion_point(message_implements:search.now.ui.piet.Template)
      TemplateOrBuilder {
    private Template() {
      templateId_ = "";
      conditions_ = emptyProtobufList();
    }
    private int bitField0_;
    private int templateStylesheetCase_ = 0;
    private java.lang.Object templateStylesheet_;
    public enum TemplateStylesheetCase
        implements com.google.protobuf.Internal.EnumLite {
      STYLESHEET_ID(2),
      STYLESHEET(3),
      TEMPLATESTYLESHEET_NOT_SET(0);
      private final int value;
      private TemplateStylesheetCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TemplateStylesheetCase valueOf(int value) {
        return forNumber(value);
      }

      public static TemplateStylesheetCase forNumber(int value) {
        switch (value) {
          case 2: return STYLESHEET_ID;
          case 3: return STYLESHEET;
          case 0: return TEMPLATESTYLESHEET_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TemplateStylesheetCase
    getTemplateStylesheetCase() {
      return TemplateStylesheetCase.forNumber(
          templateStylesheetCase_);
    }

    private void clearTemplateStylesheet() {
      templateStylesheetCase_ = 0;
      templateStylesheet_ = null;
    }

    public static final int TEMPLATE_ID_FIELD_NUMBER = 1;
    private java.lang.String templateId_;
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     */
    public boolean hasTemplateId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     */
    public java.lang.String getTemplateId() {
      return templateId_;
    }
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTemplateIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(templateId_);
    }
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     */
    private void setTemplateId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      templateId_ = value;
    }
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     */
    private void clearTemplateId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      templateId_ = getDefaultInstance().getTemplateId();
    }
    /**
     * <pre>
     * A unique identifier for this template. If two Templates with the same
     * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
     * raised.
     * </pre>
     *
     * <code>optional string template_id = 1;</code>
     */
    private void setTemplateIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      templateId_ = value.toStringUtf8();
    }

    public static final int STYLESHEET_ID_FIELD_NUMBER = 2;
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    public boolean hasStylesheetId() {
      return templateStylesheetCase_ == 2;
    }
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    public java.lang.String getStylesheetId() {
      java.lang.String ref = "";
      if (templateStylesheetCase_ == 2) {
        ref = (java.lang.String) templateStylesheet_;
      }
      return ref;
    }
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getStylesheetIdBytes() {
      java.lang.String ref = "";
      if (templateStylesheetCase_ == 2) {
        ref = (java.lang.String) templateStylesheet_;
      }
      return com.google.protobuf.ByteString.copyFromUtf8(ref);
    }
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    private void setStylesheetId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  templateStylesheetCase_ = 2;
      templateStylesheet_ = value;
    }
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    private void clearStylesheetId() {
      if (templateStylesheetCase_ == 2) {
        templateStylesheetCase_ = 0;
        templateStylesheet_ = null;
      }
    }
    /**
     * <pre>
     * If defined, the Stylesheet for this Template is looked up in
     * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
     * ERR_MISSING_STYLESHEET is raised.
     * </pre>
     *
     * <code>optional string stylesheet_id = 2;</code>
     */
    private void setStylesheetIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  templateStylesheetCase_ = 2;
      templateStylesheet_ = value.toStringUtf8();
    }

    public static final int STYLESHEET_FIELD_NUMBER = 3;
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    public boolean hasStylesheet() {
      return templateStylesheetCase_ == 3;
    }
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    public com.google.search.now.ui.piet.PietProto.Stylesheet getStylesheet() {
      if (templateStylesheetCase_ == 3) {
         return (com.google.search.now.ui.piet.PietProto.Stylesheet) templateStylesheet_;
      }
      return com.google.search.now.ui.piet.PietProto.Stylesheet.getDefaultInstance();
    }
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    private void setStylesheet(com.google.search.now.ui.piet.PietProto.Stylesheet value) {
      if (value == null) {
        throw new NullPointerException();
      }
      templateStylesheet_ = value;
      templateStylesheetCase_ = 3;
    }
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    private void setStylesheet(
        com.google.search.now.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
      templateStylesheet_ = builderForValue.build();
      templateStylesheetCase_ = 3;
    }
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    private void mergeStylesheet(com.google.search.now.ui.piet.PietProto.Stylesheet value) {
      if (templateStylesheetCase_ == 3 &&
          templateStylesheet_ != com.google.search.now.ui.piet.PietProto.Stylesheet.getDefaultInstance()) {
        templateStylesheet_ = com.google.search.now.ui.piet.PietProto.Stylesheet.newBuilder((com.google.search.now.ui.piet.PietProto.Stylesheet) templateStylesheet_)
            .mergeFrom(value).buildPartial();
      } else {
        templateStylesheet_ = value;
      }
      templateStylesheetCase_ = 3;
    }
    /**
     * <pre>
     * A local Stylesheet. Styles in this Stylesheet will only be available to
     * elements defined in this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
     */
    private void clearStylesheet() {
      if (templateStylesheetCase_ == 3) {
        templateStylesheetCase_ = 0;
        templateStylesheet_ = null;
      }
    }

    public static final int CHILD_DEFAULT_STYLE_IDS_FIELD_NUMBER = 4;
    private com.google.search.now.ui.piet.StylesProto.StyleIdsStack childDefaultStyleIds_;
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
     */
    public boolean hasChildDefaultStyleIds() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
     */
    public com.google.search.now.ui.piet.StylesProto.StyleIdsStack getChildDefaultStyleIds() {
      return childDefaultStyleIds_ == null ? com.google.search.now.ui.piet.StylesProto.StyleIdsStack.getDefaultInstance() : childDefaultStyleIds_;
    }
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
     */
    private void setChildDefaultStyleIds(com.google.search.now.ui.piet.StylesProto.StyleIdsStack value) {
      if (value == null) {
        throw new NullPointerException();
      }
      childDefaultStyleIds_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
     */
    private void setChildDefaultStyleIds(
        com.google.search.now.ui.piet.StylesProto.StyleIdsStack.Builder builderForValue) {
      childDefaultStyleIds_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
     */
    private void mergeChildDefaultStyleIds(com.google.search.now.ui.piet.StylesProto.StyleIdsStack value) {
      if (childDefaultStyleIds_ != null &&
          childDefaultStyleIds_ != com.google.search.now.ui.piet.StylesProto.StyleIdsStack.getDefaultInstance()) {
        childDefaultStyleIds_ =
          com.google.search.now.ui.piet.StylesProto.StyleIdsStack.newBuilder(childDefaultStyleIds_).mergeFrom(value).buildPartial();
      } else {
        childDefaultStyleIds_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * Styles applied to all child views of this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
     */
    private void clearChildDefaultStyleIds() {  childDefaultStyleIds_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int ELEMENT_FIELD_NUMBER = 6;
    private com.google.search.now.ui.piet.ElementsProto.Element element_;
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Element element = 6;</code>
     */
    public boolean hasElement() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Element element = 6;</code>
     */
    public com.google.search.now.ui.piet.ElementsProto.Element getElement() {
      return element_ == null ? com.google.search.now.ui.piet.ElementsProto.Element.getDefaultInstance() : element_;
    }
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Element element = 6;</code>
     */
    private void setElement(com.google.search.now.ui.piet.ElementsProto.Element value) {
      if (value == null) {
        throw new NullPointerException();
      }
      element_ = value;
      bitField0_ |= 0x00000010;
      }
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Element element = 6;</code>
     */
    private void setElement(
        com.google.search.now.ui.piet.ElementsProto.Element.Builder builderForValue) {
      element_ = builderForValue.build();
      bitField0_ |= 0x00000010;
    }
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Element element = 6;</code>
     */
    private void mergeElement(com.google.search.now.ui.piet.ElementsProto.Element value) {
      if (element_ != null &&
          element_ != com.google.search.now.ui.piet.ElementsProto.Element.getDefaultInstance()) {
        element_ =
          com.google.search.now.ui.piet.ElementsProto.Element.newBuilder(element_).mergeFrom(value).buildPartial();
      } else {
        element_ = value;
      }
      bitField0_ |= 0x00000010;
    }
    /**
     * <pre>
     * Content defined by this Template.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.Element element = 6;</code>
     */
    private void clearElement() {  element_ = null;
      bitField0_ = (bitField0_ & ~0x00000010);
    }

    public static final int CONDITIONS_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.ProtobufList<com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition> conditions_;
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    public java.util.List<com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition> getConditionsList() {
      return conditions_;
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    public java.util.List<? extends com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryConditionOrBuilder> 
        getConditionsOrBuilderList() {
      return conditions_;
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    public int getConditionsCount() {
      return conditions_.size();
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    public com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition getConditions(int index) {
      return conditions_.get(index);
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    public com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryConditionOrBuilder getConditionsOrBuilder(
        int index) {
      return conditions_.get(index);
    }
    private void ensureConditionsIsMutable() {
      if (!conditions_.isModifiable()) {
        conditions_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(conditions_);
       }
    }

    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void setConditions(
        int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureConditionsIsMutable();
      conditions_.set(index, value);
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void setConditions(
        int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
      ensureConditionsIsMutable();
      conditions_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void addConditions(com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureConditionsIsMutable();
      conditions_.add(value);
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void addConditions(
        int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureConditionsIsMutable();
      conditions_.add(index, value);
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void addConditions(
        com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
      ensureConditionsIsMutable();
      conditions_.add(builderForValue.build());
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void addConditions(
        int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
      ensureConditionsIsMutable();
      conditions_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void addAllConditions(
        java.lang.Iterable<? extends com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition> values) {
      ensureConditionsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, conditions_);
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void clearConditions() {
      conditions_ = emptyProtobufList();
    }
    /**
     * <pre>
     * This Template is only eligible to be used if *all* the conditions
     * enumerated below are met. If even one condition is unsatisfied, this
     * Template is treated as if it was never sent, which may cause
     * ERR_TEMPLATE_NOT_FOUND.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
     */
    private void removeConditions(int index) {
      ensureConditionsIsMutable();
      conditions_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageLite
        .ExtendableMessage<com.google.search.now.ui.piet.PietProto.Template, com.google.search.now.ui.piet.PietProto.Template.Builder>
          .ExtensionWriter extensionWriter =
            newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getTemplateId());
      }
      if (templateStylesheetCase_ == 2) {
        output.writeString(2, getStylesheetId());
      }
      if (templateStylesheetCase_ == 3) {
        output.writeMessage(3, (com.google.search.now.ui.piet.PietProto.Stylesheet) templateStylesheet_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getChildDefaultStyleIds());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, getElement());
      }
      for (int i = 0; i < conditions_.size(); i++) {
        output.writeMessage(8, conditions_.get(i));
      }
      extensionWriter.writeUntil(536870912, output);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getTemplateId());
      }
      if (templateStylesheetCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getStylesheetId());
      }
      if (templateStylesheetCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.google.search.now.ui.piet.PietProto.Stylesheet) templateStylesheet_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getChildDefaultStyleIds());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getElement());
      }
      for (int i = 0; i < conditions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, conditions_.get(i));
      }
      size += extensionsSerializedSize();
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.search.now.ui.piet.PietProto.Template parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.PietProto.Template parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.Template parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.PietProto.Template parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.Template parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietProto.Template parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.Template parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietProto.Template parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.Template parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietProto.Template parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.search.now.ui.piet.PietProto.Template prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A Template defines a reusable ElementList. The content is data-bound from
     * Bindings in the TemplateInvocation. Templates allow consistent creation of
     * elements using bound data. For example, table rows with different values, or
     * GridCells with different data values.
     * </pre>
     *
     * Protobuf type {@code search.now.ui.piet.Template}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.ExtendableBuilder<
          com.google.search.now.ui.piet.PietProto.Template, Builder> implements
        // @@protoc_insertion_point(builder_implements:search.now.ui.piet.Template)
        com.google.search.now.ui.piet.PietProto.TemplateOrBuilder {
      // Construct using com.google.search.now.ui.piet.PietProto.Template.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public TemplateStylesheetCase
          getTemplateStylesheetCase() {
        return instance.getTemplateStylesheetCase();
      }

      public Builder clearTemplateStylesheet() {
        copyOnWrite();
        instance.clearTemplateStylesheet();
        return this;
      }


      /**
       * <pre>
       * A unique identifier for this template. If two Templates with the same
       * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
       * raised.
       * </pre>
       *
       * <code>optional string template_id = 1;</code>
       */
      public boolean hasTemplateId() {
        return instance.hasTemplateId();
      }
      /**
       * <pre>
       * A unique identifier for this template. If two Templates with the same
       * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
       * raised.
       * </pre>
       *
       * <code>optional string template_id = 1;</code>
       */
      public java.lang.String getTemplateId() {
        return instance.getTemplateId();
      }
      /**
       * <pre>
       * A unique identifier for this template. If two Templates with the same
       * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
       * raised.
       * </pre>
       *
       * <code>optional string template_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTemplateIdBytes() {
        return instance.getTemplateIdBytes();
      }
      /**
       * <pre>
       * A unique identifier for this template. If two Templates with the same
       * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
       * raised.
       * </pre>
       *
       * <code>optional string template_id = 1;</code>
       */
      public Builder setTemplateId(
          java.lang.String value) {
        copyOnWrite();
        instance.setTemplateId(value);
        return this;
      }
      /**
       * <pre>
       * A unique identifier for this template. If two Templates with the same
       * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
       * raised.
       * </pre>
       *
       * <code>optional string template_id = 1;</code>
       */
      public Builder clearTemplateId() {
        copyOnWrite();
        instance.clearTemplateId();
        return this;
      }
      /**
       * <pre>
       * A unique identifier for this template. If two Templates with the same
       * template_id are found in a PietSharedState, ERR_DUPLICATE_TEMPLATE is
       * raised.
       * </pre>
       *
       * <code>optional string template_id = 1;</code>
       */
      public Builder setTemplateIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTemplateIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * If defined, the Stylesheet for this Template is looked up in
       * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>optional string stylesheet_id = 2;</code>
       */
      public boolean hasStylesheetId() {
        return instance.hasStylesheetId();
      }
      /**
       * <pre>
       * If defined, the Stylesheet for this Template is looked up in
       * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>optional string stylesheet_id = 2;</code>
       */
      public java.lang.String getStylesheetId() {
        return instance.getStylesheetId();
      }
      /**
       * <pre>
       * If defined, the Stylesheet for this Template is looked up in
       * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>optional string stylesheet_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStylesheetIdBytes() {
        return instance.getStylesheetIdBytes();
      }
      /**
       * <pre>
       * If defined, the Stylesheet for this Template is looked up in
       * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>optional string stylesheet_id = 2;</code>
       */
      public Builder setStylesheetId(
          java.lang.String value) {
        copyOnWrite();
        instance.setStylesheetId(value);
        return this;
      }
      /**
       * <pre>
       * If defined, the Stylesheet for this Template is looked up in
       * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>optional string stylesheet_id = 2;</code>
       */
      public Builder clearStylesheetId() {
        copyOnWrite();
        instance.clearStylesheetId();
        return this;
      }
      /**
       * <pre>
       * If defined, the Stylesheet for this Template is looked up in
       * PietSharedState.Stylesheets. If the stylesheet_id cannot be found,
       * ERR_MISSING_STYLESHEET is raised.
       * </pre>
       *
       * <code>optional string stylesheet_id = 2;</code>
       */
      public Builder setStylesheetIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setStylesheetIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * A local Stylesheet. Styles in this Stylesheet will only be available to
       * elements defined in this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
       */
      public boolean hasStylesheet() {
        return instance.hasStylesheet();
      }
      /**
       * <pre>
       * A local Stylesheet. Styles in this Stylesheet will only be available to
       * elements defined in this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
       */
      public com.google.search.now.ui.piet.PietProto.Stylesheet getStylesheet() {
        return instance.getStylesheet();
      }
      /**
       * <pre>
       * A local Stylesheet. Styles in this Stylesheet will only be available to
       * elements defined in this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
       */
      public Builder setStylesheet(com.google.search.now.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.setStylesheet(value);
        return this;
      }
      /**
       * <pre>
       * A local Stylesheet. Styles in this Stylesheet will only be available to
       * elements defined in this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
       */
      public Builder setStylesheet(
          com.google.search.now.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.setStylesheet(builderForValue);
        return this;
      }
      /**
       * <pre>
       * A local Stylesheet. Styles in this Stylesheet will only be available to
       * elements defined in this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
       */
      public Builder mergeStylesheet(com.google.search.now.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.mergeStylesheet(value);
        return this;
      }
      /**
       * <pre>
       * A local Stylesheet. Styles in this Stylesheet will only be available to
       * elements defined in this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Stylesheet stylesheet = 3;</code>
       */
      public Builder clearStylesheet() {
        copyOnWrite();
        instance.clearStylesheet();
        return this;
      }

      /**
       * <pre>
       * Styles applied to all child views of this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
       */
      public boolean hasChildDefaultStyleIds() {
        return instance.hasChildDefaultStyleIds();
      }
      /**
       * <pre>
       * Styles applied to all child views of this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
       */
      public com.google.search.now.ui.piet.StylesProto.StyleIdsStack getChildDefaultStyleIds() {
        return instance.getChildDefaultStyleIds();
      }
      /**
       * <pre>
       * Styles applied to all child views of this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
       */
      public Builder setChildDefaultStyleIds(com.google.search.now.ui.piet.StylesProto.StyleIdsStack value) {
        copyOnWrite();
        instance.setChildDefaultStyleIds(value);
        return this;
        }
      /**
       * <pre>
       * Styles applied to all child views of this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
       */
      public Builder setChildDefaultStyleIds(
          com.google.search.now.ui.piet.StylesProto.StyleIdsStack.Builder builderForValue) {
        copyOnWrite();
        instance.setChildDefaultStyleIds(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Styles applied to all child views of this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
       */
      public Builder mergeChildDefaultStyleIds(com.google.search.now.ui.piet.StylesProto.StyleIdsStack value) {
        copyOnWrite();
        instance.mergeChildDefaultStyleIds(value);
        return this;
      }
      /**
       * <pre>
       * Styles applied to all child views of this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.StyleIdsStack child_default_style_ids = 4;</code>
       */
      public Builder clearChildDefaultStyleIds() {  copyOnWrite();
        instance.clearChildDefaultStyleIds();
        return this;
      }

      /**
       * <pre>
       * Content defined by this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Element element = 6;</code>
       */
      public boolean hasElement() {
        return instance.hasElement();
      }
      /**
       * <pre>
       * Content defined by this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Element element = 6;</code>
       */
      public com.google.search.now.ui.piet.ElementsProto.Element getElement() {
        return instance.getElement();
      }
      /**
       * <pre>
       * Content defined by this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Element element = 6;</code>
       */
      public Builder setElement(com.google.search.now.ui.piet.ElementsProto.Element value) {
        copyOnWrite();
        instance.setElement(value);
        return this;
        }
      /**
       * <pre>
       * Content defined by this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Element element = 6;</code>
       */
      public Builder setElement(
          com.google.search.now.ui.piet.ElementsProto.Element.Builder builderForValue) {
        copyOnWrite();
        instance.setElement(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Content defined by this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Element element = 6;</code>
       */
      public Builder mergeElement(com.google.search.now.ui.piet.ElementsProto.Element value) {
        copyOnWrite();
        instance.mergeElement(value);
        return this;
      }
      /**
       * <pre>
       * Content defined by this Template.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.Element element = 6;</code>
       */
      public Builder clearElement() {  copyOnWrite();
        instance.clearElement();
        return this;
      }

      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public java.util.List<com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition> getConditionsList() {
        return java.util.Collections.unmodifiableList(
            instance.getConditionsList());
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public int getConditionsCount() {
        return instance.getConditionsCount();
      }/**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition getConditions(int index) {
        return instance.getConditions(index);
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder setConditions(
          int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
        copyOnWrite();
        instance.setConditions(index, value);
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder setConditions(
          int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
        copyOnWrite();
        instance.setConditions(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder addConditions(com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
        copyOnWrite();
        instance.addConditions(value);
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder addConditions(
          int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition value) {
        copyOnWrite();
        instance.addConditions(index, value);
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder addConditions(
          com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
        copyOnWrite();
        instance.addConditions(builderForValue);
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder addConditions(
          int index, com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.Builder builderForValue) {
        copyOnWrite();
        instance.addConditions(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder addAllConditions(
          java.lang.Iterable<? extends com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition> values) {
        copyOnWrite();
        instance.addAllConditions(values);
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder clearConditions() {
        copyOnWrite();
        instance.clearConditions();
        return this;
      }
      /**
       * <pre>
       * This Template is only eligible to be used if *all* the conditions
       * enumerated below are met. If even one condition is unsatisfied, this
       * Template is treated as if it was never sent, which may cause
       * ERR_TEMPLATE_NOT_FOUND.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.MediaQueryCondition conditions = 8;</code>
       */
      public Builder removeConditions(int index) {
        copyOnWrite();
        instance.removeConditions(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.now.ui.piet.Template)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.search.now.ui.piet.PietProto.Template();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (hasStylesheet()) {
            if (!getStylesheet().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasChildDefaultStyleIds()) {
            if (!getChildDefaultStyleIds().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasElement()) {
            if (!getElement().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (!extensionsAreInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          conditions_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.search.now.ui.piet.PietProto.Template other = (com.google.search.now.ui.piet.PietProto.Template) arg1;
          templateId_ = visitor.visitString(
              hasTemplateId(), templateId_,
              other.hasTemplateId(), other.templateId_);
          childDefaultStyleIds_ = visitor.visitMessage(childDefaultStyleIds_, other.childDefaultStyleIds_);
          element_ = visitor.visitMessage(element_, other.element_);
          conditions_= visitor.visitList(conditions_, other.conditions_);
          switch (other.getTemplateStylesheetCase()) {
            case STYLESHEET_ID: {
              templateStylesheet_ = visitor.visitOneofString(
                 templateStylesheetCase_ == 2, templateStylesheet_, other.templateStylesheet_);
              break;
            }
            case STYLESHEET: {
              templateStylesheet_ = visitor.visitOneofMessage(
                  templateStylesheetCase_ == 3,
                  templateStylesheet_,
                  other.templateStylesheet_);
              break;
            }
            case TEMPLATESTYLESHEET_NOT_SET: {
              visitor.visitOneofNotSet(templateStylesheetCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.templateStylesheetCase_ != 0) {
              templateStylesheetCase_ = other.templateStylesheetCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(getDefaultInstanceForType(),
                                         input, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  templateId_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  templateStylesheetCase_ = 2;
                  templateStylesheet_ = s;
                  break;
                }
                case 26: {
                  com.google.search.now.ui.piet.PietProto.Stylesheet.Builder subBuilder = null;
                  if (templateStylesheetCase_ == 3) {
                    subBuilder = ((com.google.search.now.ui.piet.PietProto.Stylesheet) templateStylesheet_).toBuilder();
                  }
                  templateStylesheet_ =
                       input.readMessage(com.google.search.now.ui.piet.PietProto.Stylesheet.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.google.search.now.ui.piet.PietProto.Stylesheet) templateStylesheet_);
                    templateStylesheet_ = subBuilder.buildPartial();
                  }
                  templateStylesheetCase_ = 3;
                  break;
                }
                case 34: {
                  com.google.search.now.ui.piet.StylesProto.StyleIdsStack.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = childDefaultStyleIds_.toBuilder();
                  }
                  childDefaultStyleIds_ = input.readMessage(com.google.search.now.ui.piet.StylesProto.StyleIdsStack.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(childDefaultStyleIds_);
                    childDefaultStyleIds_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 50: {
                  com.google.search.now.ui.piet.ElementsProto.Element.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    subBuilder = element_.toBuilder();
                  }
                  element_ = input.readMessage(com.google.search.now.ui.piet.ElementsProto.Element.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(element_);
                    element_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
                case 66: {
                  if (!conditions_.isModifiable()) {
                    conditions_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(conditions_);
                  }
                  conditions_.add(
                      input.readMessage(com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.search.now.ui.piet.PietProto.Template.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:search.now.ui.piet.Template)
    private static final com.google.search.now.ui.piet.PietProto.Template DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Template();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.search.now.ui.piet.PietProto.Template getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Template> PARSER;

    public static com.google.protobuf.Parser<Template> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PietSharedStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:search.now.ui.piet.PietSharedState)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    java.util.List<com.google.search.now.ui.piet.PietProto.Stylesheet> 
        getStylesheetsList();
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    com.google.search.now.ui.piet.PietProto.Stylesheet getStylesheets(int index);
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    int getStylesheetsCount();

    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    java.util.List<com.google.search.now.ui.piet.PietProto.Template> 
        getTemplatesList();
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    com.google.search.now.ui.piet.PietProto.Template getTemplates(int index);
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    int getTemplatesCount();
  }
  /**
   * <pre>
   * State shared among multiple Frame instances. This is a top-level object,
   * defined outside individual Frame instances.
   * </pre>
   *
   * Protobuf type {@code search.now.ui.piet.PietSharedState}
   */
  public  static final class PietSharedState extends
      com.google.protobuf.GeneratedMessageLite<
          PietSharedState, PietSharedState.Builder> implements
      // @@protoc_insertion_point(message_implements:search.now.ui.piet.PietSharedState)
      PietSharedStateOrBuilder {
    private PietSharedState() {
      stylesheets_ = emptyProtobufList();
      templates_ = emptyProtobufList();
    }
    public static final int STYLESHEETS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.google.search.now.ui.piet.PietProto.Stylesheet> stylesheets_;
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    public java.util.List<com.google.search.now.ui.piet.PietProto.Stylesheet> getStylesheetsList() {
      return stylesheets_;
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    public java.util.List<? extends com.google.search.now.ui.piet.PietProto.StylesheetOrBuilder> 
        getStylesheetsOrBuilderList() {
      return stylesheets_;
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    public int getStylesheetsCount() {
      return stylesheets_.size();
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    public com.google.search.now.ui.piet.PietProto.Stylesheet getStylesheets(int index) {
      return stylesheets_.get(index);
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    public com.google.search.now.ui.piet.PietProto.StylesheetOrBuilder getStylesheetsOrBuilder(
        int index) {
      return stylesheets_.get(index);
    }
    private void ensureStylesheetsIsMutable() {
      if (!stylesheets_.isModifiable()) {
        stylesheets_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(stylesheets_);
       }
    }

    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void setStylesheets(
        int index, com.google.search.now.ui.piet.PietProto.Stylesheet value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStylesheetsIsMutable();
      stylesheets_.set(index, value);
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void setStylesheets(
        int index, com.google.search.now.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
      ensureStylesheetsIsMutable();
      stylesheets_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void addStylesheets(com.google.search.now.ui.piet.PietProto.Stylesheet value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStylesheetsIsMutable();
      stylesheets_.add(value);
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void addStylesheets(
        int index, com.google.search.now.ui.piet.PietProto.Stylesheet value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStylesheetsIsMutable();
      stylesheets_.add(index, value);
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void addStylesheets(
        com.google.search.now.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
      ensureStylesheetsIsMutable();
      stylesheets_.add(builderForValue.build());
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void addStylesheets(
        int index, com.google.search.now.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
      ensureStylesheetsIsMutable();
      stylesheets_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void addAllStylesheets(
        java.lang.Iterable<? extends com.google.search.now.ui.piet.PietProto.Stylesheet> values) {
      ensureStylesheetsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, stylesheets_);
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void clearStylesheets() {
      stylesheets_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Stylesheet definitions that can be reused across Frames.
     * Stylesheet.stylesheet_id must be unique within the List, otherwise
     * ERR_DUPLICATE_STYLESHEET is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
     */
    private void removeStylesheets(int index) {
      ensureStylesheetsIsMutable();
      stylesheets_.remove(index);
    }

    public static final int TEMPLATES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.google.search.now.ui.piet.PietProto.Template> templates_;
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    public java.util.List<com.google.search.now.ui.piet.PietProto.Template> getTemplatesList() {
      return templates_;
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    public java.util.List<? extends com.google.search.now.ui.piet.PietProto.TemplateOrBuilder> 
        getTemplatesOrBuilderList() {
      return templates_;
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    public int getTemplatesCount() {
      return templates_.size();
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    public com.google.search.now.ui.piet.PietProto.Template getTemplates(int index) {
      return templates_.get(index);
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    public com.google.search.now.ui.piet.PietProto.TemplateOrBuilder getTemplatesOrBuilder(
        int index) {
      return templates_.get(index);
    }
    private void ensureTemplatesIsMutable() {
      if (!templates_.isModifiable()) {
        templates_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(templates_);
       }
    }

    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    private void setTemplates(
        int index, com.google.search.now.ui.piet.PietProto.Template value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTemplatesIsMutable();
      templates_.set(index, value);
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    private void setTemplates(
        int index, com.google.search.now.ui.piet.PietProto.Template.Builder builderForValue) {
      ensureTemplatesIsMutable();
      templates_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    private void addTemplates(com.google.search.now.ui.piet.PietProto.Template value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTemplatesIsMutable();
      templates_.add(value);
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    private void addTemplates(
        int index, com.google.search.now.ui.piet.PietProto.Template value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTemplatesIsMutable();
      templates_.add(index, value);
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    private void addTemplates(
        com.google.search.now.ui.piet.PietProto.Template.Builder builderForValue) {
      ensureTemplatesIsMutable();
      templates_.add(builderForValue.build());
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    private void addTemplates(
        int index, com.google.search.now.ui.piet.PietProto.Template.Builder builderForValue) {
      ensureTemplatesIsMutable();
      templates_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    private void addAllTemplates(
        java.lang.Iterable<? extends com.google.search.now.ui.piet.PietProto.Template> values) {
      ensureTemplatesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, templates_);
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    private void clearTemplates() {
      templates_ = emptyProtobufList();
    }
    /**
     * <pre>
     * Template definitions that can be reused across Frames. Each Template may
     * define their own Stylesheet, or can access a Stylesheet defined in this
     * PietSharedState. If two or more Templates with the same template_id are
     * found, then ERR_DUPLICATE_TEMPLATE is raised.
     * </pre>
     *
     * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
     */
    private void removeTemplates(int index) {
      ensureTemplatesIsMutable();
      templates_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < stylesheets_.size(); i++) {
        output.writeMessage(1, stylesheets_.get(i));
      }
      for (int i = 0; i < templates_.size(); i++) {
        output.writeMessage(2, templates_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < stylesheets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, stylesheets_.get(i));
      }
      for (int i = 0; i < templates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, templates_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.search.now.ui.piet.PietProto.PietSharedState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.PietProto.PietSharedState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.PietSharedState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.PietProto.PietSharedState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.PietSharedState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietProto.PietSharedState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.PietSharedState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietProto.PietSharedState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.PietProto.PietSharedState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.PietProto.PietSharedState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.search.now.ui.piet.PietProto.PietSharedState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * State shared among multiple Frame instances. This is a top-level object,
     * defined outside individual Frame instances.
     * </pre>
     *
     * Protobuf type {@code search.now.ui.piet.PietSharedState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.search.now.ui.piet.PietProto.PietSharedState, Builder> implements
        // @@protoc_insertion_point(builder_implements:search.now.ui.piet.PietSharedState)
        com.google.search.now.ui.piet.PietProto.PietSharedStateOrBuilder {
      // Construct using com.google.search.now.ui.piet.PietProto.PietSharedState.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public java.util.List<com.google.search.now.ui.piet.PietProto.Stylesheet> getStylesheetsList() {
        return java.util.Collections.unmodifiableList(
            instance.getStylesheetsList());
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public int getStylesheetsCount() {
        return instance.getStylesheetsCount();
      }/**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public com.google.search.now.ui.piet.PietProto.Stylesheet getStylesheets(int index) {
        return instance.getStylesheets(index);
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder setStylesheets(
          int index, com.google.search.now.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.setStylesheets(index, value);
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder setStylesheets(
          int index, com.google.search.now.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.setStylesheets(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder addStylesheets(com.google.search.now.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.addStylesheets(value);
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder addStylesheets(
          int index, com.google.search.now.ui.piet.PietProto.Stylesheet value) {
        copyOnWrite();
        instance.addStylesheets(index, value);
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder addStylesheets(
          com.google.search.now.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.addStylesheets(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder addStylesheets(
          int index, com.google.search.now.ui.piet.PietProto.Stylesheet.Builder builderForValue) {
        copyOnWrite();
        instance.addStylesheets(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder addAllStylesheets(
          java.lang.Iterable<? extends com.google.search.now.ui.piet.PietProto.Stylesheet> values) {
        copyOnWrite();
        instance.addAllStylesheets(values);
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder clearStylesheets() {
        copyOnWrite();
        instance.clearStylesheets();
        return this;
      }
      /**
       * <pre>
       * Stylesheet definitions that can be reused across Frames.
       * Stylesheet.stylesheet_id must be unique within the List, otherwise
       * ERR_DUPLICATE_STYLESHEET is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Stylesheet stylesheets = 1;</code>
       */
      public Builder removeStylesheets(int index) {
        copyOnWrite();
        instance.removeStylesheets(index);
        return this;
      }

      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
       */
      public java.util.List<com.google.search.now.ui.piet.PietProto.Template> getTemplatesList() {
        return java.util.Collections.unmodifiableList(
            instance.getTemplatesList());
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
       */
      public int getTemplatesCount() {
        return instance.getTemplatesCount();
      }/**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
       */
      public com.google.search.now.ui.piet.PietProto.Template getTemplates(int index) {
        return instance.getTemplates(index);
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
       */
      public Builder setTemplates(
          int index, com.google.search.now.ui.piet.PietProto.Template value) {
        copyOnWrite();
        instance.setTemplates(index, value);
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
       */
      public Builder setTemplates(
          int index, com.google.search.now.ui.piet.PietProto.Template.Builder builderForValue) {
        copyOnWrite();
        instance.setTemplates(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
       */
      public Builder addTemplates(com.google.search.now.ui.piet.PietProto.Template value) {
        copyOnWrite();
        instance.addTemplates(value);
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
       */
      public Builder addTemplates(
          int index, com.google.search.now.ui.piet.PietProto.Template value) {
        copyOnWrite();
        instance.addTemplates(index, value);
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
       */
      public Builder addTemplates(
          com.google.search.now.ui.piet.PietProto.Template.Builder builderForValue) {
        copyOnWrite();
        instance.addTemplates(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
       */
      public Builder addTemplates(
          int index, com.google.search.now.ui.piet.PietProto.Template.Builder builderForValue) {
        copyOnWrite();
        instance.addTemplates(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
       */
      public Builder addAllTemplates(
          java.lang.Iterable<? extends com.google.search.now.ui.piet.PietProto.Template> values) {
        copyOnWrite();
        instance.addAllTemplates(values);
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
       */
      public Builder clearTemplates() {
        copyOnWrite();
        instance.clearTemplates();
        return this;
      }
      /**
       * <pre>
       * Template definitions that can be reused across Frames. Each Template may
       * define their own Stylesheet, or can access a Stylesheet defined in this
       * PietSharedState. If two or more Templates with the same template_id are
       * found, then ERR_DUPLICATE_TEMPLATE is raised.
       * </pre>
       *
       * <code>repeated .search.now.ui.piet.Template templates = 2;</code>
       */
      public Builder removeTemplates(int index) {
        copyOnWrite();
        instance.removeTemplates(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.now.ui.piet.PietSharedState)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.search.now.ui.piet.PietProto.PietSharedState();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          for (int i = 0; i < getStylesheetsCount(); i++) {
            if (!getStylesheets(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          for (int i = 0; i < getTemplatesCount(); i++) {
            if (!getTemplates(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          stylesheets_.makeImmutable();
          templates_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.search.now.ui.piet.PietProto.PietSharedState other = (com.google.search.now.ui.piet.PietProto.PietSharedState) arg1;
          stylesheets_= visitor.visitList(stylesheets_, other.stylesheets_);
          templates_= visitor.visitList(templates_, other.templates_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!stylesheets_.isModifiable()) {
                    stylesheets_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(stylesheets_);
                  }
                  stylesheets_.add(
                      input.readMessage(com.google.search.now.ui.piet.PietProto.Stylesheet.parser(), extensionRegistry));
                  break;
                }
                case 18: {
                  if (!templates_.isModifiable()) {
                    templates_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(templates_);
                  }
                  templates_.add(
                      input.readMessage(com.google.search.now.ui.piet.PietProto.Template.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.search.now.ui.piet.PietProto.PietSharedState.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:search.now.ui.piet.PietSharedState)
    private static final com.google.search.now.ui.piet.PietProto.PietSharedState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PietSharedState();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.search.now.ui.piet.PietProto.PietSharedState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PietSharedState> PARSER;

    public static com.google.protobuf.Parser<PietSharedState> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
