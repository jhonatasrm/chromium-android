// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/search/now/ui/piet/media_queries.proto

package com.google.search.now.ui.piet;

public final class MediaQueriesProto {
  private MediaQueriesProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   * How a condition should be evaluated. Self-explanatory. Must not be set to
   * UNSPECIFIED, otherwise ERR_INVALID_MEDIA_QUERY_CONDITION will be raised.
   * </pre>
   *
   * Protobuf enum {@code search.now.ui.piet.ComparisonCondition}
   */
  public enum ComparisonCondition
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <code>EQUALS = 1;</code>
     */
    EQUALS(1),
    /**
     * <code>NOT_EQUALS = 2;</code>
     */
    NOT_EQUALS(2),
    /**
     * <code>LESS_THAN = 3;</code>
     */
    LESS_THAN(3),
    /**
     * <code>GREATER_THAN = 4;</code>
     */
    GREATER_THAN(4),
    ;

    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <code>EQUALS = 1;</code>
     */
    public static final int EQUALS_VALUE = 1;
    /**
     * <code>NOT_EQUALS = 2;</code>
     */
    public static final int NOT_EQUALS_VALUE = 2;
    /**
     * <code>LESS_THAN = 3;</code>
     */
    public static final int LESS_THAN_VALUE = 3;
    /**
     * <code>GREATER_THAN = 4;</code>
     */
    public static final int GREATER_THAN_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ComparisonCondition valueOf(int value) {
      return forNumber(value);
    }

    public static ComparisonCondition forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return EQUALS;
        case 2: return NOT_EQUALS;
        case 3: return LESS_THAN;
        case 4: return GREATER_THAN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ComparisonCondition>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ComparisonCondition> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ComparisonCondition>() {
            public ComparisonCondition findValueByNumber(int number) {
              return ComparisonCondition.forNumber(number);
            }
          };

    private final int value;

    private ComparisonCondition(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:search.now.ui.piet.ComparisonCondition)
  }

  public interface MediaQueryConditionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:search.now.ui.piet.MediaQueryCondition)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * See the documentation for FrameWidthCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
     */
    boolean hasFrameWidth();
    /**
     * <pre>
     * See the documentation for FrameWidthCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
     */
    com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition getFrameWidth();

    /**
     * <pre>
     * See the documentation for OrientationCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
     */
    boolean hasOrientation();
    /**
     * <pre>
     * See the documentation for OrientationCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
     */
    com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition getOrientation();

    /**
     * <pre>
     * See the documentation for DarkLightCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
     */
    boolean hasDarkLight();
    /**
     * <pre>
     * See the documentation for DarkLightCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
     */
    com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition getDarkLight();

    public com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.ConditionCase getConditionCase();
  }
  /**
   * <pre>
   * A single media query condition offers a way for a Piet renderer to decide
   * whether or not to apply a particular Stylesheet, Template, ImageSource, or
   * other entities based on the environment config at runtime. For example,
   * adding a width-based conditional enables providing different layouts/styles
   * based on the userâ€™s device, and this can be re-evaluated entirely client-side
   * e.g. if the user rotates their device so that the width changes.
   * The name MediaQueryCondition derives from a similar concept for Web/CSS and
   * most principles in the Piet Media Query spec are influenced by their Web
   * equivalents.
   * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries
   * </pre>
   *
   * Protobuf type {@code search.now.ui.piet.MediaQueryCondition}
   */
  public  static final class MediaQueryCondition extends
      com.google.protobuf.GeneratedMessageLite<
          MediaQueryCondition, MediaQueryCondition.Builder> implements
      // @@protoc_insertion_point(message_implements:search.now.ui.piet.MediaQueryCondition)
      MediaQueryConditionOrBuilder {
    private MediaQueryCondition() {
    }
    private int bitField0_;
    private int conditionCase_ = 0;
    private java.lang.Object condition_;
    public enum ConditionCase
        implements com.google.protobuf.Internal.EnumLite {
      FRAME_WIDTH(1),
      ORIENTATION(2),
      DARK_LIGHT(3),
      CONDITION_NOT_SET(0);
      private final int value;
      private ConditionCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ConditionCase valueOf(int value) {
        return forNumber(value);
      }

      public static ConditionCase forNumber(int value) {
        switch (value) {
          case 1: return FRAME_WIDTH;
          case 2: return ORIENTATION;
          case 3: return DARK_LIGHT;
          case 0: return CONDITION_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ConditionCase
    getConditionCase() {
      return ConditionCase.forNumber(
          conditionCase_);
    }

    private void clearCondition() {
      conditionCase_ = 0;
      condition_ = null;
    }

    public static final int FRAME_WIDTH_FIELD_NUMBER = 1;
    /**
     * <pre>
     * See the documentation for FrameWidthCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
     */
    public boolean hasFrameWidth() {
      return conditionCase_ == 1;
    }
    /**
     * <pre>
     * See the documentation for FrameWidthCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
     */
    public com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition getFrameWidth() {
      if (conditionCase_ == 1) {
         return (com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition) condition_;
      }
      return com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition.getDefaultInstance();
    }
    /**
     * <pre>
     * See the documentation for FrameWidthCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
     */
    private void setFrameWidth(com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition value) {
      if (value == null) {
        throw new NullPointerException();
      }
      condition_ = value;
      conditionCase_ = 1;
    }
    /**
     * <pre>
     * See the documentation for FrameWidthCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
     */
    private void setFrameWidth(
        com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition.Builder builderForValue) {
      condition_ = builderForValue.build();
      conditionCase_ = 1;
    }
    /**
     * <pre>
     * See the documentation for FrameWidthCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
     */
    private void mergeFrameWidth(com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition value) {
      if (conditionCase_ == 1 &&
          condition_ != com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition.getDefaultInstance()) {
        condition_ = com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition.newBuilder((com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition) condition_)
            .mergeFrom(value).buildPartial();
      } else {
        condition_ = value;
      }
      conditionCase_ = 1;
    }
    /**
     * <pre>
     * See the documentation for FrameWidthCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
     */
    private void clearFrameWidth() {
      if (conditionCase_ == 1) {
        conditionCase_ = 0;
        condition_ = null;
      }
    }

    public static final int ORIENTATION_FIELD_NUMBER = 2;
    /**
     * <pre>
     * See the documentation for OrientationCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
     */
    public boolean hasOrientation() {
      return conditionCase_ == 2;
    }
    /**
     * <pre>
     * See the documentation for OrientationCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
     */
    public com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition getOrientation() {
      if (conditionCase_ == 2) {
         return (com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition) condition_;
      }
      return com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.getDefaultInstance();
    }
    /**
     * <pre>
     * See the documentation for OrientationCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
     */
    private void setOrientation(com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition value) {
      if (value == null) {
        throw new NullPointerException();
      }
      condition_ = value;
      conditionCase_ = 2;
    }
    /**
     * <pre>
     * See the documentation for OrientationCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
     */
    private void setOrientation(
        com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Builder builderForValue) {
      condition_ = builderForValue.build();
      conditionCase_ = 2;
    }
    /**
     * <pre>
     * See the documentation for OrientationCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
     */
    private void mergeOrientation(com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition value) {
      if (conditionCase_ == 2 &&
          condition_ != com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.getDefaultInstance()) {
        condition_ = com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.newBuilder((com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition) condition_)
            .mergeFrom(value).buildPartial();
      } else {
        condition_ = value;
      }
      conditionCase_ = 2;
    }
    /**
     * <pre>
     * See the documentation for OrientationCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
     */
    private void clearOrientation() {
      if (conditionCase_ == 2) {
        conditionCase_ = 0;
        condition_ = null;
      }
    }

    public static final int DARK_LIGHT_FIELD_NUMBER = 3;
    /**
     * <pre>
     * See the documentation for DarkLightCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
     */
    public boolean hasDarkLight() {
      return conditionCase_ == 3;
    }
    /**
     * <pre>
     * See the documentation for DarkLightCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
     */
    public com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition getDarkLight() {
      if (conditionCase_ == 3) {
         return (com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition) condition_;
      }
      return com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.getDefaultInstance();
    }
    /**
     * <pre>
     * See the documentation for DarkLightCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
     */
    private void setDarkLight(com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition value) {
      if (value == null) {
        throw new NullPointerException();
      }
      condition_ = value;
      conditionCase_ = 3;
    }
    /**
     * <pre>
     * See the documentation for DarkLightCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
     */
    private void setDarkLight(
        com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.Builder builderForValue) {
      condition_ = builderForValue.build();
      conditionCase_ = 3;
    }
    /**
     * <pre>
     * See the documentation for DarkLightCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
     */
    private void mergeDarkLight(com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition value) {
      if (conditionCase_ == 3 &&
          condition_ != com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.getDefaultInstance()) {
        condition_ = com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.newBuilder((com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition) condition_)
            .mergeFrom(value).buildPartial();
      } else {
        condition_ = value;
      }
      conditionCase_ = 3;
    }
    /**
     * <pre>
     * See the documentation for DarkLightCondition.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
     */
    private void clearDarkLight() {
      if (conditionCase_ == 3) {
        conditionCase_ = 0;
        condition_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (conditionCase_ == 1) {
        output.writeMessage(1, (com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition) condition_);
      }
      if (conditionCase_ == 2) {
        output.writeMessage(2, (com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition) condition_);
      }
      if (conditionCase_ == 3) {
        output.writeMessage(3, (com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition) condition_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (conditionCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition) condition_);
      }
      if (conditionCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition) condition_);
      }
      if (conditionCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition) condition_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A single media query condition offers a way for a Piet renderer to decide
     * whether or not to apply a particular Stylesheet, Template, ImageSource, or
     * other entities based on the environment config at runtime. For example,
     * adding a width-based conditional enables providing different layouts/styles
     * based on the userâ€™s device, and this can be re-evaluated entirely client-side
     * e.g. if the user rotates their device so that the width changes.
     * The name MediaQueryCondition derives from a similar concept for Web/CSS and
     * most principles in the Piet Media Query spec are influenced by their Web
     * equivalents.
     * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries
     * </pre>
     *
     * Protobuf type {@code search.now.ui.piet.MediaQueryCondition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition, Builder> implements
        // @@protoc_insertion_point(builder_implements:search.now.ui.piet.MediaQueryCondition)
        com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryConditionOrBuilder {
      // Construct using com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public ConditionCase
          getConditionCase() {
        return instance.getConditionCase();
      }

      public Builder clearCondition() {
        copyOnWrite();
        instance.clearCondition();
        return this;
      }


      /**
       * <pre>
       * See the documentation for FrameWidthCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
       */
      public boolean hasFrameWidth() {
        return instance.hasFrameWidth();
      }
      /**
       * <pre>
       * See the documentation for FrameWidthCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
       */
      public com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition getFrameWidth() {
        return instance.getFrameWidth();
      }
      /**
       * <pre>
       * See the documentation for FrameWidthCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
       */
      public Builder setFrameWidth(com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition value) {
        copyOnWrite();
        instance.setFrameWidth(value);
        return this;
      }
      /**
       * <pre>
       * See the documentation for FrameWidthCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
       */
      public Builder setFrameWidth(
          com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition.Builder builderForValue) {
        copyOnWrite();
        instance.setFrameWidth(builderForValue);
        return this;
      }
      /**
       * <pre>
       * See the documentation for FrameWidthCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
       */
      public Builder mergeFrameWidth(com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition value) {
        copyOnWrite();
        instance.mergeFrameWidth(value);
        return this;
      }
      /**
       * <pre>
       * See the documentation for FrameWidthCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.FrameWidthCondition frame_width = 1;</code>
       */
      public Builder clearFrameWidth() {
        copyOnWrite();
        instance.clearFrameWidth();
        return this;
      }

      /**
       * <pre>
       * See the documentation for OrientationCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
       */
      public boolean hasOrientation() {
        return instance.hasOrientation();
      }
      /**
       * <pre>
       * See the documentation for OrientationCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
       */
      public com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition getOrientation() {
        return instance.getOrientation();
      }
      /**
       * <pre>
       * See the documentation for OrientationCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
       */
      public Builder setOrientation(com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition value) {
        copyOnWrite();
        instance.setOrientation(value);
        return this;
      }
      /**
       * <pre>
       * See the documentation for OrientationCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
       */
      public Builder setOrientation(
          com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Builder builderForValue) {
        copyOnWrite();
        instance.setOrientation(builderForValue);
        return this;
      }
      /**
       * <pre>
       * See the documentation for OrientationCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
       */
      public Builder mergeOrientation(com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition value) {
        copyOnWrite();
        instance.mergeOrientation(value);
        return this;
      }
      /**
       * <pre>
       * See the documentation for OrientationCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.OrientationCondition orientation = 2;</code>
       */
      public Builder clearOrientation() {
        copyOnWrite();
        instance.clearOrientation();
        return this;
      }

      /**
       * <pre>
       * See the documentation for DarkLightCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
       */
      public boolean hasDarkLight() {
        return instance.hasDarkLight();
      }
      /**
       * <pre>
       * See the documentation for DarkLightCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
       */
      public com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition getDarkLight() {
        return instance.getDarkLight();
      }
      /**
       * <pre>
       * See the documentation for DarkLightCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
       */
      public Builder setDarkLight(com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition value) {
        copyOnWrite();
        instance.setDarkLight(value);
        return this;
      }
      /**
       * <pre>
       * See the documentation for DarkLightCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
       */
      public Builder setDarkLight(
          com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.Builder builderForValue) {
        copyOnWrite();
        instance.setDarkLight(builderForValue);
        return this;
      }
      /**
       * <pre>
       * See the documentation for DarkLightCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
       */
      public Builder mergeDarkLight(com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition value) {
        copyOnWrite();
        instance.mergeDarkLight(value);
        return this;
      }
      /**
       * <pre>
       * See the documentation for DarkLightCondition.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.DarkLightCondition dark_light = 3;</code>
       */
      public Builder clearDarkLight() {
        copyOnWrite();
        instance.clearDarkLight();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.now.ui.piet.MediaQueryCondition)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition other = (com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition) arg1;
          switch (other.getConditionCase()) {
            case FRAME_WIDTH: {
              condition_ = visitor.visitOneofMessage(
                  conditionCase_ == 1,
                  condition_,
                  other.condition_);
              break;
            }
            case ORIENTATION: {
              condition_ = visitor.visitOneofMessage(
                  conditionCase_ == 2,
                  condition_,
                  other.condition_);
              break;
            }
            case DARK_LIGHT: {
              condition_ = visitor.visitOneofMessage(
                  conditionCase_ == 3,
                  condition_,
                  other.condition_);
              break;
            }
            case CONDITION_NOT_SET: {
              visitor.visitOneofNotSet(conditionCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.conditionCase_ != 0) {
              conditionCase_ = other.conditionCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition.Builder subBuilder = null;
                  if (conditionCase_ == 1) {
                    subBuilder = ((com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition) condition_).toBuilder();
                  }
                  condition_ =
                       input.readMessage(com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition) condition_);
                    condition_ = subBuilder.buildPartial();
                  }
                  conditionCase_ = 1;
                  break;
                }
                case 18: {
                  com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Builder subBuilder = null;
                  if (conditionCase_ == 2) {
                    subBuilder = ((com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition) condition_).toBuilder();
                  }
                  condition_ =
                       input.readMessage(com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition) condition_);
                    condition_ = subBuilder.buildPartial();
                  }
                  conditionCase_ = 2;
                  break;
                }
                case 26: {
                  com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.Builder subBuilder = null;
                  if (conditionCase_ == 3) {
                    subBuilder = ((com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition) condition_).toBuilder();
                  }
                  condition_ =
                       input.readMessage(com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition) condition_);
                    condition_ = subBuilder.buildPartial();
                  }
                  conditionCase_ = 3;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:search.now.ui.piet.MediaQueryCondition)
    private static final com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MediaQueryCondition();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.search.now.ui.piet.MediaQueriesProto.MediaQueryCondition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MediaQueryCondition> PARSER;

    public static com.google.protobuf.Parser<MediaQueryCondition> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface FrameWidthConditionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:search.now.ui.piet.FrameWidthCondition)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Width of the viewport, expressed in DP.
     * </pre>
     *
     * <code>optional int32 width = 1;</code>
     */
    boolean hasWidth();
    /**
     * <pre>
     * Width of the viewport, expressed in DP.
     * </pre>
     *
     * <code>optional int32 width = 1;</code>
     */
    int getWidth();

    /**
     * <pre>
     * Defines how the condition match should be evaluated.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.ComparisonCondition condition = 2;</code>
     */
    boolean hasCondition();
    /**
     * <pre>
     * Defines how the condition match should be evaluated.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.ComparisonCondition condition = 2;</code>
     */
    com.google.search.now.ui.piet.MediaQueriesProto.ComparisonCondition getCondition();
  }
  /**
   * <pre>
   * Width of each Frame in the current Piet rendering context. For multi-column
   * layouts (in which Piet is instantiated independently in more than one
   * column), this refers to the width of the individual column, not the overall
   * width of the containing app.
   * </pre>
   *
   * Protobuf type {@code search.now.ui.piet.FrameWidthCondition}
   */
  public  static final class FrameWidthCondition extends
      com.google.protobuf.GeneratedMessageLite<
          FrameWidthCondition, FrameWidthCondition.Builder> implements
      // @@protoc_insertion_point(message_implements:search.now.ui.piet.FrameWidthCondition)
      FrameWidthConditionOrBuilder {
    private FrameWidthCondition() {
    }
    private int bitField0_;
    public static final int WIDTH_FIELD_NUMBER = 1;
    private int width_;
    /**
     * <pre>
     * Width of the viewport, expressed in DP.
     * </pre>
     *
     * <code>optional int32 width = 1;</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Width of the viewport, expressed in DP.
     * </pre>
     *
     * <code>optional int32 width = 1;</code>
     */
    public int getWidth() {
      return width_;
    }
    /**
     * <pre>
     * Width of the viewport, expressed in DP.
     * </pre>
     *
     * <code>optional int32 width = 1;</code>
     */
    private void setWidth(int value) {
      bitField0_ |= 0x00000001;
      width_ = value;
    }
    /**
     * <pre>
     * Width of the viewport, expressed in DP.
     * </pre>
     *
     * <code>optional int32 width = 1;</code>
     */
    private void clearWidth() {
      bitField0_ = (bitField0_ & ~0x00000001);
      width_ = 0;
    }

    public static final int CONDITION_FIELD_NUMBER = 2;
    private int condition_;
    /**
     * <pre>
     * Defines how the condition match should be evaluated.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.ComparisonCondition condition = 2;</code>
     */
    public boolean hasCondition() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Defines how the condition match should be evaluated.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.ComparisonCondition condition = 2;</code>
     */
    public com.google.search.now.ui.piet.MediaQueriesProto.ComparisonCondition getCondition() {
      com.google.search.now.ui.piet.MediaQueriesProto.ComparisonCondition result = com.google.search.now.ui.piet.MediaQueriesProto.ComparisonCondition.forNumber(condition_);
      return result == null ? com.google.search.now.ui.piet.MediaQueriesProto.ComparisonCondition.UNSPECIFIED : result;
    }
    /**
     * <pre>
     * Defines how the condition match should be evaluated.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.ComparisonCondition condition = 2;</code>
     */
    private void setCondition(com.google.search.now.ui.piet.MediaQueriesProto.ComparisonCondition value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      condition_ = value.getNumber();
    }
    /**
     * <pre>
     * Defines how the condition match should be evaluated.
     * </pre>
     *
     * <code>optional .search.now.ui.piet.ComparisonCondition condition = 2;</code>
     */
    private void clearCondition() {
      bitField0_ = (bitField0_ & ~0x00000002);
      condition_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, condition_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, condition_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Width of each Frame in the current Piet rendering context. For multi-column
     * layouts (in which Piet is instantiated independently in more than one
     * column), this refers to the width of the individual column, not the overall
     * width of the containing app.
     * </pre>
     *
     * Protobuf type {@code search.now.ui.piet.FrameWidthCondition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition, Builder> implements
        // @@protoc_insertion_point(builder_implements:search.now.ui.piet.FrameWidthCondition)
        com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthConditionOrBuilder {
      // Construct using com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Width of the viewport, expressed in DP.
       * </pre>
       *
       * <code>optional int32 width = 1;</code>
       */
      public boolean hasWidth() {
        return instance.hasWidth();
      }
      /**
       * <pre>
       * Width of the viewport, expressed in DP.
       * </pre>
       *
       * <code>optional int32 width = 1;</code>
       */
      public int getWidth() {
        return instance.getWidth();
      }
      /**
       * <pre>
       * Width of the viewport, expressed in DP.
       * </pre>
       *
       * <code>optional int32 width = 1;</code>
       */
      public Builder setWidth(int value) {
        copyOnWrite();
        instance.setWidth(value);
        return this;
      }
      /**
       * <pre>
       * Width of the viewport, expressed in DP.
       * </pre>
       *
       * <code>optional int32 width = 1;</code>
       */
      public Builder clearWidth() {
        copyOnWrite();
        instance.clearWidth();
        return this;
      }

      /**
       * <pre>
       * Defines how the condition match should be evaluated.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.ComparisonCondition condition = 2;</code>
       */
      public boolean hasCondition() {
        return instance.hasCondition();
      }
      /**
       * <pre>
       * Defines how the condition match should be evaluated.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.ComparisonCondition condition = 2;</code>
       */
      public com.google.search.now.ui.piet.MediaQueriesProto.ComparisonCondition getCondition() {
        return instance.getCondition();
      }
      /**
       * <pre>
       * Defines how the condition match should be evaluated.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.ComparisonCondition condition = 2;</code>
       */
      public Builder setCondition(com.google.search.now.ui.piet.MediaQueriesProto.ComparisonCondition value) {
        copyOnWrite();
        instance.setCondition(value);
        return this;
      }
      /**
       * <pre>
       * Defines how the condition match should be evaluated.
       * </pre>
       *
       * <code>optional .search.now.ui.piet.ComparisonCondition condition = 2;</code>
       */
      public Builder clearCondition() {
        copyOnWrite();
        instance.clearCondition();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.now.ui.piet.FrameWidthCondition)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition other = (com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition) arg1;
          width_ = visitor.visitInt(
              hasWidth(), width_,
              other.hasWidth(), other.width_);
          condition_ = visitor.visitInt(hasCondition(), condition_,
              other.hasCondition(), other.condition_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  width_ = input.readInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  com.google.search.now.ui.piet.MediaQueriesProto.ComparisonCondition value = com.google.search.now.ui.piet.MediaQueriesProto.ComparisonCondition.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    condition_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:search.now.ui.piet.FrameWidthCondition)
    private static final com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FrameWidthCondition();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.search.now.ui.piet.MediaQueriesProto.FrameWidthCondition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<FrameWidthCondition> PARSER;

    public static com.google.protobuf.Parser<FrameWidthCondition> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface OrientationConditionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:search.now.ui.piet.OrientationCondition)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .search.now.ui.piet.OrientationCondition.Orientation orientation = 1;</code>
     */
    boolean hasOrientation();
    /**
     * <code>optional .search.now.ui.piet.OrientationCondition.Orientation orientation = 1;</code>
     */
    com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Orientation getOrientation();
  }
  /**
   * <pre>
   * Whether the device is oriented in portrait mode or landscape mode. This
   * applies mostly to mobile devices, but it is possible also for a Web device to
   * be oriented in portrait mode.
   * </pre>
   *
   * Protobuf type {@code search.now.ui.piet.OrientationCondition}
   */
  public  static final class OrientationCondition extends
      com.google.protobuf.GeneratedMessageLite<
          OrientationCondition, OrientationCondition.Builder> implements
      // @@protoc_insertion_point(message_implements:search.now.ui.piet.OrientationCondition)
      OrientationConditionOrBuilder {
    private OrientationCondition() {
    }
    /**
     * Protobuf enum {@code search.now.ui.piet.OrientationCondition.Orientation}
     */
    public enum Orientation
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * Must not be set to UNSPECIFIED, otherwise
       * ERR_INVALID_MEDIA_QUERY_CONDITION will be raised.
       * </pre>
       *
       * <code>UNSPECIFIED = 0;</code>
       */
      UNSPECIFIED(0),
      /**
       * <pre>
       * Height of the device is greater than or equal to the width of the device.
       * Default.
       * </pre>
       *
       * <code>PORTRAIT = 1;</code>
       */
      PORTRAIT(1),
      /**
       * <pre>
       * Width of the device is greater than the height of the device.
       * </pre>
       *
       * <code>LANDSCAPE = 2;</code>
       */
      LANDSCAPE(2),
      ;

      /**
       * <pre>
       * Must not be set to UNSPECIFIED, otherwise
       * ERR_INVALID_MEDIA_QUERY_CONDITION will be raised.
       * </pre>
       *
       * <code>UNSPECIFIED = 0;</code>
       */
      public static final int UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Height of the device is greater than or equal to the width of the device.
       * Default.
       * </pre>
       *
       * <code>PORTRAIT = 1;</code>
       */
      public static final int PORTRAIT_VALUE = 1;
      /**
       * <pre>
       * Width of the device is greater than the height of the device.
       * </pre>
       *
       * <code>LANDSCAPE = 2;</code>
       */
      public static final int LANDSCAPE_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Orientation valueOf(int value) {
        return forNumber(value);
      }

      public static Orientation forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED;
          case 1: return PORTRAIT;
          case 2: return LANDSCAPE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Orientation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Orientation> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Orientation>() {
              public Orientation findValueByNumber(int number) {
                return Orientation.forNumber(number);
              }
            };

      private final int value;

      private Orientation(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:search.now.ui.piet.OrientationCondition.Orientation)
    }

    private int bitField0_;
    public static final int ORIENTATION_FIELD_NUMBER = 1;
    private int orientation_;
    /**
     * <code>optional .search.now.ui.piet.OrientationCondition.Orientation orientation = 1;</code>
     */
    public boolean hasOrientation() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .search.now.ui.piet.OrientationCondition.Orientation orientation = 1;</code>
     */
    public com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Orientation getOrientation() {
      com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Orientation result = com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Orientation.forNumber(orientation_);
      return result == null ? com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Orientation.UNSPECIFIED : result;
    }
    /**
     * <code>optional .search.now.ui.piet.OrientationCondition.Orientation orientation = 1;</code>
     */
    private void setOrientation(com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Orientation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      orientation_ = value.getNumber();
    }
    /**
     * <code>optional .search.now.ui.piet.OrientationCondition.Orientation orientation = 1;</code>
     */
    private void clearOrientation() {
      bitField0_ = (bitField0_ & ~0x00000001);
      orientation_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, orientation_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, orientation_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Whether the device is oriented in portrait mode or landscape mode. This
     * applies mostly to mobile devices, but it is possible also for a Web device to
     * be oriented in portrait mode.
     * </pre>
     *
     * Protobuf type {@code search.now.ui.piet.OrientationCondition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition, Builder> implements
        // @@protoc_insertion_point(builder_implements:search.now.ui.piet.OrientationCondition)
        com.google.search.now.ui.piet.MediaQueriesProto.OrientationConditionOrBuilder {
      // Construct using com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .search.now.ui.piet.OrientationCondition.Orientation orientation = 1;</code>
       */
      public boolean hasOrientation() {
        return instance.hasOrientation();
      }
      /**
       * <code>optional .search.now.ui.piet.OrientationCondition.Orientation orientation = 1;</code>
       */
      public com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Orientation getOrientation() {
        return instance.getOrientation();
      }
      /**
       * <code>optional .search.now.ui.piet.OrientationCondition.Orientation orientation = 1;</code>
       */
      public Builder setOrientation(com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Orientation value) {
        copyOnWrite();
        instance.setOrientation(value);
        return this;
      }
      /**
       * <code>optional .search.now.ui.piet.OrientationCondition.Orientation orientation = 1;</code>
       */
      public Builder clearOrientation() {
        copyOnWrite();
        instance.clearOrientation();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.now.ui.piet.OrientationCondition)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition other = (com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition) arg1;
          orientation_ = visitor.visitInt(hasOrientation(), orientation_,
              other.hasOrientation(), other.orientation_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Orientation value = com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.Orientation.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    orientation_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:search.now.ui.piet.OrientationCondition)
    private static final com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new OrientationCondition();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.search.now.ui.piet.MediaQueriesProto.OrientationCondition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<OrientationCondition> PARSER;

    public static com.google.protobuf.Parser<OrientationCondition> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DarkLightConditionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:search.now.ui.piet.DarkLightCondition)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .search.now.ui.piet.DarkLightCondition.DarkLightMode mode = 1;</code>
     */
    boolean hasMode();
    /**
     * <code>optional .search.now.ui.piet.DarkLightCondition.DarkLightMode mode = 1;</code>
     */
    com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.DarkLightMode getMode();
  }
  /**
   * <pre>
   * Whether the UI should use a dark theme (white/light text on a black/dark
   * background) or a light theme (black/dark text on a white/light background).
   * </pre>
   *
   * Protobuf type {@code search.now.ui.piet.DarkLightCondition}
   */
  public  static final class DarkLightCondition extends
      com.google.protobuf.GeneratedMessageLite<
          DarkLightCondition, DarkLightCondition.Builder> implements
      // @@protoc_insertion_point(message_implements:search.now.ui.piet.DarkLightCondition)
      DarkLightConditionOrBuilder {
    private DarkLightCondition() {
    }
    /**
     * Protobuf enum {@code search.now.ui.piet.DarkLightCondition.DarkLightMode}
     */
    public enum DarkLightMode
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <pre>
       * Must not be set to UNSPECIFIED, otherwise
       * ERR_INVALID_MEDIA_QUERY_CONDITION will be raised.
       * </pre>
       *
       * <code>UNSPECIFIED = 0;</code>
       */
      UNSPECIFIED(0),
      /**
       * <pre>
       * Black/dark text on white/light background.
       * </pre>
       *
       * <code>LIGHT = 1;</code>
       */
      LIGHT(1),
      /**
       * <pre>
       * Light/white text on black/dark background.
       * </pre>
       *
       * <code>DARK = 2;</code>
       */
      DARK(2),
      ;

      /**
       * <pre>
       * Must not be set to UNSPECIFIED, otherwise
       * ERR_INVALID_MEDIA_QUERY_CONDITION will be raised.
       * </pre>
       *
       * <code>UNSPECIFIED = 0;</code>
       */
      public static final int UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Black/dark text on white/light background.
       * </pre>
       *
       * <code>LIGHT = 1;</code>
       */
      public static final int LIGHT_VALUE = 1;
      /**
       * <pre>
       * Light/white text on black/dark background.
       * </pre>
       *
       * <code>DARK = 2;</code>
       */
      public static final int DARK_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DarkLightMode valueOf(int value) {
        return forNumber(value);
      }

      public static DarkLightMode forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED;
          case 1: return LIGHT;
          case 2: return DARK;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DarkLightMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DarkLightMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DarkLightMode>() {
              public DarkLightMode findValueByNumber(int number) {
                return DarkLightMode.forNumber(number);
              }
            };

      private final int value;

      private DarkLightMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:search.now.ui.piet.DarkLightCondition.DarkLightMode)
    }

    private int bitField0_;
    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <code>optional .search.now.ui.piet.DarkLightCondition.DarkLightMode mode = 1;</code>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .search.now.ui.piet.DarkLightCondition.DarkLightMode mode = 1;</code>
     */
    public com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.DarkLightMode getMode() {
      com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.DarkLightMode result = com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.DarkLightMode.forNumber(mode_);
      return result == null ? com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.DarkLightMode.UNSPECIFIED : result;
    }
    /**
     * <code>optional .search.now.ui.piet.DarkLightCondition.DarkLightMode mode = 1;</code>
     */
    private void setMode(com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.DarkLightMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      mode_ = value.getNumber();
    }
    /**
     * <code>optional .search.now.ui.piet.DarkLightCondition.DarkLightMode mode = 1;</code>
     */
    private void clearMode() {
      bitField0_ = (bitField0_ & ~0x00000001);
      mode_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Whether the UI should use a dark theme (white/light text on a black/dark
     * background) or a light theme (black/dark text on a white/light background).
     * </pre>
     *
     * Protobuf type {@code search.now.ui.piet.DarkLightCondition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition, Builder> implements
        // @@protoc_insertion_point(builder_implements:search.now.ui.piet.DarkLightCondition)
        com.google.search.now.ui.piet.MediaQueriesProto.DarkLightConditionOrBuilder {
      // Construct using com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .search.now.ui.piet.DarkLightCondition.DarkLightMode mode = 1;</code>
       */
      public boolean hasMode() {
        return instance.hasMode();
      }
      /**
       * <code>optional .search.now.ui.piet.DarkLightCondition.DarkLightMode mode = 1;</code>
       */
      public com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.DarkLightMode getMode() {
        return instance.getMode();
      }
      /**
       * <code>optional .search.now.ui.piet.DarkLightCondition.DarkLightMode mode = 1;</code>
       */
      public Builder setMode(com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.DarkLightMode value) {
        copyOnWrite();
        instance.setMode(value);
        return this;
      }
      /**
       * <code>optional .search.now.ui.piet.DarkLightCondition.DarkLightMode mode = 1;</code>
       */
      public Builder clearMode() {
        copyOnWrite();
        instance.clearMode();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:search.now.ui.piet.DarkLightCondition)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition other = (com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition) arg1;
          mode_ = visitor.visitInt(hasMode(), mode_,
              other.hasMode(), other.mode_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.DarkLightMode value = com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.DarkLightMode.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    mode_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:search.now.ui.piet.DarkLightCondition)
    private static final com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DarkLightCondition();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.google.search.now.ui.piet.MediaQueriesProto.DarkLightCondition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DarkLightCondition> PARSER;

    public static com.google.protobuf.Parser<DarkLightCondition> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
