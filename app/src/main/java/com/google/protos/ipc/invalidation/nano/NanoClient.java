// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.google.protos.ipc.invalidation.nano;

// @@protoc_insertion_point(imports_scope)

@SuppressWarnings("hiding")
public interface NanoClient {

  public static final class AckHandleP extends
      com.google.protobuf.nano.ExtendableMessageNano<AckHandleP> {

    private static volatile AckHandleP[] _emptyArray;
    public static AckHandleP[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AckHandleP[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .com.google.protos.ipc.invalidation.InvalidationP invalidation = 1;
    public com.google.protos.ipc.invalidation.nano.NanoClientProtocol.InvalidationP invalidation;

    // @@protoc_insertion_point(class_scope:com.google.protos.ipc.invalidation.AckHandleP)

    public AckHandleP() {
      clear();
    }

    public AckHandleP clear() {
      invalidation = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.invalidation != null) {
        output.writeMessage(1, this.invalidation);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.invalidation != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.invalidation);
      }
      return size;
    }

    @Override
    public AckHandleP mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!super.storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.invalidation == null) {
              this.invalidation = new com.google.protos.ipc.invalidation.nano.NanoClientProtocol.InvalidationP();
            }
            input.readMessage(this.invalidation);
            break;
          }
        }
      }
    }

    public static AckHandleP parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AckHandleP(), data);
    }

    public static AckHandleP parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AckHandleP().mergeFrom(input);
    }
  }

  public static final class PersistentTiclState extends
      com.google.protobuf.nano.ExtendableMessageNano<PersistentTiclState> {

    private static volatile PersistentTiclState[] _emptyArray;
    public static PersistentTiclState[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PersistentTiclState[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bytes client_token = 1;
    public byte[] clientToken;

    // optional int64 last_message_send_time_ms = 2 [default = 0];
    public java.lang.Long lastMessageSendTimeMs;

    // @@protoc_insertion_point(class_scope:com.google.protos.ipc.invalidation.PersistentTiclState)

    public PersistentTiclState() {
      clear();
    }

    public PersistentTiclState clear() {
      clientToken = null;
      lastMessageSendTimeMs = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.clientToken != null) {
        output.writeBytes(1, this.clientToken);
      }
      if (this.lastMessageSendTimeMs != null) {
        output.writeInt64(2, this.lastMessageSendTimeMs);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.clientToken != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(1, this.clientToken);
      }
      if (this.lastMessageSendTimeMs != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.lastMessageSendTimeMs);
      }
      return size;
    }

    @Override
    public PersistentTiclState mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!super.storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.clientToken = input.readBytes();
            break;
          }
          case 16: {
            this.lastMessageSendTimeMs = input.readInt64();
            break;
          }
        }
      }
    }

    public static PersistentTiclState parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PersistentTiclState(), data);
    }

    public static PersistentTiclState parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PersistentTiclState().mergeFrom(input);
    }
  }

  public static final class PersistentStateBlob extends
      com.google.protobuf.nano.ExtendableMessageNano<PersistentStateBlob> {

    private static volatile PersistentStateBlob[] _emptyArray;
    public static PersistentStateBlob[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PersistentStateBlob[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .com.google.protos.ipc.invalidation.PersistentTiclState ticl_state = 1;
    public com.google.protos.ipc.invalidation.nano.NanoClient.PersistentTiclState ticlState;

    // optional bytes authentication_code = 2;
    public byte[] authenticationCode;

    // @@protoc_insertion_point(class_scope:com.google.protos.ipc.invalidation.PersistentStateBlob)

    public PersistentStateBlob() {
      clear();
    }

    public PersistentStateBlob clear() {
      ticlState = null;
      authenticationCode = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.ticlState != null) {
        output.writeMessage(1, this.ticlState);
      }
      if (this.authenticationCode != null) {
        output.writeBytes(2, this.authenticationCode);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.ticlState != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.ticlState);
      }
      if (this.authenticationCode != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(2, this.authenticationCode);
      }
      return size;
    }

    @Override
    public PersistentStateBlob mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!super.storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.ticlState == null) {
              this.ticlState = new com.google.protos.ipc.invalidation.nano.NanoClient.PersistentTiclState();
            }
            input.readMessage(this.ticlState);
            break;
          }
          case 18: {
            this.authenticationCode = input.readBytes();
            break;
          }
        }
      }
    }

    public static PersistentStateBlob parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PersistentStateBlob(), data);
    }

    public static PersistentStateBlob parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PersistentStateBlob().mergeFrom(input);
    }
  }

  public static final class RunStateP extends
      com.google.protobuf.nano.ExtendableMessageNano<RunStateP> {

    // enum State
    public static final int NOT_STARTED = 1;
    public static final int STARTED = 2;
    public static final int STOPPED = 3;

    private static volatile RunStateP[] _emptyArray;
    public static RunStateP[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RunStateP[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .com.google.protos.ipc.invalidation.RunStateP.State state = 1;
    public java.lang.Integer state;

    // @@protoc_insertion_point(class_scope:com.google.protos.ipc.invalidation.RunStateP)

    public RunStateP() {
      clear();
    }

    public RunStateP clear() {
      state = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.state != null) {
        output.writeInt32(1, this.state);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.state != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.state);
      }
      return size;
    }

    @Override
    public RunStateP mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!super.storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int initialPos = input.getPosition();
            int value = input.readInt32();
            switch (value) {
              case com.google.protos.ipc.invalidation.nano.NanoClient.RunStateP.NOT_STARTED:
              case com.google.protos.ipc.invalidation.nano.NanoClient.RunStateP.STARTED:
              case com.google.protos.ipc.invalidation.nano.NanoClient.RunStateP.STOPPED:
                this.state = value;
                break;
              default:
                input.rewindToPosition(initialPos);
                storeUnknownField(input, tag);
                break;
            }
            break;
          }
        }
      }
    }

    public static RunStateP parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RunStateP(), data);
    }

    public static RunStateP parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RunStateP().mergeFrom(input);
    }
  }

  public static final class ExponentialBackoffState extends
      com.google.protobuf.nano.ExtendableMessageNano<ExponentialBackoffState> {

    private static volatile ExponentialBackoffState[] _emptyArray;
    public static ExponentialBackoffState[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ExponentialBackoffState[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 current_max_delay = 1;
    public java.lang.Integer currentMaxDelay;

    // optional bool in_retry_mode = 2;
    public java.lang.Boolean inRetryMode;

    // @@protoc_insertion_point(class_scope:com.google.protos.ipc.invalidation.ExponentialBackoffState)

    public ExponentialBackoffState() {
      clear();
    }

    public ExponentialBackoffState clear() {
      currentMaxDelay = null;
      inRetryMode = null;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.currentMaxDelay != null) {
        output.writeInt32(1, this.currentMaxDelay);
      }
      if (this.inRetryMode != null) {
        output.writeBool(2, this.inRetryMode);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.currentMaxDelay != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.currentMaxDelay);
      }
      if (this.inRetryMode != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.inRetryMode);
      }
      return size;
    }

    @Override
    public ExponentialBackoffState mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!super.storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.currentMaxDelay = input.readInt32();
            break;
          }
          case 16: {
            this.inRetryMode = input.readBool();
            break;
          }
        }
      }
    }

    public static ExponentialBackoffState parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ExponentialBackoffState(), data);
    }

    public static ExponentialBackoffState parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ExponentialBackoffState().mergeFrom(input);
    }
  }
}
