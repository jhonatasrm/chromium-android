// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Condition on the status of a previous script run.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.ScriptStatusMatchProto}
 */
public  final class ScriptStatusMatchProto extends
    com.google.protobuf.GeneratedMessageLite<
        ScriptStatusMatchProto, ScriptStatusMatchProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ScriptStatusMatchProto)
    ScriptStatusMatchProtoOrBuilder {
  private ScriptStatusMatchProto() {
    script_ = "";
  }
  /**
   * Protobuf enum {@code autofill_assistant.ScriptStatusMatchProto.Comparator}
   */
  public enum Comparator
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <code>EQUAL = 1;</code>
     */
    EQUAL(1),
    /**
     * <code>DIFFERENT = 2;</code>
     */
    DIFFERENT(2),
    ;

    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <code>EQUAL = 1;</code>
     */
    public static final int EQUAL_VALUE = 1;
    /**
     * <code>DIFFERENT = 2;</code>
     */
    public static final int DIFFERENT_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Comparator valueOf(int value) {
      return forNumber(value);
    }

    public static Comparator forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return EQUAL;
        case 2: return DIFFERENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Comparator>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Comparator> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Comparator>() {
            public Comparator findValueByNumber(int number) {
              return Comparator.forNumber(number);
            }
          };

    private final int value;

    private Comparator(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:autofill_assistant.ScriptStatusMatchProto.Comparator)
  }

  private int bitField0_;
  public static final int SCRIPT_FIELD_NUMBER = 1;
  private java.lang.String script_;
  /**
   * <pre>
   * Required. Path of the script whose status should be checked.
   * </pre>
   *
   * <code>optional string script = 1;</code>
   */
  public boolean hasScript() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * Required. Path of the script whose status should be checked.
   * </pre>
   *
   * <code>optional string script = 1;</code>
   */
  public java.lang.String getScript() {
    return script_;
  }
  /**
   * <pre>
   * Required. Path of the script whose status should be checked.
   * </pre>
   *
   * <code>optional string script = 1;</code>
   */
  public com.google.protobuf.ByteString
      getScriptBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(script_);
  }
  /**
   * <pre>
   * Required. Path of the script whose status should be checked.
   * </pre>
   *
   * <code>optional string script = 1;</code>
   */
  private void setScript(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    script_ = value;
  }
  /**
   * <pre>
   * Required. Path of the script whose status should be checked.
   * </pre>
   *
   * <code>optional string script = 1;</code>
   */
  private void clearScript() {
    bitField0_ = (bitField0_ & ~0x00000001);
    script_ = getDefaultInstance().getScript();
  }
  /**
   * <pre>
   * Required. Path of the script whose status should be checked.
   * </pre>
   *
   * <code>optional string script = 1;</code>
   */
  private void setScriptBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    script_ = value.toStringUtf8();
  }

  public static final int STATUS_FIELD_NUMBER = 2;
  private int status_;
  /**
   * <pre>
   * Required. The status the script should have for the condition to hold.
   * </pre>
   *
   * <code>optional .autofill_assistant.ScriptStatusProto status = 2;</code>
   */
  public boolean hasStatus() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * Required. The status the script should have for the condition to hold.
   * </pre>
   *
   * <code>optional .autofill_assistant.ScriptStatusProto status = 2;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusProto getStatus() {
    org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusProto result = org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusProto.forNumber(status_);
    return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusProto.UNKNOWN_SCRIPT_STATUS : result;
  }
  /**
   * <pre>
   * Required. The status the script should have for the condition to hold.
   * </pre>
   *
   * <code>optional .autofill_assistant.ScriptStatusProto status = 2;</code>
   */
  private void setStatus(org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    bitField0_ |= 0x00000002;
    status_ = value.getNumber();
  }
  /**
   * <pre>
   * Required. The status the script should have for the condition to hold.
   * </pre>
   *
   * <code>optional .autofill_assistant.ScriptStatusProto status = 2;</code>
   */
  private void clearStatus() {
    bitField0_ = (bitField0_ & ~0x00000002);
    status_ = 0;
  }

  public static final int COMPARATOR_FIELD_NUMBER = 3;
  private int comparator_;
  /**
   * <pre>
   * Optional. The comparison performed when checking the status. It will be
   * interpreted as EQUAL if not set.
   * </pre>
   *
   * <code>optional .autofill_assistant.ScriptStatusMatchProto.Comparator comparator = 3;</code>
   */
  public boolean hasComparator() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * Optional. The comparison performed when checking the status. It will be
   * interpreted as EQUAL if not set.
   * </pre>
   *
   * <code>optional .autofill_assistant.ScriptStatusMatchProto.Comparator comparator = 3;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Comparator getComparator() {
    org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Comparator result = org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Comparator.forNumber(comparator_);
    return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Comparator.UNSPECIFIED : result;
  }
  /**
   * <pre>
   * Optional. The comparison performed when checking the status. It will be
   * interpreted as EQUAL if not set.
   * </pre>
   *
   * <code>optional .autofill_assistant.ScriptStatusMatchProto.Comparator comparator = 3;</code>
   */
  private void setComparator(org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Comparator value) {
    if (value == null) {
      throw new NullPointerException();
    }
    bitField0_ |= 0x00000004;
    comparator_ = value.getNumber();
  }
  /**
   * <pre>
   * Optional. The comparison performed when checking the status. It will be
   * interpreted as EQUAL if not set.
   * </pre>
   *
   * <code>optional .autofill_assistant.ScriptStatusMatchProto.Comparator comparator = 3;</code>
   */
  private void clearComparator() {
    bitField0_ = (bitField0_ & ~0x00000004);
    comparator_ = 0;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeString(1, getScript());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeEnum(2, status_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeEnum(3, comparator_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getScript());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, status_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, comparator_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Condition on the status of a previous script run.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.ScriptStatusMatchProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ScriptStatusMatchProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Required. Path of the script whose status should be checked.
     * </pre>
     *
     * <code>optional string script = 1;</code>
     */
    public boolean hasScript() {
      return instance.hasScript();
    }
    /**
     * <pre>
     * Required. Path of the script whose status should be checked.
     * </pre>
     *
     * <code>optional string script = 1;</code>
     */
    public java.lang.String getScript() {
      return instance.getScript();
    }
    /**
     * <pre>
     * Required. Path of the script whose status should be checked.
     * </pre>
     *
     * <code>optional string script = 1;</code>
     */
    public com.google.protobuf.ByteString
        getScriptBytes() {
      return instance.getScriptBytes();
    }
    /**
     * <pre>
     * Required. Path of the script whose status should be checked.
     * </pre>
     *
     * <code>optional string script = 1;</code>
     */
    public Builder setScript(
        java.lang.String value) {
      copyOnWrite();
      instance.setScript(value);
      return this;
    }
    /**
     * <pre>
     * Required. Path of the script whose status should be checked.
     * </pre>
     *
     * <code>optional string script = 1;</code>
     */
    public Builder clearScript() {
      copyOnWrite();
      instance.clearScript();
      return this;
    }
    /**
     * <pre>
     * Required. Path of the script whose status should be checked.
     * </pre>
     *
     * <code>optional string script = 1;</code>
     */
    public Builder setScriptBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setScriptBytes(value);
      return this;
    }

    /**
     * <pre>
     * Required. The status the script should have for the condition to hold.
     * </pre>
     *
     * <code>optional .autofill_assistant.ScriptStatusProto status = 2;</code>
     */
    public boolean hasStatus() {
      return instance.hasStatus();
    }
    /**
     * <pre>
     * Required. The status the script should have for the condition to hold.
     * </pre>
     *
     * <code>optional .autofill_assistant.ScriptStatusProto status = 2;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusProto getStatus() {
      return instance.getStatus();
    }
    /**
     * <pre>
     * Required. The status the script should have for the condition to hold.
     * </pre>
     *
     * <code>optional .autofill_assistant.ScriptStatusProto status = 2;</code>
     */
    public Builder setStatus(org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusProto value) {
      copyOnWrite();
      instance.setStatus(value);
      return this;
    }
    /**
     * <pre>
     * Required. The status the script should have for the condition to hold.
     * </pre>
     *
     * <code>optional .autofill_assistant.ScriptStatusProto status = 2;</code>
     */
    public Builder clearStatus() {
      copyOnWrite();
      instance.clearStatus();
      return this;
    }

    /**
     * <pre>
     * Optional. The comparison performed when checking the status. It will be
     * interpreted as EQUAL if not set.
     * </pre>
     *
     * <code>optional .autofill_assistant.ScriptStatusMatchProto.Comparator comparator = 3;</code>
     */
    public boolean hasComparator() {
      return instance.hasComparator();
    }
    /**
     * <pre>
     * Optional. The comparison performed when checking the status. It will be
     * interpreted as EQUAL if not set.
     * </pre>
     *
     * <code>optional .autofill_assistant.ScriptStatusMatchProto.Comparator comparator = 3;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Comparator getComparator() {
      return instance.getComparator();
    }
    /**
     * <pre>
     * Optional. The comparison performed when checking the status. It will be
     * interpreted as EQUAL if not set.
     * </pre>
     *
     * <code>optional .autofill_assistant.ScriptStatusMatchProto.Comparator comparator = 3;</code>
     */
    public Builder setComparator(org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Comparator value) {
      copyOnWrite();
      instance.setComparator(value);
      return this;
    }
    /**
     * <pre>
     * Optional. The comparison performed when checking the status. It will be
     * interpreted as EQUAL if not set.
     * </pre>
     *
     * <code>optional .autofill_assistant.ScriptStatusMatchProto.Comparator comparator = 3;</code>
     */
    public Builder clearComparator() {
      copyOnWrite();
      instance.clearComparator();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ScriptStatusMatchProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto other = (org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto) arg1;
        script_ = visitor.visitString(
            hasScript(), script_,
            other.hasScript(), other.script_);
        status_ = visitor.visitInt(hasStatus(), status_,
            other.hasStatus(), other.status_);
        comparator_ = visitor.visitInt(hasComparator(), comparator_,
            other.hasComparator(), other.comparator_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readString();
                bitField0_ |= 0x00000001;
                script_ = s;
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusProto value = org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusProto.forNumber(rawValue);
                if (value == null) {
                  super.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  status_ = rawValue;
                }
                break;
              }
              case 24: {
                int rawValue = input.readEnum();
                org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Comparator value = org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Comparator.forNumber(rawValue);
                if (value == null) {
                  super.mergeVarintField(3, rawValue);
                } else {
                  bitField0_ |= 0x00000004;
                  comparator_ = rawValue;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ScriptStatusMatchProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ScriptStatusMatchProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ScriptStatusMatchProto> PARSER;

  public static com.google.protobuf.Parser<ScriptStatusMatchProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

