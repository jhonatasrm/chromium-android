// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * Protobuf type {@code autofill_assistant.ScriptPreconditionProto}
 */
public  final class ScriptPreconditionProto extends
    com.google.protobuf.GeneratedMessageLite<
        ScriptPreconditionProto, ScriptPreconditionProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ScriptPreconditionProto)
    ScriptPreconditionProtoOrBuilder {
  private ScriptPreconditionProto() {
    elementsExist_ = emptyProtobufList();
    pathPattern_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    domain_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    scriptParameterMatch_ = emptyProtobufList();
    scriptStatusMatch_ = emptyProtobufList();
    formValueMatch_ = emptyProtobufList();
  }
  public static final int ELEMENTS_EXIST_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto> elementsExist_;
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto> getElementsExistList() {
    return elementsExist_;
  }
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProtoOrBuilder> 
      getElementsExistOrBuilderList() {
    return elementsExist_;
  }
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  public int getElementsExistCount() {
    return elementsExist_.size();
  }
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto getElementsExist(int index) {
    return elementsExist_.get(index);
  }
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProtoOrBuilder getElementsExistOrBuilder(
      int index) {
    return elementsExist_.get(index);
  }
  private void ensureElementsExistIsMutable() {
    if (!elementsExist_.isModifiable()) {
      elementsExist_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(elementsExist_);
     }
  }

  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  private void setElementsExist(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureElementsExistIsMutable();
    elementsExist_.set(index, value);
  }
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  private void setElementsExist(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
    ensureElementsExistIsMutable();
    elementsExist_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  private void addElementsExist(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureElementsExistIsMutable();
    elementsExist_.add(value);
  }
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  private void addElementsExist(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureElementsExistIsMutable();
    elementsExist_.add(index, value);
  }
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  private void addElementsExist(
      org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
    ensureElementsExistIsMutable();
    elementsExist_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  private void addElementsExist(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
    ensureElementsExistIsMutable();
    elementsExist_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  private void addAllElementsExist(
      java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto> values) {
    ensureElementsExistIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, elementsExist_);
  }
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  private void clearElementsExist() {
    elementsExist_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Combined with AND: the elements referenced here must be present.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
   */
  private void removeElementsExist(int index) {
    ensureElementsExistIsMutable();
    elementsExist_.remove(index);
  }

  public static final int PATH_PATTERN_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.ProtobufList<String> pathPattern_;
  /**
   * <pre>
   * Pattern of the path parts of the URL, including query and '#''.
   * </pre>
   *
   * <code>repeated string path_pattern = 5;</code>
   */
  public java.util.List<String> getPathPatternList() {
    return pathPattern_;
  }
  /**
   * <pre>
   * Pattern of the path parts of the URL, including query and '#''.
   * </pre>
   *
   * <code>repeated string path_pattern = 5;</code>
   */
  public int getPathPatternCount() {
    return pathPattern_.size();
  }
  /**
   * <pre>
   * Pattern of the path parts of the URL, including query and '#''.
   * </pre>
   *
   * <code>repeated string path_pattern = 5;</code>
   */
  public java.lang.String getPathPattern(int index) {
    return pathPattern_.get(index);
  }
  /**
   * <pre>
   * Pattern of the path parts of the URL, including query and '#''.
   * </pre>
   *
   * <code>repeated string path_pattern = 5;</code>
   */
  public com.google.protobuf.ByteString
      getPathPatternBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        pathPattern_.get(index));
  }
  private void ensurePathPatternIsMutable() {
    if (!pathPattern_.isModifiable()) {
      pathPattern_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(pathPattern_);
     }
  }
  /**
   * <pre>
   * Pattern of the path parts of the URL, including query and '#''.
   * </pre>
   *
   * <code>repeated string path_pattern = 5;</code>
   */
  private void setPathPattern(
      int index, java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensurePathPatternIsMutable();
    pathPattern_.set(index, value);
  }
  /**
   * <pre>
   * Pattern of the path parts of the URL, including query and '#''.
   * </pre>
   *
   * <code>repeated string path_pattern = 5;</code>
   */
  private void addPathPattern(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensurePathPatternIsMutable();
    pathPattern_.add(value);
  }
  /**
   * <pre>
   * Pattern of the path parts of the URL, including query and '#''.
   * </pre>
   *
   * <code>repeated string path_pattern = 5;</code>
   */
  private void addAllPathPattern(
      java.lang.Iterable<java.lang.String> values) {
    ensurePathPatternIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, pathPattern_);
  }
  /**
   * <pre>
   * Pattern of the path parts of the URL, including query and '#''.
   * </pre>
   *
   * <code>repeated string path_pattern = 5;</code>
   */
  private void clearPathPattern() {
    pathPattern_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * Pattern of the path parts of the URL, including query and '#''.
   * </pre>
   *
   * <code>repeated string path_pattern = 5;</code>
   */
  private void addPathPatternBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensurePathPatternIsMutable();
    pathPattern_.add(value.toStringUtf8());
  }

  public static final int DOMAIN_FIELD_NUMBER = 6;
  private com.google.protobuf.Internal.ProtobufList<String> domain_;
  /**
   * <pre>
   * Domain (exact match) excluding the last '/' character.
   * </pre>
   *
   * <code>repeated string domain = 6;</code>
   */
  public java.util.List<String> getDomainList() {
    return domain_;
  }
  /**
   * <pre>
   * Domain (exact match) excluding the last '/' character.
   * </pre>
   *
   * <code>repeated string domain = 6;</code>
   */
  public int getDomainCount() {
    return domain_.size();
  }
  /**
   * <pre>
   * Domain (exact match) excluding the last '/' character.
   * </pre>
   *
   * <code>repeated string domain = 6;</code>
   */
  public java.lang.String getDomain(int index) {
    return domain_.get(index);
  }
  /**
   * <pre>
   * Domain (exact match) excluding the last '/' character.
   * </pre>
   *
   * <code>repeated string domain = 6;</code>
   */
  public com.google.protobuf.ByteString
      getDomainBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        domain_.get(index));
  }
  private void ensureDomainIsMutable() {
    if (!domain_.isModifiable()) {
      domain_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(domain_);
     }
  }
  /**
   * <pre>
   * Domain (exact match) excluding the last '/' character.
   * </pre>
   *
   * <code>repeated string domain = 6;</code>
   */
  private void setDomain(
      int index, java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainIsMutable();
    domain_.set(index, value);
  }
  /**
   * <pre>
   * Domain (exact match) excluding the last '/' character.
   * </pre>
   *
   * <code>repeated string domain = 6;</code>
   */
  private void addDomain(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainIsMutable();
    domain_.add(value);
  }
  /**
   * <pre>
   * Domain (exact match) excluding the last '/' character.
   * </pre>
   *
   * <code>repeated string domain = 6;</code>
   */
  private void addAllDomain(
      java.lang.Iterable<java.lang.String> values) {
    ensureDomainIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, domain_);
  }
  /**
   * <pre>
   * Domain (exact match) excluding the last '/' character.
   * </pre>
   *
   * <code>repeated string domain = 6;</code>
   */
  private void clearDomain() {
    domain_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * Domain (exact match) excluding the last '/' character.
   * </pre>
   *
   * <code>repeated string domain = 6;</code>
   */
  private void addDomainBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainIsMutable();
    domain_.add(value.toStringUtf8());
  }

  public static final int SCRIPT_PARAMETER_MATCH_FIELD_NUMBER = 7;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto> scriptParameterMatch_;
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto> getScriptParameterMatchList() {
    return scriptParameterMatch_;
  }
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProtoOrBuilder> 
      getScriptParameterMatchOrBuilderList() {
    return scriptParameterMatch_;
  }
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  public int getScriptParameterMatchCount() {
    return scriptParameterMatch_.size();
  }
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto getScriptParameterMatch(int index) {
    return scriptParameterMatch_.get(index);
  }
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProtoOrBuilder getScriptParameterMatchOrBuilder(
      int index) {
    return scriptParameterMatch_.get(index);
  }
  private void ensureScriptParameterMatchIsMutable() {
    if (!scriptParameterMatch_.isModifiable()) {
      scriptParameterMatch_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(scriptParameterMatch_);
     }
  }

  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  private void setScriptParameterMatch(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureScriptParameterMatchIsMutable();
    scriptParameterMatch_.set(index, value);
  }
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  private void setScriptParameterMatch(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto.Builder builderForValue) {
    ensureScriptParameterMatchIsMutable();
    scriptParameterMatch_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  private void addScriptParameterMatch(org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureScriptParameterMatchIsMutable();
    scriptParameterMatch_.add(value);
  }
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  private void addScriptParameterMatch(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureScriptParameterMatchIsMutable();
    scriptParameterMatch_.add(index, value);
  }
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  private void addScriptParameterMatch(
      org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto.Builder builderForValue) {
    ensureScriptParameterMatchIsMutable();
    scriptParameterMatch_.add(builderForValue.build());
  }
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  private void addScriptParameterMatch(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto.Builder builderForValue) {
    ensureScriptParameterMatchIsMutable();
    scriptParameterMatch_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  private void addAllScriptParameterMatch(
      java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto> values) {
    ensureScriptParameterMatchIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, scriptParameterMatch_);
  }
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  private void clearScriptParameterMatch() {
    scriptParameterMatch_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Combined with AND: all matches must be true for precondition to hold.
   * </pre>
   *
   * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
   */
  private void removeScriptParameterMatch(int index) {
    ensureScriptParameterMatchIsMutable();
    scriptParameterMatch_.remove(index);
  }

  public static final int SCRIPT_STATUS_MATCH_FIELD_NUMBER = 8;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto> scriptStatusMatch_;
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto> getScriptStatusMatchList() {
    return scriptStatusMatch_;
  }
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProtoOrBuilder> 
      getScriptStatusMatchOrBuilderList() {
    return scriptStatusMatch_;
  }
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  public int getScriptStatusMatchCount() {
    return scriptStatusMatch_.size();
  }
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto getScriptStatusMatch(int index) {
    return scriptStatusMatch_.get(index);
  }
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProtoOrBuilder getScriptStatusMatchOrBuilder(
      int index) {
    return scriptStatusMatch_.get(index);
  }
  private void ensureScriptStatusMatchIsMutable() {
    if (!scriptStatusMatch_.isModifiable()) {
      scriptStatusMatch_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(scriptStatusMatch_);
     }
  }

  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  private void setScriptStatusMatch(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureScriptStatusMatchIsMutable();
    scriptStatusMatch_.set(index, value);
  }
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  private void setScriptStatusMatch(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Builder builderForValue) {
    ensureScriptStatusMatchIsMutable();
    scriptStatusMatch_.set(index, builderForValue.build());
  }
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  private void addScriptStatusMatch(org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureScriptStatusMatchIsMutable();
    scriptStatusMatch_.add(value);
  }
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  private void addScriptStatusMatch(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureScriptStatusMatchIsMutable();
    scriptStatusMatch_.add(index, value);
  }
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  private void addScriptStatusMatch(
      org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Builder builderForValue) {
    ensureScriptStatusMatchIsMutable();
    scriptStatusMatch_.add(builderForValue.build());
  }
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  private void addScriptStatusMatch(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Builder builderForValue) {
    ensureScriptStatusMatchIsMutable();
    scriptStatusMatch_.add(index, builderForValue.build());
  }
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  private void addAllScriptStatusMatch(
      java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto> values) {
    ensureScriptStatusMatchIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, scriptStatusMatch_);
  }
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  private void clearScriptStatusMatch() {
    scriptStatusMatch_ = emptyProtobufList();
  }
  /**
   * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
   */
  private void removeScriptStatusMatch(int index) {
    ensureScriptStatusMatchIsMutable();
    scriptStatusMatch_.remove(index);
  }

  public static final int FORM_VALUE_MATCH_FIELD_NUMBER = 9;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto> formValueMatch_;
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto> getFormValueMatchList() {
    return formValueMatch_;
  }
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProtoOrBuilder> 
      getFormValueMatchOrBuilderList() {
    return formValueMatch_;
  }
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  public int getFormValueMatchCount() {
    return formValueMatch_.size();
  }
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto getFormValueMatch(int index) {
    return formValueMatch_.get(index);
  }
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProtoOrBuilder getFormValueMatchOrBuilder(
      int index) {
    return formValueMatch_.get(index);
  }
  private void ensureFormValueMatchIsMutable() {
    if (!formValueMatch_.isModifiable()) {
      formValueMatch_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(formValueMatch_);
     }
  }

  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  private void setFormValueMatch(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureFormValueMatchIsMutable();
    formValueMatch_.set(index, value);
  }
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  private void setFormValueMatch(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto.Builder builderForValue) {
    ensureFormValueMatchIsMutable();
    formValueMatch_.set(index, builderForValue.build());
  }
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  private void addFormValueMatch(org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureFormValueMatchIsMutable();
    formValueMatch_.add(value);
  }
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  private void addFormValueMatch(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureFormValueMatchIsMutable();
    formValueMatch_.add(index, value);
  }
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  private void addFormValueMatch(
      org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto.Builder builderForValue) {
    ensureFormValueMatchIsMutable();
    formValueMatch_.add(builderForValue.build());
  }
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  private void addFormValueMatch(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto.Builder builderForValue) {
    ensureFormValueMatchIsMutable();
    formValueMatch_.add(index, builderForValue.build());
  }
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  private void addAllFormValueMatch(
      java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto> values) {
    ensureFormValueMatchIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, formValueMatch_);
  }
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  private void clearFormValueMatch() {
    formValueMatch_ = emptyProtobufList();
  }
  /**
   * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
   */
  private void removeFormValueMatch(int index) {
    ensureFormValueMatchIsMutable();
    formValueMatch_.remove(index);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < elementsExist_.size(); i++) {
      output.writeMessage(3, elementsExist_.get(i));
    }
    for (int i = 0; i < pathPattern_.size(); i++) {
      output.writeString(5, pathPattern_.get(i));
    }
    for (int i = 0; i < domain_.size(); i++) {
      output.writeString(6, domain_.get(i));
    }
    for (int i = 0; i < scriptParameterMatch_.size(); i++) {
      output.writeMessage(7, scriptParameterMatch_.get(i));
    }
    for (int i = 0; i < scriptStatusMatch_.size(); i++) {
      output.writeMessage(8, scriptStatusMatch_.get(i));
    }
    for (int i = 0; i < formValueMatch_.size(); i++) {
      output.writeMessage(9, formValueMatch_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < elementsExist_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, elementsExist_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < pathPattern_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeStringSizeNoTag(pathPattern_.get(i));
      }
      size += dataSize;
      size += 1 * getPathPatternList().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < domain_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeStringSizeNoTag(domain_.get(i));
      }
      size += dataSize;
      size += 1 * getDomainList().size();
    }
    for (int i = 0; i < scriptParameterMatch_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, scriptParameterMatch_.get(i));
    }
    for (int i = 0; i < scriptStatusMatch_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, scriptStatusMatch_.get(i));
    }
    for (int i = 0; i < formValueMatch_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, formValueMatch_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code autofill_assistant.ScriptPreconditionProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ScriptPreconditionProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Combined with AND: the elements referenced here must be present.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
     */
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto> getElementsExistList() {
      return java.util.Collections.unmodifiableList(
          instance.getElementsExistList());
    }
    /**
     * <pre>
     * Combined with AND: the elements referenced here must be present.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
     */
    public int getElementsExistCount() {
      return instance.getElementsExistCount();
    }/**
     * <pre>
     * Combined with AND: the elements referenced here must be present.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto getElementsExist(int index) {
      return instance.getElementsExist(index);
    }
    /**
     * <pre>
     * Combined with AND: the elements referenced here must be present.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
     */
    public Builder setElementsExist(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
      copyOnWrite();
      instance.setElementsExist(index, value);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: the elements referenced here must be present.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
     */
    public Builder setElementsExist(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
      copyOnWrite();
      instance.setElementsExist(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: the elements referenced here must be present.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
     */
    public Builder addElementsExist(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
      copyOnWrite();
      instance.addElementsExist(value);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: the elements referenced here must be present.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
     */
    public Builder addElementsExist(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
      copyOnWrite();
      instance.addElementsExist(index, value);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: the elements referenced here must be present.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
     */
    public Builder addElementsExist(
        org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
      copyOnWrite();
      instance.addElementsExist(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: the elements referenced here must be present.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
     */
    public Builder addElementsExist(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
      copyOnWrite();
      instance.addElementsExist(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: the elements referenced here must be present.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
     */
    public Builder addAllElementsExist(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto> values) {
      copyOnWrite();
      instance.addAllElementsExist(values);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: the elements referenced here must be present.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
     */
    public Builder clearElementsExist() {
      copyOnWrite();
      instance.clearElementsExist();
      return this;
    }
    /**
     * <pre>
     * Combined with AND: the elements referenced here must be present.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ElementReferenceProto elements_exist = 3;</code>
     */
    public Builder removeElementsExist(int index) {
      copyOnWrite();
      instance.removeElementsExist(index);
      return this;
    }

    /**
     * <pre>
     * Pattern of the path parts of the URL, including query and '#''.
     * </pre>
     *
     * <code>repeated string path_pattern = 5;</code>
     */
    public java.util.List<String>
        getPathPatternList() {
      return java.util.Collections.unmodifiableList(
          instance.getPathPatternList());
    }
    /**
     * <pre>
     * Pattern of the path parts of the URL, including query and '#''.
     * </pre>
     *
     * <code>repeated string path_pattern = 5;</code>
     */
    public int getPathPatternCount() {
      return instance.getPathPatternCount();
    }
    /**
     * <pre>
     * Pattern of the path parts of the URL, including query and '#''.
     * </pre>
     *
     * <code>repeated string path_pattern = 5;</code>
     */
    public java.lang.String getPathPattern(int index) {
      return instance.getPathPattern(index);
    }
    /**
     * <pre>
     * Pattern of the path parts of the URL, including query and '#''.
     * </pre>
     *
     * <code>repeated string path_pattern = 5;</code>
     */
    public com.google.protobuf.ByteString
        getPathPatternBytes(int index) {
      return instance.getPathPatternBytes(index);
    }
    /**
     * <pre>
     * Pattern of the path parts of the URL, including query and '#''.
     * </pre>
     *
     * <code>repeated string path_pattern = 5;</code>
     */
    public Builder setPathPattern(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setPathPattern(index, value);
      return this;
    }
    /**
     * <pre>
     * Pattern of the path parts of the URL, including query and '#''.
     * </pre>
     *
     * <code>repeated string path_pattern = 5;</code>
     */
    public Builder addPathPattern(
        java.lang.String value) {
      copyOnWrite();
      instance.addPathPattern(value);
      return this;
    }
    /**
     * <pre>
     * Pattern of the path parts of the URL, including query and '#''.
     * </pre>
     *
     * <code>repeated string path_pattern = 5;</code>
     */
    public Builder addAllPathPattern(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllPathPattern(values);
      return this;
    }
    /**
     * <pre>
     * Pattern of the path parts of the URL, including query and '#''.
     * </pre>
     *
     * <code>repeated string path_pattern = 5;</code>
     */
    public Builder clearPathPattern() {
      copyOnWrite();
      instance.clearPathPattern();
      return this;
    }
    /**
     * <pre>
     * Pattern of the path parts of the URL, including query and '#''.
     * </pre>
     *
     * <code>repeated string path_pattern = 5;</code>
     */
    public Builder addPathPatternBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addPathPatternBytes(value);
      return this;
    }

    /**
     * <pre>
     * Domain (exact match) excluding the last '/' character.
     * </pre>
     *
     * <code>repeated string domain = 6;</code>
     */
    public java.util.List<String>
        getDomainList() {
      return java.util.Collections.unmodifiableList(
          instance.getDomainList());
    }
    /**
     * <pre>
     * Domain (exact match) excluding the last '/' character.
     * </pre>
     *
     * <code>repeated string domain = 6;</code>
     */
    public int getDomainCount() {
      return instance.getDomainCount();
    }
    /**
     * <pre>
     * Domain (exact match) excluding the last '/' character.
     * </pre>
     *
     * <code>repeated string domain = 6;</code>
     */
    public java.lang.String getDomain(int index) {
      return instance.getDomain(index);
    }
    /**
     * <pre>
     * Domain (exact match) excluding the last '/' character.
     * </pre>
     *
     * <code>repeated string domain = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDomainBytes(int index) {
      return instance.getDomainBytes(index);
    }
    /**
     * <pre>
     * Domain (exact match) excluding the last '/' character.
     * </pre>
     *
     * <code>repeated string domain = 6;</code>
     */
    public Builder setDomain(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setDomain(index, value);
      return this;
    }
    /**
     * <pre>
     * Domain (exact match) excluding the last '/' character.
     * </pre>
     *
     * <code>repeated string domain = 6;</code>
     */
    public Builder addDomain(
        java.lang.String value) {
      copyOnWrite();
      instance.addDomain(value);
      return this;
    }
    /**
     * <pre>
     * Domain (exact match) excluding the last '/' character.
     * </pre>
     *
     * <code>repeated string domain = 6;</code>
     */
    public Builder addAllDomain(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllDomain(values);
      return this;
    }
    /**
     * <pre>
     * Domain (exact match) excluding the last '/' character.
     * </pre>
     *
     * <code>repeated string domain = 6;</code>
     */
    public Builder clearDomain() {
      copyOnWrite();
      instance.clearDomain();
      return this;
    }
    /**
     * <pre>
     * Domain (exact match) excluding the last '/' character.
     * </pre>
     *
     * <code>repeated string domain = 6;</code>
     */
    public Builder addDomainBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addDomainBytes(value);
      return this;
    }

    /**
     * <pre>
     * Combined with AND: all matches must be true for precondition to hold.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
     */
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto> getScriptParameterMatchList() {
      return java.util.Collections.unmodifiableList(
          instance.getScriptParameterMatchList());
    }
    /**
     * <pre>
     * Combined with AND: all matches must be true for precondition to hold.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
     */
    public int getScriptParameterMatchCount() {
      return instance.getScriptParameterMatchCount();
    }/**
     * <pre>
     * Combined with AND: all matches must be true for precondition to hold.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto getScriptParameterMatch(int index) {
      return instance.getScriptParameterMatch(index);
    }
    /**
     * <pre>
     * Combined with AND: all matches must be true for precondition to hold.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
     */
    public Builder setScriptParameterMatch(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto value) {
      copyOnWrite();
      instance.setScriptParameterMatch(index, value);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: all matches must be true for precondition to hold.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
     */
    public Builder setScriptParameterMatch(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto.Builder builderForValue) {
      copyOnWrite();
      instance.setScriptParameterMatch(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: all matches must be true for precondition to hold.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
     */
    public Builder addScriptParameterMatch(org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto value) {
      copyOnWrite();
      instance.addScriptParameterMatch(value);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: all matches must be true for precondition to hold.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
     */
    public Builder addScriptParameterMatch(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto value) {
      copyOnWrite();
      instance.addScriptParameterMatch(index, value);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: all matches must be true for precondition to hold.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
     */
    public Builder addScriptParameterMatch(
        org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto.Builder builderForValue) {
      copyOnWrite();
      instance.addScriptParameterMatch(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: all matches must be true for precondition to hold.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
     */
    public Builder addScriptParameterMatch(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto.Builder builderForValue) {
      copyOnWrite();
      instance.addScriptParameterMatch(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: all matches must be true for precondition to hold.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
     */
    public Builder addAllScriptParameterMatch(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto> values) {
      copyOnWrite();
      instance.addAllScriptParameterMatch(values);
      return this;
    }
    /**
     * <pre>
     * Combined with AND: all matches must be true for precondition to hold.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
     */
    public Builder clearScriptParameterMatch() {
      copyOnWrite();
      instance.clearScriptParameterMatch();
      return this;
    }
    /**
     * <pre>
     * Combined with AND: all matches must be true for precondition to hold.
     * </pre>
     *
     * <code>repeated .autofill_assistant.ScriptParameterMatchProto script_parameter_match = 7;</code>
     */
    public Builder removeScriptParameterMatch(int index) {
      copyOnWrite();
      instance.removeScriptParameterMatch(index);
      return this;
    }

    /**
     * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
     */
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto> getScriptStatusMatchList() {
      return java.util.Collections.unmodifiableList(
          instance.getScriptStatusMatchList());
    }
    /**
     * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
     */
    public int getScriptStatusMatchCount() {
      return instance.getScriptStatusMatchCount();
    }/**
     * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto getScriptStatusMatch(int index) {
      return instance.getScriptStatusMatch(index);
    }
    /**
     * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
     */
    public Builder setScriptStatusMatch(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto value) {
      copyOnWrite();
      instance.setScriptStatusMatch(index, value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
     */
    public Builder setScriptStatusMatch(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Builder builderForValue) {
      copyOnWrite();
      instance.setScriptStatusMatch(index, builderForValue);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
     */
    public Builder addScriptStatusMatch(org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto value) {
      copyOnWrite();
      instance.addScriptStatusMatch(value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
     */
    public Builder addScriptStatusMatch(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto value) {
      copyOnWrite();
      instance.addScriptStatusMatch(index, value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
     */
    public Builder addScriptStatusMatch(
        org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Builder builderForValue) {
      copyOnWrite();
      instance.addScriptStatusMatch(builderForValue);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
     */
    public Builder addScriptStatusMatch(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.Builder builderForValue) {
      copyOnWrite();
      instance.addScriptStatusMatch(index, builderForValue);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
     */
    public Builder addAllScriptStatusMatch(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto> values) {
      copyOnWrite();
      instance.addAllScriptStatusMatch(values);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
     */
    public Builder clearScriptStatusMatch() {
      copyOnWrite();
      instance.clearScriptStatusMatch();
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ScriptStatusMatchProto script_status_match = 8;</code>
     */
    public Builder removeScriptStatusMatch(int index) {
      copyOnWrite();
      instance.removeScriptStatusMatch(index);
      return this;
    }

    /**
     * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
     */
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto> getFormValueMatchList() {
      return java.util.Collections.unmodifiableList(
          instance.getFormValueMatchList());
    }
    /**
     * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
     */
    public int getFormValueMatchCount() {
      return instance.getFormValueMatchCount();
    }/**
     * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto getFormValueMatch(int index) {
      return instance.getFormValueMatch(index);
    }
    /**
     * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
     */
    public Builder setFormValueMatch(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto value) {
      copyOnWrite();
      instance.setFormValueMatch(index, value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
     */
    public Builder setFormValueMatch(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto.Builder builderForValue) {
      copyOnWrite();
      instance.setFormValueMatch(index, builderForValue);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
     */
    public Builder addFormValueMatch(org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto value) {
      copyOnWrite();
      instance.addFormValueMatch(value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
     */
    public Builder addFormValueMatch(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto value) {
      copyOnWrite();
      instance.addFormValueMatch(index, value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
     */
    public Builder addFormValueMatch(
        org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto.Builder builderForValue) {
      copyOnWrite();
      instance.addFormValueMatch(builderForValue);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
     */
    public Builder addFormValueMatch(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto.Builder builderForValue) {
      copyOnWrite();
      instance.addFormValueMatch(index, builderForValue);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
     */
    public Builder addAllFormValueMatch(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto> values) {
      copyOnWrite();
      instance.addAllFormValueMatch(values);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
     */
    public Builder clearFormValueMatch() {
      copyOnWrite();
      instance.clearFormValueMatch();
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.FormValueMatchProto form_value_match = 9;</code>
     */
    public Builder removeFormValueMatch(int index) {
      copyOnWrite();
      instance.removeFormValueMatch(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ScriptPreconditionProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        elementsExist_.makeImmutable();
        pathPattern_.makeImmutable();
        domain_.makeImmutable();
        scriptParameterMatch_.makeImmutable();
        scriptStatusMatch_.makeImmutable();
        formValueMatch_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto other = (org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto) arg1;
        elementsExist_= visitor.visitList(elementsExist_, other.elementsExist_);
        pathPattern_= visitor.visitList(pathPattern_, other.pathPattern_);
        domain_= visitor.visitList(domain_, other.domain_);
        scriptParameterMatch_= visitor.visitList(scriptParameterMatch_, other.scriptParameterMatch_);
        scriptStatusMatch_= visitor.visitList(scriptStatusMatch_, other.scriptStatusMatch_);
        formValueMatch_= visitor.visitList(formValueMatch_, other.formValueMatch_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 26: {
                if (!elementsExist_.isModifiable()) {
                  elementsExist_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(elementsExist_);
                }
                elementsExist_.add(
                    input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.parser(), extensionRegistry));
                break;
              }
              case 42: {
                String s = input.readString();
                if (!pathPattern_.isModifiable()) {
                  pathPattern_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(pathPattern_);
                }
                pathPattern_.add(s);
                break;
              }
              case 50: {
                String s = input.readString();
                if (!domain_.isModifiable()) {
                  domain_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(domain_);
                }
                domain_.add(s);
                break;
              }
              case 58: {
                if (!scriptParameterMatch_.isModifiable()) {
                  scriptParameterMatch_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(scriptParameterMatch_);
                }
                scriptParameterMatch_.add(
                    input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.ScriptParameterMatchProto.parser(), extensionRegistry));
                break;
              }
              case 66: {
                if (!scriptStatusMatch_.isModifiable()) {
                  scriptStatusMatch_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(scriptStatusMatch_);
                }
                scriptStatusMatch_.add(
                    input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.ScriptStatusMatchProto.parser(), extensionRegistry));
                break;
              }
              case 74: {
                if (!formValueMatch_.isModifiable()) {
                  formValueMatch_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(formValueMatch_);
                }
                formValueMatch_.add(
                    input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.FormValueMatchProto.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ScriptPreconditionProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ScriptPreconditionProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ScriptPreconditionProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ScriptPreconditionProto> PARSER;

  public static com.google.protobuf.Parser<ScriptPreconditionProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

