// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Asks to provide the data used by UseAddressAction and
 * UseCreditCardAction.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.GetPaymentInformationProto}
 */
public  final class GetPaymentInformationProto extends
    com.google.protobuf.GeneratedMessageLite<
        GetPaymentInformationProto, GetPaymentInformationProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.GetPaymentInformationProto)
    GetPaymentInformationProtoOrBuilder {
  private GetPaymentInformationProto() {
    prompt_ = "";
    billingAddressName_ = "";
    shippingAddressName_ = "";
    supportedBasicCardNetworks_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  private int bitField0_;
  public static final int PROMPT_FIELD_NUMBER = 1;
  private java.lang.String prompt_;
  /**
   * <code>optional string prompt = 1;</code>
   */
  public boolean hasPrompt() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional string prompt = 1;</code>
   */
  public java.lang.String getPrompt() {
    return prompt_;
  }
  /**
   * <code>optional string prompt = 1;</code>
   */
  public com.google.protobuf.ByteString
      getPromptBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(prompt_);
  }
  /**
   * <code>optional string prompt = 1;</code>
   */
  private void setPrompt(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    prompt_ = value;
  }
  /**
   * <code>optional string prompt = 1;</code>
   */
  private void clearPrompt() {
    bitField0_ = (bitField0_ & ~0x00000001);
    prompt_ = getDefaultInstance().getPrompt();
  }
  /**
   * <code>optional string prompt = 1;</code>
   */
  private void setPromptBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    prompt_ = value.toStringUtf8();
  }

  public static final int BILLING_ADDRESS_NAME_FIELD_NUMBER = 2;
  private java.lang.String billingAddressName_;
  /**
   * <pre>
   * NOTE: Payment request does not ask separately for billing address.
   * The billing address is associated with the credit card that was picked.
   * </pre>
   *
   * <code>optional string billing_address_name = 2;</code>
   */
  public boolean hasBillingAddressName() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * NOTE: Payment request does not ask separately for billing address.
   * The billing address is associated with the credit card that was picked.
   * </pre>
   *
   * <code>optional string billing_address_name = 2;</code>
   */
  public java.lang.String getBillingAddressName() {
    return billingAddressName_;
  }
  /**
   * <pre>
   * NOTE: Payment request does not ask separately for billing address.
   * The billing address is associated with the credit card that was picked.
   * </pre>
   *
   * <code>optional string billing_address_name = 2;</code>
   */
  public com.google.protobuf.ByteString
      getBillingAddressNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(billingAddressName_);
  }
  /**
   * <pre>
   * NOTE: Payment request does not ask separately for billing address.
   * The billing address is associated with the credit card that was picked.
   * </pre>
   *
   * <code>optional string billing_address_name = 2;</code>
   */
  private void setBillingAddressName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    billingAddressName_ = value;
  }
  /**
   * <pre>
   * NOTE: Payment request does not ask separately for billing address.
   * The billing address is associated with the credit card that was picked.
   * </pre>
   *
   * <code>optional string billing_address_name = 2;</code>
   */
  private void clearBillingAddressName() {
    bitField0_ = (bitField0_ & ~0x00000002);
    billingAddressName_ = getDefaultInstance().getBillingAddressName();
  }
  /**
   * <pre>
   * NOTE: Payment request does not ask separately for billing address.
   * The billing address is associated with the credit card that was picked.
   * </pre>
   *
   * <code>optional string billing_address_name = 2;</code>
   */
  private void setBillingAddressNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    billingAddressName_ = value.toStringUtf8();
  }

  public static final int SHIPPING_ADDRESS_NAME_FIELD_NUMBER = 3;
  private java.lang.String shippingAddressName_;
  /**
   * <pre>
   * If present will save the shipping address inside the memory under the
   * specified name. If empty we won't ask for the shipping address. Data saved
   * under this name can be reused by UseAddressAction.
   * </pre>
   *
   * <code>optional string shipping_address_name = 3;</code>
   */
  public boolean hasShippingAddressName() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * If present will save the shipping address inside the memory under the
   * specified name. If empty we won't ask for the shipping address. Data saved
   * under this name can be reused by UseAddressAction.
   * </pre>
   *
   * <code>optional string shipping_address_name = 3;</code>
   */
  public java.lang.String getShippingAddressName() {
    return shippingAddressName_;
  }
  /**
   * <pre>
   * If present will save the shipping address inside the memory under the
   * specified name. If empty we won't ask for the shipping address. Data saved
   * under this name can be reused by UseAddressAction.
   * </pre>
   *
   * <code>optional string shipping_address_name = 3;</code>
   */
  public com.google.protobuf.ByteString
      getShippingAddressNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(shippingAddressName_);
  }
  /**
   * <pre>
   * If present will save the shipping address inside the memory under the
   * specified name. If empty we won't ask for the shipping address. Data saved
   * under this name can be reused by UseAddressAction.
   * </pre>
   *
   * <code>optional string shipping_address_name = 3;</code>
   */
  private void setShippingAddressName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
    shippingAddressName_ = value;
  }
  /**
   * <pre>
   * If present will save the shipping address inside the memory under the
   * specified name. If empty we won't ask for the shipping address. Data saved
   * under this name can be reused by UseAddressAction.
   * </pre>
   *
   * <code>optional string shipping_address_name = 3;</code>
   */
  private void clearShippingAddressName() {
    bitField0_ = (bitField0_ & ~0x00000004);
    shippingAddressName_ = getDefaultInstance().getShippingAddressName();
  }
  /**
   * <pre>
   * If present will save the shipping address inside the memory under the
   * specified name. If empty we won't ask for the shipping address. Data saved
   * under this name can be reused by UseAddressAction.
   * </pre>
   *
   * <code>optional string shipping_address_name = 3;</code>
   */
  private void setShippingAddressNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
    shippingAddressName_ = value.toStringUtf8();
  }

  public static final int ASK_FOR_PAYMENT_FIELD_NUMBER = 4;
  private boolean askForPayment_;
  /**
   * <pre>
   * When 'true' will ask for the credit card.
   * </pre>
   *
   * <code>optional bool ask_for_payment = 4;</code>
   */
  public boolean hasAskForPayment() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * When 'true' will ask for the credit card.
   * </pre>
   *
   * <code>optional bool ask_for_payment = 4;</code>
   */
  public boolean getAskForPayment() {
    return askForPayment_;
  }
  /**
   * <pre>
   * When 'true' will ask for the credit card.
   * </pre>
   *
   * <code>optional bool ask_for_payment = 4;</code>
   */
  private void setAskForPayment(boolean value) {
    bitField0_ |= 0x00000008;
    askForPayment_ = value;
  }
  /**
   * <pre>
   * When 'true' will ask for the credit card.
   * </pre>
   *
   * <code>optional bool ask_for_payment = 4;</code>
   */
  private void clearAskForPayment() {
    bitField0_ = (bitField0_ & ~0x00000008);
    askForPayment_ = false;
  }

  public static final int SUPPORTED_BASIC_CARD_NETWORKS_FIELD_NUMBER = 6;
  private com.google.protobuf.Internal.ProtobufList<String> supportedBasicCardNetworks_;
  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  public java.util.List<String> getSupportedBasicCardNetworksList() {
    return supportedBasicCardNetworks_;
  }
  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  public int getSupportedBasicCardNetworksCount() {
    return supportedBasicCardNetworks_.size();
  }
  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  public java.lang.String getSupportedBasicCardNetworks(int index) {
    return supportedBasicCardNetworks_.get(index);
  }
  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  public com.google.protobuf.ByteString
      getSupportedBasicCardNetworksBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        supportedBasicCardNetworks_.get(index));
  }
  private void ensureSupportedBasicCardNetworksIsMutable() {
    if (!supportedBasicCardNetworks_.isModifiable()) {
      supportedBasicCardNetworks_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(supportedBasicCardNetworks_);
     }
  }
  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  private void setSupportedBasicCardNetworks(
      int index, java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensureSupportedBasicCardNetworksIsMutable();
    supportedBasicCardNetworks_.set(index, value);
  }
  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  private void addSupportedBasicCardNetworks(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensureSupportedBasicCardNetworksIsMutable();
    supportedBasicCardNetworks_.add(value);
  }
  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  private void addAllSupportedBasicCardNetworks(
      java.lang.Iterable<java.lang.String> values) {
    ensureSupportedBasicCardNetworksIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, supportedBasicCardNetworks_);
  }
  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  private void clearSupportedBasicCardNetworks() {
    supportedBasicCardNetworks_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  private void addSupportedBasicCardNetworksBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensureSupportedBasicCardNetworksIsMutable();
    supportedBasicCardNetworks_.add(value.toStringUtf8());
  }

  public static final int CONTACT_DETAILS_FIELD_NUMBER = 5;
  private org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto contactDetails_;
  /**
   * <pre>
   * Contact details that should be gathered.
   * </pre>
   *
   * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
   */
  public boolean hasContactDetails() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * Contact details that should be gathered.
   * </pre>
   *
   * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto getContactDetails() {
    return contactDetails_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto.getDefaultInstance() : contactDetails_;
  }
  /**
   * <pre>
   * Contact details that should be gathered.
   * </pre>
   *
   * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
   */
  private void setContactDetails(org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    contactDetails_ = value;
    bitField0_ |= 0x00000010;
    }
  /**
   * <pre>
   * Contact details that should be gathered.
   * </pre>
   *
   * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
   */
  private void setContactDetails(
      org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto.Builder builderForValue) {
    contactDetails_ = builderForValue.build();
    bitField0_ |= 0x00000010;
  }
  /**
   * <pre>
   * Contact details that should be gathered.
   * </pre>
   *
   * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
   */
  private void mergeContactDetails(org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto value) {
    if (contactDetails_ != null &&
        contactDetails_ != org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto.getDefaultInstance()) {
      contactDetails_ =
        org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto.newBuilder(contactDetails_).mergeFrom(value).buildPartial();
    } else {
      contactDetails_ = value;
    }
    bitField0_ |= 0x00000010;
  }
  /**
   * <pre>
   * Contact details that should be gathered.
   * </pre>
   *
   * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
   */
  private void clearContactDetails() {  contactDetails_ = null;
    bitField0_ = (bitField0_ & ~0x00000010);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeString(1, getPrompt());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeString(2, getBillingAddressName());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeString(3, getShippingAddressName());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeBool(4, askForPayment_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeMessage(5, getContactDetails());
    }
    for (int i = 0; i < supportedBasicCardNetworks_.size(); i++) {
      output.writeString(6, supportedBasicCardNetworks_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getPrompt());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getBillingAddressName());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getShippingAddressName());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, askForPayment_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getContactDetails());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < supportedBasicCardNetworks_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeStringSizeNoTag(supportedBasicCardNetworks_.get(i));
      }
      size += dataSize;
      size += 1 * getSupportedBasicCardNetworksList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Asks to provide the data used by UseAddressAction and
   * UseCreditCardAction.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.GetPaymentInformationProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.GetPaymentInformationProto)
      org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional string prompt = 1;</code>
     */
    public boolean hasPrompt() {
      return instance.hasPrompt();
    }
    /**
     * <code>optional string prompt = 1;</code>
     */
    public java.lang.String getPrompt() {
      return instance.getPrompt();
    }
    /**
     * <code>optional string prompt = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPromptBytes() {
      return instance.getPromptBytes();
    }
    /**
     * <code>optional string prompt = 1;</code>
     */
    public Builder setPrompt(
        java.lang.String value) {
      copyOnWrite();
      instance.setPrompt(value);
      return this;
    }
    /**
     * <code>optional string prompt = 1;</code>
     */
    public Builder clearPrompt() {
      copyOnWrite();
      instance.clearPrompt();
      return this;
    }
    /**
     * <code>optional string prompt = 1;</code>
     */
    public Builder setPromptBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPromptBytes(value);
      return this;
    }

    /**
     * <pre>
     * NOTE: Payment request does not ask separately for billing address.
     * The billing address is associated with the credit card that was picked.
     * </pre>
     *
     * <code>optional string billing_address_name = 2;</code>
     */
    public boolean hasBillingAddressName() {
      return instance.hasBillingAddressName();
    }
    /**
     * <pre>
     * NOTE: Payment request does not ask separately for billing address.
     * The billing address is associated with the credit card that was picked.
     * </pre>
     *
     * <code>optional string billing_address_name = 2;</code>
     */
    public java.lang.String getBillingAddressName() {
      return instance.getBillingAddressName();
    }
    /**
     * <pre>
     * NOTE: Payment request does not ask separately for billing address.
     * The billing address is associated with the credit card that was picked.
     * </pre>
     *
     * <code>optional string billing_address_name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBillingAddressNameBytes() {
      return instance.getBillingAddressNameBytes();
    }
    /**
     * <pre>
     * NOTE: Payment request does not ask separately for billing address.
     * The billing address is associated with the credit card that was picked.
     * </pre>
     *
     * <code>optional string billing_address_name = 2;</code>
     */
    public Builder setBillingAddressName(
        java.lang.String value) {
      copyOnWrite();
      instance.setBillingAddressName(value);
      return this;
    }
    /**
     * <pre>
     * NOTE: Payment request does not ask separately for billing address.
     * The billing address is associated with the credit card that was picked.
     * </pre>
     *
     * <code>optional string billing_address_name = 2;</code>
     */
    public Builder clearBillingAddressName() {
      copyOnWrite();
      instance.clearBillingAddressName();
      return this;
    }
    /**
     * <pre>
     * NOTE: Payment request does not ask separately for billing address.
     * The billing address is associated with the credit card that was picked.
     * </pre>
     *
     * <code>optional string billing_address_name = 2;</code>
     */
    public Builder setBillingAddressNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBillingAddressNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * If present will save the shipping address inside the memory under the
     * specified name. If empty we won't ask for the shipping address. Data saved
     * under this name can be reused by UseAddressAction.
     * </pre>
     *
     * <code>optional string shipping_address_name = 3;</code>
     */
    public boolean hasShippingAddressName() {
      return instance.hasShippingAddressName();
    }
    /**
     * <pre>
     * If present will save the shipping address inside the memory under the
     * specified name. If empty we won't ask for the shipping address. Data saved
     * under this name can be reused by UseAddressAction.
     * </pre>
     *
     * <code>optional string shipping_address_name = 3;</code>
     */
    public java.lang.String getShippingAddressName() {
      return instance.getShippingAddressName();
    }
    /**
     * <pre>
     * If present will save the shipping address inside the memory under the
     * specified name. If empty we won't ask for the shipping address. Data saved
     * under this name can be reused by UseAddressAction.
     * </pre>
     *
     * <code>optional string shipping_address_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getShippingAddressNameBytes() {
      return instance.getShippingAddressNameBytes();
    }
    /**
     * <pre>
     * If present will save the shipping address inside the memory under the
     * specified name. If empty we won't ask for the shipping address. Data saved
     * under this name can be reused by UseAddressAction.
     * </pre>
     *
     * <code>optional string shipping_address_name = 3;</code>
     */
    public Builder setShippingAddressName(
        java.lang.String value) {
      copyOnWrite();
      instance.setShippingAddressName(value);
      return this;
    }
    /**
     * <pre>
     * If present will save the shipping address inside the memory under the
     * specified name. If empty we won't ask for the shipping address. Data saved
     * under this name can be reused by UseAddressAction.
     * </pre>
     *
     * <code>optional string shipping_address_name = 3;</code>
     */
    public Builder clearShippingAddressName() {
      copyOnWrite();
      instance.clearShippingAddressName();
      return this;
    }
    /**
     * <pre>
     * If present will save the shipping address inside the memory under the
     * specified name. If empty we won't ask for the shipping address. Data saved
     * under this name can be reused by UseAddressAction.
     * </pre>
     *
     * <code>optional string shipping_address_name = 3;</code>
     */
    public Builder setShippingAddressNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setShippingAddressNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * When 'true' will ask for the credit card.
     * </pre>
     *
     * <code>optional bool ask_for_payment = 4;</code>
     */
    public boolean hasAskForPayment() {
      return instance.hasAskForPayment();
    }
    /**
     * <pre>
     * When 'true' will ask for the credit card.
     * </pre>
     *
     * <code>optional bool ask_for_payment = 4;</code>
     */
    public boolean getAskForPayment() {
      return instance.getAskForPayment();
    }
    /**
     * <pre>
     * When 'true' will ask for the credit card.
     * </pre>
     *
     * <code>optional bool ask_for_payment = 4;</code>
     */
    public Builder setAskForPayment(boolean value) {
      copyOnWrite();
      instance.setAskForPayment(value);
      return this;
    }
    /**
     * <pre>
     * When 'true' will ask for the credit card.
     * </pre>
     *
     * <code>optional bool ask_for_payment = 4;</code>
     */
    public Builder clearAskForPayment() {
      copyOnWrite();
      instance.clearAskForPayment();
      return this;
    }

    /**
     * <pre>
     * If non-empty, the UI will filter the available basic-card networks
     * accordingly (e.g., only `visa' and `mastercard').
     * </pre>
     *
     * <code>repeated string supported_basic_card_networks = 6;</code>
     */
    public java.util.List<String>
        getSupportedBasicCardNetworksList() {
      return java.util.Collections.unmodifiableList(
          instance.getSupportedBasicCardNetworksList());
    }
    /**
     * <pre>
     * If non-empty, the UI will filter the available basic-card networks
     * accordingly (e.g., only `visa' and `mastercard').
     * </pre>
     *
     * <code>repeated string supported_basic_card_networks = 6;</code>
     */
    public int getSupportedBasicCardNetworksCount() {
      return instance.getSupportedBasicCardNetworksCount();
    }
    /**
     * <pre>
     * If non-empty, the UI will filter the available basic-card networks
     * accordingly (e.g., only `visa' and `mastercard').
     * </pre>
     *
     * <code>repeated string supported_basic_card_networks = 6;</code>
     */
    public java.lang.String getSupportedBasicCardNetworks(int index) {
      return instance.getSupportedBasicCardNetworks(index);
    }
    /**
     * <pre>
     * If non-empty, the UI will filter the available basic-card networks
     * accordingly (e.g., only `visa' and `mastercard').
     * </pre>
     *
     * <code>repeated string supported_basic_card_networks = 6;</code>
     */
    public com.google.protobuf.ByteString
        getSupportedBasicCardNetworksBytes(int index) {
      return instance.getSupportedBasicCardNetworksBytes(index);
    }
    /**
     * <pre>
     * If non-empty, the UI will filter the available basic-card networks
     * accordingly (e.g., only `visa' and `mastercard').
     * </pre>
     *
     * <code>repeated string supported_basic_card_networks = 6;</code>
     */
    public Builder setSupportedBasicCardNetworks(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setSupportedBasicCardNetworks(index, value);
      return this;
    }
    /**
     * <pre>
     * If non-empty, the UI will filter the available basic-card networks
     * accordingly (e.g., only `visa' and `mastercard').
     * </pre>
     *
     * <code>repeated string supported_basic_card_networks = 6;</code>
     */
    public Builder addSupportedBasicCardNetworks(
        java.lang.String value) {
      copyOnWrite();
      instance.addSupportedBasicCardNetworks(value);
      return this;
    }
    /**
     * <pre>
     * If non-empty, the UI will filter the available basic-card networks
     * accordingly (e.g., only `visa' and `mastercard').
     * </pre>
     *
     * <code>repeated string supported_basic_card_networks = 6;</code>
     */
    public Builder addAllSupportedBasicCardNetworks(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllSupportedBasicCardNetworks(values);
      return this;
    }
    /**
     * <pre>
     * If non-empty, the UI will filter the available basic-card networks
     * accordingly (e.g., only `visa' and `mastercard').
     * </pre>
     *
     * <code>repeated string supported_basic_card_networks = 6;</code>
     */
    public Builder clearSupportedBasicCardNetworks() {
      copyOnWrite();
      instance.clearSupportedBasicCardNetworks();
      return this;
    }
    /**
     * <pre>
     * If non-empty, the UI will filter the available basic-card networks
     * accordingly (e.g., only `visa' and `mastercard').
     * </pre>
     *
     * <code>repeated string supported_basic_card_networks = 6;</code>
     */
    public Builder addSupportedBasicCardNetworksBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addSupportedBasicCardNetworksBytes(value);
      return this;
    }

    /**
     * <pre>
     * Contact details that should be gathered.
     * </pre>
     *
     * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
     */
    public boolean hasContactDetails() {
      return instance.hasContactDetails();
    }
    /**
     * <pre>
     * Contact details that should be gathered.
     * </pre>
     *
     * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto getContactDetails() {
      return instance.getContactDetails();
    }
    /**
     * <pre>
     * Contact details that should be gathered.
     * </pre>
     *
     * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
     */
    public Builder setContactDetails(org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto value) {
      copyOnWrite();
      instance.setContactDetails(value);
      return this;
      }
    /**
     * <pre>
     * Contact details that should be gathered.
     * </pre>
     *
     * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
     */
    public Builder setContactDetails(
        org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto.Builder builderForValue) {
      copyOnWrite();
      instance.setContactDetails(builderForValue);
      return this;
    }
    /**
     * <pre>
     * Contact details that should be gathered.
     * </pre>
     *
     * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
     */
    public Builder mergeContactDetails(org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto value) {
      copyOnWrite();
      instance.mergeContactDetails(value);
      return this;
    }
    /**
     * <pre>
     * Contact details that should be gathered.
     * </pre>
     *
     * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
     */
    public Builder clearContactDetails() {  copyOnWrite();
      instance.clearContactDetails();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.GetPaymentInformationProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        supportedBasicCardNetworks_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto other = (org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto) arg1;
        prompt_ = visitor.visitString(
            hasPrompt(), prompt_,
            other.hasPrompt(), other.prompt_);
        billingAddressName_ = visitor.visitString(
            hasBillingAddressName(), billingAddressName_,
            other.hasBillingAddressName(), other.billingAddressName_);
        shippingAddressName_ = visitor.visitString(
            hasShippingAddressName(), shippingAddressName_,
            other.hasShippingAddressName(), other.shippingAddressName_);
        askForPayment_ = visitor.visitBoolean(
            hasAskForPayment(), askForPayment_,
            other.hasAskForPayment(), other.askForPayment_);
        supportedBasicCardNetworks_= visitor.visitList(supportedBasicCardNetworks_, other.supportedBasicCardNetworks_);
        contactDetails_ = visitor.visitMessage(contactDetails_, other.contactDetails_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readString();
                bitField0_ |= 0x00000001;
                prompt_ = s;
                break;
              }
              case 18: {
                String s = input.readString();
                bitField0_ |= 0x00000002;
                billingAddressName_ = s;
                break;
              }
              case 26: {
                String s = input.readString();
                bitField0_ |= 0x00000004;
                shippingAddressName_ = s;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                askForPayment_ = input.readBool();
                break;
              }
              case 42: {
                org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                  subBuilder = contactDetails_.toBuilder();
                }
                contactDetails_ = input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(contactDetails_);
                  contactDetails_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
              case 50: {
                String s = input.readString();
                if (!supportedBasicCardNetworks_.isModifiable()) {
                  supportedBasicCardNetworks_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(supportedBasicCardNetworks_);
                }
                supportedBasicCardNetworks_.add(s);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.GetPaymentInformationProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new GetPaymentInformationProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.GetPaymentInformationProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<GetPaymentInformationProto> PARSER;

  public static com.google.protobuf.Parser<GetPaymentInformationProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

