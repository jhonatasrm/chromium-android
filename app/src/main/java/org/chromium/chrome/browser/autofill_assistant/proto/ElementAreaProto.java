// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * An area made up of rectangles whole border are made defined by the position
 * of a given set of elements.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.ElementAreaProto}
 */
public  final class ElementAreaProto extends
    com.google.protobuf.GeneratedMessageLite<
        ElementAreaProto, ElementAreaProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ElementAreaProto)
    ElementAreaProtoOrBuilder {
  private ElementAreaProto() {
    rectangles_ = emptyProtobufList();
  }
  public interface RectangleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.ElementAreaProto.Rectangle)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto> 
        getElementsList();
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto getElements(int index);
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    int getElementsCount();

    /**
     * <pre>
     * If true, the width of the rectangle always corresponds to the width of
     * the screen.
     * </pre>
     *
     * <code>optional bool full_width = 2;</code>
     */
    boolean hasFullWidth();
    /**
     * <pre>
     * If true, the width of the rectangle always corresponds to the width of
     * the screen.
     * </pre>
     *
     * <code>optional bool full_width = 2;</code>
     */
    boolean getFullWidth();
  }
  /**
   * <pre>
   * A rectangle, drawn by one or more elements.
   * The rectangle is the smallest rectangle that includes all listed elements.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.ElementAreaProto.Rectangle}
   */
  public  static final class Rectangle extends
      com.google.protobuf.GeneratedMessageLite<
          Rectangle, Rectangle.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.ElementAreaProto.Rectangle)
      RectangleOrBuilder {
    private Rectangle() {
      elements_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int ELEMENTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto> elements_;
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto> getElementsList() {
      return elements_;
    }
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProtoOrBuilder> 
        getElementsOrBuilderList() {
      return elements_;
    }
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    public int getElementsCount() {
      return elements_.size();
    }
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto getElements(int index) {
      return elements_.get(index);
    }
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProtoOrBuilder getElementsOrBuilder(
        int index) {
      return elements_.get(index);
    }
    private void ensureElementsIsMutable() {
      if (!elements_.isModifiable()) {
        elements_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(elements_);
       }
    }

    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    private void setElements(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureElementsIsMutable();
      elements_.set(index, value);
    }
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    private void setElements(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
      ensureElementsIsMutable();
      elements_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    private void addElements(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureElementsIsMutable();
      elements_.add(value);
    }
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    private void addElements(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureElementsIsMutable();
      elements_.add(index, value);
    }
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    private void addElements(
        org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
      ensureElementsIsMutable();
      elements_.add(builderForValue.build());
    }
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    private void addElements(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
      ensureElementsIsMutable();
      elements_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    private void addAllElements(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto> values) {
      ensureElementsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, elements_);
    }
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    private void clearElements() {
      elements_ = emptyProtobufList();
    }
    /**
     * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
     */
    private void removeElements(int index) {
      ensureElementsIsMutable();
      elements_.remove(index);
    }

    public static final int FULL_WIDTH_FIELD_NUMBER = 2;
    private boolean fullWidth_;
    /**
     * <pre>
     * If true, the width of the rectangle always corresponds to the width of
     * the screen.
     * </pre>
     *
     * <code>optional bool full_width = 2;</code>
     */
    public boolean hasFullWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * If true, the width of the rectangle always corresponds to the width of
     * the screen.
     * </pre>
     *
     * <code>optional bool full_width = 2;</code>
     */
    public boolean getFullWidth() {
      return fullWidth_;
    }
    /**
     * <pre>
     * If true, the width of the rectangle always corresponds to the width of
     * the screen.
     * </pre>
     *
     * <code>optional bool full_width = 2;</code>
     */
    private void setFullWidth(boolean value) {
      bitField0_ |= 0x00000001;
      fullWidth_ = value;
    }
    /**
     * <pre>
     * If true, the width of the rectangle always corresponds to the width of
     * the screen.
     * </pre>
     *
     * <code>optional bool full_width = 2;</code>
     */
    private void clearFullWidth() {
      bitField0_ = (bitField0_ & ~0x00000001);
      fullWidth_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < elements_.size(); i++) {
        output.writeMessage(1, elements_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(2, fullWidth_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < elements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, elements_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, fullWidth_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A rectangle, drawn by one or more elements.
     * The rectangle is the smallest rectangle that includes all listed elements.
     * </pre>
     *
     * Protobuf type {@code autofill_assistant.ElementAreaProto.Rectangle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.ElementAreaProto.Rectangle)
        org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.RectangleOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
       */
      public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto> getElementsList() {
        return java.util.Collections.unmodifiableList(
            instance.getElementsList());
      }
      /**
       * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
       */
      public int getElementsCount() {
        return instance.getElementsCount();
      }/**
       * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
       */
      public org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto getElements(int index) {
        return instance.getElements(index);
      }
      /**
       * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
       */
      public Builder setElements(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
        copyOnWrite();
        instance.setElements(index, value);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
       */
      public Builder setElements(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
        copyOnWrite();
        instance.setElements(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
       */
      public Builder addElements(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
        copyOnWrite();
        instance.addElements(value);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
       */
      public Builder addElements(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
        copyOnWrite();
        instance.addElements(index, value);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
       */
      public Builder addElements(
          org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
        copyOnWrite();
        instance.addElements(builderForValue);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
       */
      public Builder addElements(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
        copyOnWrite();
        instance.addElements(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
       */
      public Builder addAllElements(
          java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto> values) {
        copyOnWrite();
        instance.addAllElements(values);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
       */
      public Builder clearElements() {
        copyOnWrite();
        instance.clearElements();
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.ElementReferenceProto elements = 1;</code>
       */
      public Builder removeElements(int index) {
        copyOnWrite();
        instance.removeElements(index);
        return this;
      }

      /**
       * <pre>
       * If true, the width of the rectangle always corresponds to the width of
       * the screen.
       * </pre>
       *
       * <code>optional bool full_width = 2;</code>
       */
      public boolean hasFullWidth() {
        return instance.hasFullWidth();
      }
      /**
       * <pre>
       * If true, the width of the rectangle always corresponds to the width of
       * the screen.
       * </pre>
       *
       * <code>optional bool full_width = 2;</code>
       */
      public boolean getFullWidth() {
        return instance.getFullWidth();
      }
      /**
       * <pre>
       * If true, the width of the rectangle always corresponds to the width of
       * the screen.
       * </pre>
       *
       * <code>optional bool full_width = 2;</code>
       */
      public Builder setFullWidth(boolean value) {
        copyOnWrite();
        instance.setFullWidth(value);
        return this;
      }
      /**
       * <pre>
       * If true, the width of the rectangle always corresponds to the width of
       * the screen.
       * </pre>
       *
       * <code>optional bool full_width = 2;</code>
       */
      public Builder clearFullWidth() {
        copyOnWrite();
        instance.clearFullWidth();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:autofill_assistant.ElementAreaProto.Rectangle)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          elements_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle other = (org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle) arg1;
          elements_= visitor.visitList(elements_, other.elements_);
          fullWidth_ = visitor.visitBoolean(
              hasFullWidth(), fullWidth_,
              other.hasFullWidth(), other.fullWidth_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!elements_.isModifiable()) {
                    elements_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(elements_);
                  }
                  elements_.add(
                      input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.parser(), extensionRegistry));
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000001;
                  fullWidth_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.ElementAreaProto.Rectangle)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Rectangle();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Rectangle> PARSER;

    public static com.google.protobuf.Parser<Rectangle> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public static final int RECTANGLES_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle> rectangles_;
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle> getRectanglesList() {
    return rectangles_;
  }
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.RectangleOrBuilder> 
      getRectanglesOrBuilderList() {
    return rectangles_;
  }
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  public int getRectanglesCount() {
    return rectangles_.size();
  }
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle getRectangles(int index) {
    return rectangles_.get(index);
  }
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.RectangleOrBuilder getRectanglesOrBuilder(
      int index) {
    return rectangles_.get(index);
  }
  private void ensureRectanglesIsMutable() {
    if (!rectangles_.isModifiable()) {
      rectangles_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(rectangles_);
     }
  }

  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  private void setRectangles(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureRectanglesIsMutable();
    rectangles_.set(index, value);
  }
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  private void setRectangles(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle.Builder builderForValue) {
    ensureRectanglesIsMutable();
    rectangles_.set(index, builderForValue.build());
  }
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  private void addRectangles(org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureRectanglesIsMutable();
    rectangles_.add(value);
  }
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  private void addRectangles(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureRectanglesIsMutable();
    rectangles_.add(index, value);
  }
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  private void addRectangles(
      org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle.Builder builderForValue) {
    ensureRectanglesIsMutable();
    rectangles_.add(builderForValue.build());
  }
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  private void addRectangles(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle.Builder builderForValue) {
    ensureRectanglesIsMutable();
    rectangles_.add(index, builderForValue.build());
  }
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  private void addAllRectangles(
      java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle> values) {
    ensureRectanglesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, rectangles_);
  }
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  private void clearRectangles() {
    rectangles_ = emptyProtobufList();
  }
  /**
   * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
   */
  private void removeRectangles(int index) {
    ensureRectanglesIsMutable();
    rectangles_.remove(index);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < rectangles_.size(); i++) {
      output.writeMessage(1, rectangles_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < rectangles_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, rectangles_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * An area made up of rectangles whole border are made defined by the position
   * of a given set of elements.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.ElementAreaProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ElementAreaProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
     */
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle> getRectanglesList() {
      return java.util.Collections.unmodifiableList(
          instance.getRectanglesList());
    }
    /**
     * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
     */
    public int getRectanglesCount() {
      return instance.getRectanglesCount();
    }/**
     * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle getRectangles(int index) {
      return instance.getRectangles(index);
    }
    /**
     * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
     */
    public Builder setRectangles(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle value) {
      copyOnWrite();
      instance.setRectangles(index, value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
     */
    public Builder setRectangles(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle.Builder builderForValue) {
      copyOnWrite();
      instance.setRectangles(index, builderForValue);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
     */
    public Builder addRectangles(org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle value) {
      copyOnWrite();
      instance.addRectangles(value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
     */
    public Builder addRectangles(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle value) {
      copyOnWrite();
      instance.addRectangles(index, value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
     */
    public Builder addRectangles(
        org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle.Builder builderForValue) {
      copyOnWrite();
      instance.addRectangles(builderForValue);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
     */
    public Builder addRectangles(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle.Builder builderForValue) {
      copyOnWrite();
      instance.addRectangles(index, builderForValue);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
     */
    public Builder addAllRectangles(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle> values) {
      copyOnWrite();
      instance.addAllRectangles(values);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
     */
    public Builder clearRectangles() {
      copyOnWrite();
      instance.clearRectangles();
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.ElementAreaProto.Rectangle rectangles = 1;</code>
     */
    public Builder removeRectangles(int index) {
      copyOnWrite();
      instance.removeRectangles(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ElementAreaProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        rectangles_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto other = (org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto) arg1;
        rectangles_= visitor.visitList(rectangles_, other.rectangles_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!rectangles_.isModifiable()) {
                  rectangles_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(rectangles_);
                }
                rectangles_.add(
                    input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.Rectangle.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ElementAreaProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ElementAreaProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ElementAreaProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ElementAreaProto> PARSER;

  public static com.google.protobuf.Parser<ElementAreaProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

