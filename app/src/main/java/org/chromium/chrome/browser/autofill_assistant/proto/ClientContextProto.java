// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Context contains client environment details.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.ClientContextProto}
 */
public  final class ClientContextProto extends
    com.google.protobuf.GeneratedMessageLite<
        ClientContextProto, ClientContextProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ClientContextProto)
    ClientContextProtoOrBuilder {
  private ClientContextProto() {
    locale_ = "";
    country_ = "";
  }
  public interface ChromeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.ClientContextProto.Chrome)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string chrome_version = 1;</code>
     */
    boolean hasChromeVersion();
    /**
     * <code>optional string chrome_version = 1;</code>
     */
    java.lang.String getChromeVersion();
    /**
     * <code>optional string chrome_version = 1;</code>
     */
    com.google.protobuf.ByteString
        getChromeVersionBytes();

    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto> 
        getActiveFieldTrialsList();
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto getActiveFieldTrials(int index);
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    int getActiveFieldTrialsCount();
  }
  /**
   * Protobuf type {@code autofill_assistant.ClientContextProto.Chrome}
   */
  public  static final class Chrome extends
      com.google.protobuf.GeneratedMessageLite<
          Chrome, Chrome.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.ClientContextProto.Chrome)
      ChromeOrBuilder {
    private Chrome() {
      chromeVersion_ = "";
      activeFieldTrials_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int CHROME_VERSION_FIELD_NUMBER = 1;
    private java.lang.String chromeVersion_;
    /**
     * <code>optional string chrome_version = 1;</code>
     */
    public boolean hasChromeVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string chrome_version = 1;</code>
     */
    public java.lang.String getChromeVersion() {
      return chromeVersion_;
    }
    /**
     * <code>optional string chrome_version = 1;</code>
     */
    public com.google.protobuf.ByteString
        getChromeVersionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(chromeVersion_);
    }
    /**
     * <code>optional string chrome_version = 1;</code>
     */
    private void setChromeVersion(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      chromeVersion_ = value;
    }
    /**
     * <code>optional string chrome_version = 1;</code>
     */
    private void clearChromeVersion() {
      bitField0_ = (bitField0_ & ~0x00000001);
      chromeVersion_ = getDefaultInstance().getChromeVersion();
    }
    /**
     * <code>optional string chrome_version = 1;</code>
     */
    private void setChromeVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      chromeVersion_ = value.toStringUtf8();
    }

    public static final int ACTIVE_FIELD_TRIALS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto> activeFieldTrials_;
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto> getActiveFieldTrialsList() {
      return activeFieldTrials_;
    }
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProtoOrBuilder> 
        getActiveFieldTrialsOrBuilderList() {
      return activeFieldTrials_;
    }
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    public int getActiveFieldTrialsCount() {
      return activeFieldTrials_.size();
    }
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto getActiveFieldTrials(int index) {
      return activeFieldTrials_.get(index);
    }
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProtoOrBuilder getActiveFieldTrialsOrBuilder(
        int index) {
      return activeFieldTrials_.get(index);
    }
    private void ensureActiveFieldTrialsIsMutable() {
      if (!activeFieldTrials_.isModifiable()) {
        activeFieldTrials_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(activeFieldTrials_);
       }
    }

    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    private void setActiveFieldTrials(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureActiveFieldTrialsIsMutable();
      activeFieldTrials_.set(index, value);
    }
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    private void setActiveFieldTrials(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto.Builder builderForValue) {
      ensureActiveFieldTrialsIsMutable();
      activeFieldTrials_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    private void addActiveFieldTrials(org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureActiveFieldTrialsIsMutable();
      activeFieldTrials_.add(value);
    }
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    private void addActiveFieldTrials(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureActiveFieldTrialsIsMutable();
      activeFieldTrials_.add(index, value);
    }
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    private void addActiveFieldTrials(
        org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto.Builder builderForValue) {
      ensureActiveFieldTrialsIsMutable();
      activeFieldTrials_.add(builderForValue.build());
    }
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    private void addActiveFieldTrials(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto.Builder builderForValue) {
      ensureActiveFieldTrialsIsMutable();
      activeFieldTrials_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    private void addAllActiveFieldTrials(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto> values) {
      ensureActiveFieldTrialsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, activeFieldTrials_);
    }
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    private void clearActiveFieldTrials() {
      activeFieldTrials_ = emptyProtobufList();
    }
    /**
     * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
     */
    private void removeActiveFieldTrials(int index) {
      ensureActiveFieldTrialsIsMutable();
      activeFieldTrials_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getChromeVersion());
      }
      for (int i = 0; i < activeFieldTrials_.size(); i++) {
        output.writeMessage(2, activeFieldTrials_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getChromeVersion());
      }
      for (int i = 0; i < activeFieldTrials_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, activeFieldTrials_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code autofill_assistant.ClientContextProto.Chrome}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.ClientContextProto.Chrome)
        org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.ChromeOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string chrome_version = 1;</code>
       */
      public boolean hasChromeVersion() {
        return instance.hasChromeVersion();
      }
      /**
       * <code>optional string chrome_version = 1;</code>
       */
      public java.lang.String getChromeVersion() {
        return instance.getChromeVersion();
      }
      /**
       * <code>optional string chrome_version = 1;</code>
       */
      public com.google.protobuf.ByteString
          getChromeVersionBytes() {
        return instance.getChromeVersionBytes();
      }
      /**
       * <code>optional string chrome_version = 1;</code>
       */
      public Builder setChromeVersion(
          java.lang.String value) {
        copyOnWrite();
        instance.setChromeVersion(value);
        return this;
      }
      /**
       * <code>optional string chrome_version = 1;</code>
       */
      public Builder clearChromeVersion() {
        copyOnWrite();
        instance.clearChromeVersion();
        return this;
      }
      /**
       * <code>optional string chrome_version = 1;</code>
       */
      public Builder setChromeVersionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChromeVersionBytes(value);
        return this;
      }

      /**
       * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
       */
      public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto> getActiveFieldTrialsList() {
        return java.util.Collections.unmodifiableList(
            instance.getActiveFieldTrialsList());
      }
      /**
       * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
       */
      public int getActiveFieldTrialsCount() {
        return instance.getActiveFieldTrialsCount();
      }/**
       * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
       */
      public org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto getActiveFieldTrials(int index) {
        return instance.getActiveFieldTrials(index);
      }
      /**
       * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
       */
      public Builder setActiveFieldTrials(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto value) {
        copyOnWrite();
        instance.setActiveFieldTrials(index, value);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
       */
      public Builder setActiveFieldTrials(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto.Builder builderForValue) {
        copyOnWrite();
        instance.setActiveFieldTrials(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
       */
      public Builder addActiveFieldTrials(org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto value) {
        copyOnWrite();
        instance.addActiveFieldTrials(value);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
       */
      public Builder addActiveFieldTrials(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto value) {
        copyOnWrite();
        instance.addActiveFieldTrials(index, value);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
       */
      public Builder addActiveFieldTrials(
          org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto.Builder builderForValue) {
        copyOnWrite();
        instance.addActiveFieldTrials(builderForValue);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
       */
      public Builder addActiveFieldTrials(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto.Builder builderForValue) {
        copyOnWrite();
        instance.addActiveFieldTrials(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
       */
      public Builder addAllActiveFieldTrials(
          java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto> values) {
        copyOnWrite();
        instance.addAllActiveFieldTrials(values);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
       */
      public Builder clearActiveFieldTrials() {
        copyOnWrite();
        instance.clearActiveFieldTrials();
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FieldTrialProto active_field_trials = 2;</code>
       */
      public Builder removeActiveFieldTrials(int index) {
        copyOnWrite();
        instance.removeActiveFieldTrials(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:autofill_assistant.ClientContextProto.Chrome)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          activeFieldTrials_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome other = (org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome) arg1;
          chromeVersion_ = visitor.visitString(
              hasChromeVersion(), chromeVersion_,
              other.hasChromeVersion(), other.chromeVersion_);
          activeFieldTrials_= visitor.visitList(activeFieldTrials_, other.activeFieldTrials_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  chromeVersion_ = s;
                  break;
                }
                case 18: {
                  if (!activeFieldTrials_.isModifiable()) {
                    activeFieldTrials_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(activeFieldTrials_);
                  }
                  activeFieldTrials_.add(
                      input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.FieldTrialProto.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.ClientContextProto.Chrome)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Chrome();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Chrome> PARSER;

    public static com.google.protobuf.Parser<Chrome> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  private int clientCase_ = 0;
  private java.lang.Object client_;
  public enum ClientCase
      implements com.google.protobuf.Internal.EnumLite {
    CHROME(1),
    CLIENT_NOT_SET(0);
    private final int value;
    private ClientCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ClientCase valueOf(int value) {
      return forNumber(value);
    }

    public static ClientCase forNumber(int value) {
      switch (value) {
        case 1: return CHROME;
        case 0: return CLIENT_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ClientCase
  getClientCase() {
    return ClientCase.forNumber(
        clientCase_);
  }

  private void clearClient() {
    clientCase_ = 0;
    client_ = null;
  }

  public static final int CHROME_FIELD_NUMBER = 1;
  /**
   * <code>optional .autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
   */
  public boolean hasChrome() {
    return clientCase_ == 1;
  }
  /**
   * <code>optional .autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome getChrome() {
    if (clientCase_ == 1) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome) client_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome.getDefaultInstance();
  }
  /**
   * <code>optional .autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
   */
  private void setChrome(org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome value) {
    if (value == null) {
      throw new NullPointerException();
    }
    client_ = value;
    clientCase_ = 1;
  }
  /**
   * <code>optional .autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
   */
  private void setChrome(
      org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome.Builder builderForValue) {
    client_ = builderForValue.build();
    clientCase_ = 1;
  }
  /**
   * <code>optional .autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
   */
  private void mergeChrome(org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome value) {
    if (clientCase_ == 1 &&
        client_ != org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome.getDefaultInstance()) {
      client_ = org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome) client_)
          .mergeFrom(value).buildPartial();
    } else {
      client_ = value;
    }
    clientCase_ = 1;
  }
  /**
   * <code>optional .autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
   */
  private void clearChrome() {
    if (clientCase_ == 1) {
      clientCase_ = 0;
      client_ = null;
    }
  }

  public static final int LOCALE_FIELD_NUMBER = 5;
  private java.lang.String locale_;
  /**
   * <pre>
   * locale should be a comma separated list of language tags. Each tag should
   * be a well-formed IETF BCP 47 language tag with language and country code
   * (e.g., "en-US").
   * The intent is to communicate the client language preferences to the server.
   * </pre>
   *
   * <code>optional string locale = 5;</code>
   */
  public boolean hasLocale() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * locale should be a comma separated list of language tags. Each tag should
   * be a well-formed IETF BCP 47 language tag with language and country code
   * (e.g., "en-US").
   * The intent is to communicate the client language preferences to the server.
   * </pre>
   *
   * <code>optional string locale = 5;</code>
   */
  public java.lang.String getLocale() {
    return locale_;
  }
  /**
   * <pre>
   * locale should be a comma separated list of language tags. Each tag should
   * be a well-formed IETF BCP 47 language tag with language and country code
   * (e.g., "en-US").
   * The intent is to communicate the client language preferences to the server.
   * </pre>
   *
   * <code>optional string locale = 5;</code>
   */
  public com.google.protobuf.ByteString
      getLocaleBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(locale_);
  }
  /**
   * <pre>
   * locale should be a comma separated list of language tags. Each tag should
   * be a well-formed IETF BCP 47 language tag with language and country code
   * (e.g., "en-US").
   * The intent is to communicate the client language preferences to the server.
   * </pre>
   *
   * <code>optional string locale = 5;</code>
   */
  private void setLocale(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    locale_ = value;
  }
  /**
   * <pre>
   * locale should be a comma separated list of language tags. Each tag should
   * be a well-formed IETF BCP 47 language tag with language and country code
   * (e.g., "en-US").
   * The intent is to communicate the client language preferences to the server.
   * </pre>
   *
   * <code>optional string locale = 5;</code>
   */
  private void clearLocale() {
    bitField0_ = (bitField0_ & ~0x00000002);
    locale_ = getDefaultInstance().getLocale();
  }
  /**
   * <pre>
   * locale should be a comma separated list of language tags. Each tag should
   * be a well-formed IETF BCP 47 language tag with language and country code
   * (e.g., "en-US").
   * The intent is to communicate the client language preferences to the server.
   * </pre>
   *
   * <code>optional string locale = 5;</code>
   */
  private void setLocaleBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    locale_ = value.toStringUtf8();
  }

  public static final int COUNTRY_FIELD_NUMBER = 6;
  private java.lang.String country_;
  /**
   * <pre>
   * country should be a country code as defined by ISO 3166-1-alpha-2.
   * The intent is to communicate the client's location to the server.
   * </pre>
   *
   * <code>optional string country = 6;</code>
   */
  public boolean hasCountry() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * country should be a country code as defined by ISO 3166-1-alpha-2.
   * The intent is to communicate the client's location to the server.
   * </pre>
   *
   * <code>optional string country = 6;</code>
   */
  public java.lang.String getCountry() {
    return country_;
  }
  /**
   * <pre>
   * country should be a country code as defined by ISO 3166-1-alpha-2.
   * The intent is to communicate the client's location to the server.
   * </pre>
   *
   * <code>optional string country = 6;</code>
   */
  public com.google.protobuf.ByteString
      getCountryBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(country_);
  }
  /**
   * <pre>
   * country should be a country code as defined by ISO 3166-1-alpha-2.
   * The intent is to communicate the client's location to the server.
   * </pre>
   *
   * <code>optional string country = 6;</code>
   */
  private void setCountry(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
    country_ = value;
  }
  /**
   * <pre>
   * country should be a country code as defined by ISO 3166-1-alpha-2.
   * The intent is to communicate the client's location to the server.
   * </pre>
   *
   * <code>optional string country = 6;</code>
   */
  private void clearCountry() {
    bitField0_ = (bitField0_ & ~0x00000004);
    country_ = getDefaultInstance().getCountry();
  }
  /**
   * <pre>
   * country should be a country code as defined by ISO 3166-1-alpha-2.
   * The intent is to communicate the client's location to the server.
   * </pre>
   *
   * <code>optional string country = 6;</code>
   */
  private void setCountryBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
    country_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (clientCase_ == 1) {
      output.writeMessage(1, (org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome) client_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeString(5, getLocale());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeString(6, getCountry());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (clientCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome) client_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(5, getLocale());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(6, getCountry());
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Context contains client environment details.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.ClientContextProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ClientContextProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    public ClientCase
        getClientCase() {
      return instance.getClientCase();
    }

    public Builder clearClient() {
      copyOnWrite();
      instance.clearClient();
      return this;
    }


    /**
     * <code>optional .autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
     */
    public boolean hasChrome() {
      return instance.hasChrome();
    }
    /**
     * <code>optional .autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome getChrome() {
      return instance.getChrome();
    }
    /**
     * <code>optional .autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
     */
    public Builder setChrome(org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome value) {
      copyOnWrite();
      instance.setChrome(value);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
     */
    public Builder setChrome(
        org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome.Builder builderForValue) {
      copyOnWrite();
      instance.setChrome(builderForValue);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
     */
    public Builder mergeChrome(org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome value) {
      copyOnWrite();
      instance.mergeChrome(value);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.ClientContextProto.Chrome chrome = 1;</code>
     */
    public Builder clearChrome() {
      copyOnWrite();
      instance.clearChrome();
      return this;
    }

    /**
     * <pre>
     * locale should be a comma separated list of language tags. Each tag should
     * be a well-formed IETF BCP 47 language tag with language and country code
     * (e.g., "en-US").
     * The intent is to communicate the client language preferences to the server.
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     */
    public boolean hasLocale() {
      return instance.hasLocale();
    }
    /**
     * <pre>
     * locale should be a comma separated list of language tags. Each tag should
     * be a well-formed IETF BCP 47 language tag with language and country code
     * (e.g., "en-US").
     * The intent is to communicate the client language preferences to the server.
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     */
    public java.lang.String getLocale() {
      return instance.getLocale();
    }
    /**
     * <pre>
     * locale should be a comma separated list of language tags. Each tag should
     * be a well-formed IETF BCP 47 language tag with language and country code
     * (e.g., "en-US").
     * The intent is to communicate the client language preferences to the server.
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     */
    public com.google.protobuf.ByteString
        getLocaleBytes() {
      return instance.getLocaleBytes();
    }
    /**
     * <pre>
     * locale should be a comma separated list of language tags. Each tag should
     * be a well-formed IETF BCP 47 language tag with language and country code
     * (e.g., "en-US").
     * The intent is to communicate the client language preferences to the server.
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     */
    public Builder setLocale(
        java.lang.String value) {
      copyOnWrite();
      instance.setLocale(value);
      return this;
    }
    /**
     * <pre>
     * locale should be a comma separated list of language tags. Each tag should
     * be a well-formed IETF BCP 47 language tag with language and country code
     * (e.g., "en-US").
     * The intent is to communicate the client language preferences to the server.
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     */
    public Builder clearLocale() {
      copyOnWrite();
      instance.clearLocale();
      return this;
    }
    /**
     * <pre>
     * locale should be a comma separated list of language tags. Each tag should
     * be a well-formed IETF BCP 47 language tag with language and country code
     * (e.g., "en-US").
     * The intent is to communicate the client language preferences to the server.
     * </pre>
     *
     * <code>optional string locale = 5;</code>
     */
    public Builder setLocaleBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setLocaleBytes(value);
      return this;
    }

    /**
     * <pre>
     * country should be a country code as defined by ISO 3166-1-alpha-2.
     * The intent is to communicate the client's location to the server.
     * </pre>
     *
     * <code>optional string country = 6;</code>
     */
    public boolean hasCountry() {
      return instance.hasCountry();
    }
    /**
     * <pre>
     * country should be a country code as defined by ISO 3166-1-alpha-2.
     * The intent is to communicate the client's location to the server.
     * </pre>
     *
     * <code>optional string country = 6;</code>
     */
    public java.lang.String getCountry() {
      return instance.getCountry();
    }
    /**
     * <pre>
     * country should be a country code as defined by ISO 3166-1-alpha-2.
     * The intent is to communicate the client's location to the server.
     * </pre>
     *
     * <code>optional string country = 6;</code>
     */
    public com.google.protobuf.ByteString
        getCountryBytes() {
      return instance.getCountryBytes();
    }
    /**
     * <pre>
     * country should be a country code as defined by ISO 3166-1-alpha-2.
     * The intent is to communicate the client's location to the server.
     * </pre>
     *
     * <code>optional string country = 6;</code>
     */
    public Builder setCountry(
        java.lang.String value) {
      copyOnWrite();
      instance.setCountry(value);
      return this;
    }
    /**
     * <pre>
     * country should be a country code as defined by ISO 3166-1-alpha-2.
     * The intent is to communicate the client's location to the server.
     * </pre>
     *
     * <code>optional string country = 6;</code>
     */
    public Builder clearCountry() {
      copyOnWrite();
      instance.clearCountry();
      return this;
    }
    /**
     * <pre>
     * country should be a country code as defined by ISO 3166-1-alpha-2.
     * The intent is to communicate the client's location to the server.
     * </pre>
     *
     * <code>optional string country = 6;</code>
     */
    public Builder setCountryBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCountryBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ClientContextProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto other = (org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto) arg1;
        locale_ = visitor.visitString(
            hasLocale(), locale_,
            other.hasLocale(), other.locale_);
        country_ = visitor.visitString(
            hasCountry(), country_,
            other.hasCountry(), other.country_);
        switch (other.getClientCase()) {
          case CHROME: {
            client_ = visitor.visitOneofMessage(
                clientCase_ == 1,
                client_,
                other.client_);
            break;
          }
          case CLIENT_NOT_SET: {
            visitor.visitOneofNotSet(clientCase_ != 0);
            break;
          }
        }
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          if (other.clientCase_ != 0) {
            clientCase_ = other.clientCase_;
          }
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome.Builder subBuilder = null;
                if (clientCase_ == 1) {
                  subBuilder = ((org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome) client_).toBuilder();
                }
                client_ =
                     input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.Chrome) client_);
                  client_ = subBuilder.buildPartial();
                }
                clientCase_ = 1;
                break;
              }
              case 42: {
                String s = input.readString();
                bitField0_ |= 0x00000002;
                locale_ = s;
                break;
              }
              case 50: {
                String s = input.readString();
                bitField0_ |= 0x00000004;
                country_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ClientContextProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ClientContextProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ClientContextProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ClientContextProto> PARSER;

  public static com.google.protobuf.Parser<ClientContextProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

