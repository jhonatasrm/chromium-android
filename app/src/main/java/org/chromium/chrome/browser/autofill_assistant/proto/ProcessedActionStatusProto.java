// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * Protobuf enum {@code autofill_assistant.ProcessedActionStatusProto}
 */
public enum ProcessedActionStatusProto
    implements com.google.protobuf.Internal.EnumLite {
  /**
   * <code>UNKNOWN_ACTION_STATUS = 0;</code>
   */
  UNKNOWN_ACTION_STATUS(0),
  /**
   * <pre>
   * Element could not be found.
   * </pre>
   *
   * <code>ELEMENT_RESOLUTION_FAILED = 1;</code>
   */
  ELEMENT_RESOLUTION_FAILED(1),
  /**
   * <pre>
   * The action was applied successfully.
   * </pre>
   *
   * <code>ACTION_APPLIED = 2;</code>
   */
  ACTION_APPLIED(2),
  /**
   * <pre>
   * The action failed (generic error).
   * </pre>
   *
   * <code>OTHER_ACTION_STATUS = 3;</code>
   */
  OTHER_ACTION_STATUS(3),
  /**
   * <pre>
   * The action failed to get payment information.
   * </pre>
   *
   * <code>PAYMENT_REQUEST_ERROR = 4;</code>
   */
  PAYMENT_REQUEST_ERROR(4),
  /**
   * <pre>
   * Server asked the client to execute an unknown or unsupported action.
   * </pre>
   *
   * <code>UNSUPPORTED_ACTION = 5;</code>
   */
  UNSUPPORTED_ACTION(5),
  /**
   * <pre>
   * The action decided to fallback to manual mode, stopping the script.
   * This can happen:
   * - if an autofill action or an update details action cancels the script,
   *   possibly, not necessarily, as a result of a user action.
   * - if an interrupt explicitly stops the main script, for wait for dom
   * </pre>
   *
   * <code>MANUAL_FALLBACK = 6;</code>
   */
  MANUAL_FALLBACK(6),
  /**
   * <pre>
   * The WaitForDom action failed because an interrupt that ran during
   * that action failed.
   * </pre>
   *
   * <code>INTERRUPT_FAILED = 7;</code>
   */
  INTERRUPT_FAILED(7),
  /**
   * <pre>
   * The script was canceled by the user, while it was running.
   * This only report such events that happen while a script is running. It can
   * affect any action. It is a signal that the action or script ran in an
   * abnormal situation and its outcome cannot be trusted.
   * </pre>
   *
   * <code>USER_ABORTED_ACTION = 8;</code>
   */
  USER_ABORTED_ACTION(8),
  ;

  /**
   * <code>UNKNOWN_ACTION_STATUS = 0;</code>
   */
  public static final int UNKNOWN_ACTION_STATUS_VALUE = 0;
  /**
   * <pre>
   * Element could not be found.
   * </pre>
   *
   * <code>ELEMENT_RESOLUTION_FAILED = 1;</code>
   */
  public static final int ELEMENT_RESOLUTION_FAILED_VALUE = 1;
  /**
   * <pre>
   * The action was applied successfully.
   * </pre>
   *
   * <code>ACTION_APPLIED = 2;</code>
   */
  public static final int ACTION_APPLIED_VALUE = 2;
  /**
   * <pre>
   * The action failed (generic error).
   * </pre>
   *
   * <code>OTHER_ACTION_STATUS = 3;</code>
   */
  public static final int OTHER_ACTION_STATUS_VALUE = 3;
  /**
   * <pre>
   * The action failed to get payment information.
   * </pre>
   *
   * <code>PAYMENT_REQUEST_ERROR = 4;</code>
   */
  public static final int PAYMENT_REQUEST_ERROR_VALUE = 4;
  /**
   * <pre>
   * Server asked the client to execute an unknown or unsupported action.
   * </pre>
   *
   * <code>UNSUPPORTED_ACTION = 5;</code>
   */
  public static final int UNSUPPORTED_ACTION_VALUE = 5;
  /**
   * <pre>
   * The action decided to fallback to manual mode, stopping the script.
   * This can happen:
   * - if an autofill action or an update details action cancels the script,
   *   possibly, not necessarily, as a result of a user action.
   * - if an interrupt explicitly stops the main script, for wait for dom
   * </pre>
   *
   * <code>MANUAL_FALLBACK = 6;</code>
   */
  public static final int MANUAL_FALLBACK_VALUE = 6;
  /**
   * <pre>
   * The WaitForDom action failed because an interrupt that ran during
   * that action failed.
   * </pre>
   *
   * <code>INTERRUPT_FAILED = 7;</code>
   */
  public static final int INTERRUPT_FAILED_VALUE = 7;
  /**
   * <pre>
   * The script was canceled by the user, while it was running.
   * This only report such events that happen while a script is running. It can
   * affect any action. It is a signal that the action or script ran in an
   * abnormal situation and its outcome cannot be trusted.
   * </pre>
   *
   * <code>USER_ABORTED_ACTION = 8;</code>
   */
  public static final int USER_ABORTED_ACTION_VALUE = 8;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ProcessedActionStatusProto valueOf(int value) {
    return forNumber(value);
  }

  public static ProcessedActionStatusProto forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_ACTION_STATUS;
      case 1: return ELEMENT_RESOLUTION_FAILED;
      case 2: return ACTION_APPLIED;
      case 3: return OTHER_ACTION_STATUS;
      case 4: return PAYMENT_REQUEST_ERROR;
      case 5: return UNSUPPORTED_ACTION;
      case 6: return MANUAL_FALLBACK;
      case 7: return INTERRUPT_FAILED;
      case 8: return USER_ABORTED_ACTION;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ProcessedActionStatusProto>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ProcessedActionStatusProto> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ProcessedActionStatusProto>() {
          public ProcessedActionStatusProto findValueByNumber(int number) {
            return ProcessedActionStatusProto.forNumber(number);
          }
        };

  private final int value;

  private ProcessedActionStatusProto(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:autofill_assistant.ProcessedActionStatusProto)
}

