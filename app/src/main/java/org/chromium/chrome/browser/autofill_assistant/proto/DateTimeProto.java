// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * Protobuf type {@code autofill_assistant.DateTimeProto}
 */
public  final class DateTimeProto extends
    com.google.protobuf.GeneratedMessageLite<
        DateTimeProto, DateTimeProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.DateTimeProto)
    DateTimeProtoOrBuilder {
  private DateTimeProto() {
  }
  private int bitField0_;
  public static final int DATE_FIELD_NUMBER = 1;
  private org.chromium.chrome.browser.autofill_assistant.proto.DateProto date_;
  /**
   * <code>optional .autofill_assistant.DateProto date = 1;</code>
   */
  public boolean hasDate() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional .autofill_assistant.DateProto date = 1;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.DateProto getDate() {
    return date_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.DateProto.getDefaultInstance() : date_;
  }
  /**
   * <code>optional .autofill_assistant.DateProto date = 1;</code>
   */
  private void setDate(org.chromium.chrome.browser.autofill_assistant.proto.DateProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    date_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <code>optional .autofill_assistant.DateProto date = 1;</code>
   */
  private void setDate(
      org.chromium.chrome.browser.autofill_assistant.proto.DateProto.Builder builderForValue) {
    date_ = builderForValue.build();
    bitField0_ |= 0x00000001;
  }
  /**
   * <code>optional .autofill_assistant.DateProto date = 1;</code>
   */
  private void mergeDate(org.chromium.chrome.browser.autofill_assistant.proto.DateProto value) {
    if (date_ != null &&
        date_ != org.chromium.chrome.browser.autofill_assistant.proto.DateProto.getDefaultInstance()) {
      date_ =
        org.chromium.chrome.browser.autofill_assistant.proto.DateProto.newBuilder(date_).mergeFrom(value).buildPartial();
    } else {
      date_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <code>optional .autofill_assistant.DateProto date = 1;</code>
   */
  private void clearDate() {  date_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int TIME_FIELD_NUMBER = 2;
  private org.chromium.chrome.browser.autofill_assistant.proto.TimeProto time_;
  /**
   * <code>optional .autofill_assistant.TimeProto time = 2;</code>
   */
  public boolean hasTime() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional .autofill_assistant.TimeProto time = 2;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.TimeProto getTime() {
    return time_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.TimeProto.getDefaultInstance() : time_;
  }
  /**
   * <code>optional .autofill_assistant.TimeProto time = 2;</code>
   */
  private void setTime(org.chromium.chrome.browser.autofill_assistant.proto.TimeProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    time_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <code>optional .autofill_assistant.TimeProto time = 2;</code>
   */
  private void setTime(
      org.chromium.chrome.browser.autofill_assistant.proto.TimeProto.Builder builderForValue) {
    time_ = builderForValue.build();
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .autofill_assistant.TimeProto time = 2;</code>
   */
  private void mergeTime(org.chromium.chrome.browser.autofill_assistant.proto.TimeProto value) {
    if (time_ != null &&
        time_ != org.chromium.chrome.browser.autofill_assistant.proto.TimeProto.getDefaultInstance()) {
      time_ =
        org.chromium.chrome.browser.autofill_assistant.proto.TimeProto.newBuilder(time_).mergeFrom(value).buildPartial();
    } else {
      time_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .autofill_assistant.TimeProto time = 2;</code>
   */
  private void clearTime() {  time_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeMessage(1, getDate());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeMessage(2, getTime());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getDate());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTime());
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code autofill_assistant.DateTimeProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.DateTimeProto)
      org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional .autofill_assistant.DateProto date = 1;</code>
     */
    public boolean hasDate() {
      return instance.hasDate();
    }
    /**
     * <code>optional .autofill_assistant.DateProto date = 1;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.DateProto getDate() {
      return instance.getDate();
    }
    /**
     * <code>optional .autofill_assistant.DateProto date = 1;</code>
     */
    public Builder setDate(org.chromium.chrome.browser.autofill_assistant.proto.DateProto value) {
      copyOnWrite();
      instance.setDate(value);
      return this;
      }
    /**
     * <code>optional .autofill_assistant.DateProto date = 1;</code>
     */
    public Builder setDate(
        org.chromium.chrome.browser.autofill_assistant.proto.DateProto.Builder builderForValue) {
      copyOnWrite();
      instance.setDate(builderForValue);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.DateProto date = 1;</code>
     */
    public Builder mergeDate(org.chromium.chrome.browser.autofill_assistant.proto.DateProto value) {
      copyOnWrite();
      instance.mergeDate(value);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.DateProto date = 1;</code>
     */
    public Builder clearDate() {  copyOnWrite();
      instance.clearDate();
      return this;
    }

    /**
     * <code>optional .autofill_assistant.TimeProto time = 2;</code>
     */
    public boolean hasTime() {
      return instance.hasTime();
    }
    /**
     * <code>optional .autofill_assistant.TimeProto time = 2;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.TimeProto getTime() {
      return instance.getTime();
    }
    /**
     * <code>optional .autofill_assistant.TimeProto time = 2;</code>
     */
    public Builder setTime(org.chromium.chrome.browser.autofill_assistant.proto.TimeProto value) {
      copyOnWrite();
      instance.setTime(value);
      return this;
      }
    /**
     * <code>optional .autofill_assistant.TimeProto time = 2;</code>
     */
    public Builder setTime(
        org.chromium.chrome.browser.autofill_assistant.proto.TimeProto.Builder builderForValue) {
      copyOnWrite();
      instance.setTime(builderForValue);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.TimeProto time = 2;</code>
     */
    public Builder mergeTime(org.chromium.chrome.browser.autofill_assistant.proto.TimeProto value) {
      copyOnWrite();
      instance.mergeTime(value);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.TimeProto time = 2;</code>
     */
    public Builder clearTime() {  copyOnWrite();
      instance.clearTime();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.DateTimeProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto other = (org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto) arg1;
        date_ = visitor.visitMessage(date_, other.date_);
        time_ = visitor.visitMessage(time_, other.time_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                org.chromium.chrome.browser.autofill_assistant.proto.DateProto.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = date_.toBuilder();
                }
                date_ = input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.DateProto.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(date_);
                  date_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                org.chromium.chrome.browser.autofill_assistant.proto.TimeProto.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = time_.toBuilder();
                }
                time_ = input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.TimeProto.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(time_);
                  time_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.DateTimeProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new DateTimeProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.DateTimeProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<DateTimeProto> PARSER;

  public static com.google.protobuf.Parser<DateTimeProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

