// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partner_location_descriptor.proto

package org.chromium.chrome.browser.omnibox.geo;

public final class PartnerLocationDescriptor {
  private PartnerLocationDescriptor() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code org.chromium.chrome.browser.omnibox.geo.LocationRole}
   */
  public enum LocationRole
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNKNOWN_ROLE = 0;</code>
     */
    UNKNOWN_ROLE(0),
    /**
     * <code>CURRENT_LOCATION = 1;</code>
     */
    CURRENT_LOCATION(1),
    ;

    /**
     * <code>UNKNOWN_ROLE = 0;</code>
     */
    public static final int UNKNOWN_ROLE_VALUE = 0;
    /**
     * <code>CURRENT_LOCATION = 1;</code>
     */
    public static final int CURRENT_LOCATION_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LocationRole valueOf(int value) {
      return forNumber(value);
    }

    public static LocationRole forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_ROLE;
        case 1: return CURRENT_LOCATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LocationRole>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LocationRole> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LocationRole>() {
            public LocationRole findValueByNumber(int number) {
              return LocationRole.forNumber(number);
            }
          };

    private final int value;

    private LocationRole(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.chromium.chrome.browser.omnibox.geo.LocationRole)
  }

  /**
   * Protobuf enum {@code org.chromium.chrome.browser.omnibox.geo.LocationProducer}
   */
  public enum LocationProducer
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNKNOWN_PRODUCER = 0;</code>
     */
    UNKNOWN_PRODUCER(0),
    /**
     * <code>DEVICE_LOCATION = 12;</code>
     */
    DEVICE_LOCATION(12),
    ;

    /**
     * <code>UNKNOWN_PRODUCER = 0;</code>
     */
    public static final int UNKNOWN_PRODUCER_VALUE = 0;
    /**
     * <code>DEVICE_LOCATION = 12;</code>
     */
    public static final int DEVICE_LOCATION_VALUE = 12;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LocationProducer valueOf(int value) {
      return forNumber(value);
    }

    public static LocationProducer forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_PRODUCER;
        case 12: return DEVICE_LOCATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LocationProducer>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LocationProducer> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LocationProducer>() {
            public LocationProducer findValueByNumber(int number) {
              return LocationProducer.forNumber(number);
            }
          };

    private final int value;

    private LocationProducer(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.chromium.chrome.browser.omnibox.geo.LocationProducer)
  }

  public interface LatLngOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.chromium.chrome.browser.omnibox.geo.LatLng)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional sfixed32 latitude_e7 = 1;</code>
     */
    boolean hasLatitudeE7();
    /**
     * <code>optional sfixed32 latitude_e7 = 1;</code>
     */
    int getLatitudeE7();

    /**
     * <code>optional sfixed32 longitude_e7 = 2;</code>
     */
    boolean hasLongitudeE7();
    /**
     * <code>optional sfixed32 longitude_e7 = 2;</code>
     */
    int getLongitudeE7();
  }
  /**
   * Protobuf type {@code org.chromium.chrome.browser.omnibox.geo.LatLng}
   */
  public  static final class LatLng extends
      com.google.protobuf.GeneratedMessageLite<
          LatLng, LatLng.Builder> implements
      // @@protoc_insertion_point(message_implements:org.chromium.chrome.browser.omnibox.geo.LatLng)
      LatLngOrBuilder {
    private LatLng() {
    }
    private int bitField0_;
    public static final int LATITUDE_E7_FIELD_NUMBER = 1;
    private int latitudeE7_;
    /**
     * <code>optional sfixed32 latitude_e7 = 1;</code>
     */
    public boolean hasLatitudeE7() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sfixed32 latitude_e7 = 1;</code>
     */
    public int getLatitudeE7() {
      return latitudeE7_;
    }
    /**
     * <code>optional sfixed32 latitude_e7 = 1;</code>
     */
    private void setLatitudeE7(int value) {
      bitField0_ |= 0x00000001;
      latitudeE7_ = value;
    }
    /**
     * <code>optional sfixed32 latitude_e7 = 1;</code>
     */
    private void clearLatitudeE7() {
      bitField0_ = (bitField0_ & ~0x00000001);
      latitudeE7_ = 0;
    }

    public static final int LONGITUDE_E7_FIELD_NUMBER = 2;
    private int longitudeE7_;
    /**
     * <code>optional sfixed32 longitude_e7 = 2;</code>
     */
    public boolean hasLongitudeE7() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sfixed32 longitude_e7 = 2;</code>
     */
    public int getLongitudeE7() {
      return longitudeE7_;
    }
    /**
     * <code>optional sfixed32 longitude_e7 = 2;</code>
     */
    private void setLongitudeE7(int value) {
      bitField0_ |= 0x00000002;
      longitudeE7_ = value;
    }
    /**
     * <code>optional sfixed32 longitude_e7 = 2;</code>
     */
    private void clearLongitudeE7() {
      bitField0_ = (bitField0_ & ~0x00000002);
      longitudeE7_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSFixed32(1, latitudeE7_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeSFixed32(2, longitudeE7_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(1, latitudeE7_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(2, longitudeE7_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code org.chromium.chrome.browser.omnibox.geo.LatLng}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.chromium.chrome.browser.omnibox.geo.LatLng)
        org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLngOrBuilder {
      // Construct using org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional sfixed32 latitude_e7 = 1;</code>
       */
      public boolean hasLatitudeE7() {
        return instance.hasLatitudeE7();
      }
      /**
       * <code>optional sfixed32 latitude_e7 = 1;</code>
       */
      public int getLatitudeE7() {
        return instance.getLatitudeE7();
      }
      /**
       * <code>optional sfixed32 latitude_e7 = 1;</code>
       */
      public Builder setLatitudeE7(int value) {
        copyOnWrite();
        instance.setLatitudeE7(value);
        return this;
      }
      /**
       * <code>optional sfixed32 latitude_e7 = 1;</code>
       */
      public Builder clearLatitudeE7() {
        copyOnWrite();
        instance.clearLatitudeE7();
        return this;
      }

      /**
       * <code>optional sfixed32 longitude_e7 = 2;</code>
       */
      public boolean hasLongitudeE7() {
        return instance.hasLongitudeE7();
      }
      /**
       * <code>optional sfixed32 longitude_e7 = 2;</code>
       */
      public int getLongitudeE7() {
        return instance.getLongitudeE7();
      }
      /**
       * <code>optional sfixed32 longitude_e7 = 2;</code>
       */
      public Builder setLongitudeE7(int value) {
        copyOnWrite();
        instance.setLongitudeE7(value);
        return this;
      }
      /**
       * <code>optional sfixed32 longitude_e7 = 2;</code>
       */
      public Builder clearLongitudeE7() {
        copyOnWrite();
        instance.clearLongitudeE7();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.chromium.chrome.browser.omnibox.geo.LatLng)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng other = (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng) arg1;
          latitudeE7_ = visitor.visitInt(
              hasLatitudeE7(), latitudeE7_,
              other.hasLatitudeE7(), other.latitudeE7_);
          longitudeE7_ = visitor.visitInt(
              hasLongitudeE7(), longitudeE7_,
              other.hasLongitudeE7(), other.longitudeE7_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 13: {
                  bitField0_ |= 0x00000001;
                  latitudeE7_ = input.readSFixed32();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  longitudeE7_ = input.readSFixed32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.chromium.chrome.browser.omnibox.geo.LatLng)
    private static final org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LatLng();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LatLng> PARSER;

    public static com.google.protobuf.Parser<LatLng> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface VisibleNetworkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
     */
    boolean hasWifi();
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
     */
    org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi getWifi();

    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
     */
    boolean hasCell();
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
     */
    org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell getCell();

    /**
     * <code>optional bool connected = 3;</code>
     */
    boolean hasConnected();
    /**
     * <code>optional bool connected = 3;</code>
     */
    boolean getConnected();

    /**
     * <code>optional int64 timestamp_ms = 4;</code>
     */
    boolean hasTimestampMs();
    /**
     * <code>optional int64 timestamp_ms = 4;</code>
     */
    long getTimestampMs();

    public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.TypeCase getTypeCase();
  }
  /**
   * Protobuf type {@code org.chromium.chrome.browser.omnibox.geo.VisibleNetwork}
   */
  public  static final class VisibleNetwork extends
      com.google.protobuf.GeneratedMessageLite<
          VisibleNetwork, VisibleNetwork.Builder> implements
      // @@protoc_insertion_point(message_implements:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork)
      VisibleNetworkOrBuilder {
    private VisibleNetwork() {
    }
    public interface WiFiOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional string bssid = 1;</code>
       */
      boolean hasBssid();
      /**
       * <code>optional string bssid = 1;</code>
       */
      java.lang.String getBssid();
      /**
       * <code>optional string bssid = 1;</code>
       */
      com.google.protobuf.ByteString
          getBssidBytes();

      /**
       * <code>optional int32 level_dbm = 2;</code>
       */
      boolean hasLevelDbm();
      /**
       * <code>optional int32 level_dbm = 2;</code>
       */
      int getLevelDbm();
    }
    /**
     * Protobuf type {@code org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi}
     */
    public  static final class WiFi extends
        com.google.protobuf.GeneratedMessageLite<
            WiFi, WiFi.Builder> implements
        // @@protoc_insertion_point(message_implements:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi)
        WiFiOrBuilder {
      private WiFi() {
        bssid_ = "";
      }
      private int bitField0_;
      public static final int BSSID_FIELD_NUMBER = 1;
      private java.lang.String bssid_;
      /**
       * <code>optional string bssid = 1;</code>
       */
      public boolean hasBssid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string bssid = 1;</code>
       */
      public java.lang.String getBssid() {
        return bssid_;
      }
      /**
       * <code>optional string bssid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getBssidBytes() {
        return com.google.protobuf.ByteString.copyFromUtf8(bssid_);
      }
      /**
       * <code>optional string bssid = 1;</code>
       */
      private void setBssid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        bssid_ = value;
      }
      /**
       * <code>optional string bssid = 1;</code>
       */
      private void clearBssid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        bssid_ = getDefaultInstance().getBssid();
      }
      /**
       * <code>optional string bssid = 1;</code>
       */
      private void setBssidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        bssid_ = value.toStringUtf8();
      }

      public static final int LEVEL_DBM_FIELD_NUMBER = 2;
      private int levelDbm_;
      /**
       * <code>optional int32 level_dbm = 2;</code>
       */
      public boolean hasLevelDbm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 level_dbm = 2;</code>
       */
      public int getLevelDbm() {
        return levelDbm_;
      }
      /**
       * <code>optional int32 level_dbm = 2;</code>
       */
      private void setLevelDbm(int value) {
        bitField0_ |= 0x00000002;
        levelDbm_ = value;
      }
      /**
       * <code>optional int32 level_dbm = 2;</code>
       */
      private void clearLevelDbm() {
        bitField0_ = (bitField0_ & ~0x00000002);
        levelDbm_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeString(1, getBssid());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, levelDbm_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getBssid());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, levelDbm_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi, Builder> implements
          // @@protoc_insertion_point(builder_implements:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi)
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFiOrBuilder {
        // Construct using org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional string bssid = 1;</code>
         */
        public boolean hasBssid() {
          return instance.hasBssid();
        }
        /**
         * <code>optional string bssid = 1;</code>
         */
        public java.lang.String getBssid() {
          return instance.getBssid();
        }
        /**
         * <code>optional string bssid = 1;</code>
         */
        public com.google.protobuf.ByteString
            getBssidBytes() {
          return instance.getBssidBytes();
        }
        /**
         * <code>optional string bssid = 1;</code>
         */
        public Builder setBssid(
            java.lang.String value) {
          copyOnWrite();
          instance.setBssid(value);
          return this;
        }
        /**
         * <code>optional string bssid = 1;</code>
         */
        public Builder clearBssid() {
          copyOnWrite();
          instance.clearBssid();
          return this;
        }
        /**
         * <code>optional string bssid = 1;</code>
         */
        public Builder setBssidBytes(
            com.google.protobuf.ByteString value) {
          copyOnWrite();
          instance.setBssidBytes(value);
          return this;
        }

        /**
         * <code>optional int32 level_dbm = 2;</code>
         */
        public boolean hasLevelDbm() {
          return instance.hasLevelDbm();
        }
        /**
         * <code>optional int32 level_dbm = 2;</code>
         */
        public int getLevelDbm() {
          return instance.getLevelDbm();
        }
        /**
         * <code>optional int32 level_dbm = 2;</code>
         */
        public Builder setLevelDbm(int value) {
          copyOnWrite();
          instance.setLevelDbm(value);
          return this;
        }
        /**
         * <code>optional int32 level_dbm = 2;</code>
         */
        public Builder clearLevelDbm() {
          copyOnWrite();
          instance.clearLevelDbm();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi other = (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi) arg1;
            bssid_ = visitor.visitString(
                hasBssid(), bssid_,
                other.hasBssid(), other.bssid_);
            levelDbm_ = visitor.visitInt(
                hasLevelDbm(), levelDbm_,
                other.hasLevelDbm(), other.levelDbm_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    String s = input.readString();
                    bitField0_ |= 0x00000001;
                    bssid_ = s;
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    levelDbm_ = input.readInt32();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi)
      private static final org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new WiFi();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<WiFi> PARSER;

      public static com.google.protobuf.Parser<WiFi> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface CellOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell.Type type = 1;</code>
       */
      boolean hasType();
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell.Type type = 1;</code>
       */
      org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Type getType();

      /**
       * <code>optional int32 cell_id = 2;</code>
       */
      boolean hasCellId();
      /**
       * <code>optional int32 cell_id = 2;</code>
       */
      int getCellId();

      /**
       * <code>optional int32 location_area_code = 3;</code>
       */
      boolean hasLocationAreaCode();
      /**
       * <code>optional int32 location_area_code = 3;</code>
       */
      int getLocationAreaCode();

      /**
       * <code>optional int32 mobile_country_code = 4;</code>
       */
      boolean hasMobileCountryCode();
      /**
       * <code>optional int32 mobile_country_code = 4;</code>
       */
      int getMobileCountryCode();

      /**
       * <code>optional int32 mobile_network_code = 5;</code>
       */
      boolean hasMobileNetworkCode();
      /**
       * <code>optional int32 mobile_network_code = 5;</code>
       */
      int getMobileNetworkCode();

      /**
       * <code>optional int32 primary_scrambling_code = 6;</code>
       */
      boolean hasPrimaryScramblingCode();
      /**
       * <code>optional int32 primary_scrambling_code = 6;</code>
       */
      int getPrimaryScramblingCode();

      /**
       * <code>optional int32 physical_cell_id = 7;</code>
       */
      boolean hasPhysicalCellId();
      /**
       * <code>optional int32 physical_cell_id = 7;</code>
       */
      int getPhysicalCellId();

      /**
       * <code>optional int32 tracking_area_code = 8;</code>
       */
      boolean hasTrackingAreaCode();
      /**
       * <code>optional int32 tracking_area_code = 8;</code>
       */
      int getTrackingAreaCode();
    }
    /**
     * Protobuf type {@code org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell}
     */
    public  static final class Cell extends
        com.google.protobuf.GeneratedMessageLite<
            Cell, Cell.Builder> implements
        // @@protoc_insertion_point(message_implements:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell)
        CellOrBuilder {
      private Cell() {
      }
      /**
       * Protobuf enum {@code org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell.Type}
       */
      public enum Type
          implements com.google.protobuf.Internal.EnumLite {
        /**
         * <code>UNKNOWN = 0;</code>
         */
        UNKNOWN(0),
        /**
         * <code>GSM = 1;</code>
         */
        GSM(1),
        /**
         * <code>LTE = 2;</code>
         */
        LTE(2),
        /**
         * <code>CDMA = 3;</code>
         */
        CDMA(3),
        /**
         * <code>WCDMA = 4;</code>
         */
        WCDMA(4),
        ;

        /**
         * <code>UNKNOWN = 0;</code>
         */
        public static final int UNKNOWN_VALUE = 0;
        /**
         * <code>GSM = 1;</code>
         */
        public static final int GSM_VALUE = 1;
        /**
         * <code>LTE = 2;</code>
         */
        public static final int LTE_VALUE = 2;
        /**
         * <code>CDMA = 3;</code>
         */
        public static final int CDMA_VALUE = 3;
        /**
         * <code>WCDMA = 4;</code>
         */
        public static final int WCDMA_VALUE = 4;


        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Type valueOf(int value) {
          return forNumber(value);
        }

        public static Type forNumber(int value) {
          switch (value) {
            case 0: return UNKNOWN;
            case 1: return GSM;
            case 2: return LTE;
            case 3: return CDMA;
            case 4: return WCDMA;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Type> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                public Type findValueByNumber(int number) {
                  return Type.forNumber(number);
                }
              };

        private final int value;

        private Type(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell.Type)
      }

      private int bitField0_;
      public static final int TYPE_FIELD_NUMBER = 1;
      private int type_;
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell.Type type = 1;</code>
       */
      public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Type getType() {
        org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Type result = org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Type.forNumber(type_);
        return result == null ? org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Type.UNKNOWN : result;
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell.Type type = 1;</code>
       */
      private void setType(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell.Type type = 1;</code>
       */
      private void clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
      }

      public static final int CELL_ID_FIELD_NUMBER = 2;
      private int cellId_;
      /**
       * <code>optional int32 cell_id = 2;</code>
       */
      public boolean hasCellId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 cell_id = 2;</code>
       */
      public int getCellId() {
        return cellId_;
      }
      /**
       * <code>optional int32 cell_id = 2;</code>
       */
      private void setCellId(int value) {
        bitField0_ |= 0x00000002;
        cellId_ = value;
      }
      /**
       * <code>optional int32 cell_id = 2;</code>
       */
      private void clearCellId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cellId_ = 0;
      }

      public static final int LOCATION_AREA_CODE_FIELD_NUMBER = 3;
      private int locationAreaCode_;
      /**
       * <code>optional int32 location_area_code = 3;</code>
       */
      public boolean hasLocationAreaCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 location_area_code = 3;</code>
       */
      public int getLocationAreaCode() {
        return locationAreaCode_;
      }
      /**
       * <code>optional int32 location_area_code = 3;</code>
       */
      private void setLocationAreaCode(int value) {
        bitField0_ |= 0x00000004;
        locationAreaCode_ = value;
      }
      /**
       * <code>optional int32 location_area_code = 3;</code>
       */
      private void clearLocationAreaCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        locationAreaCode_ = 0;
      }

      public static final int MOBILE_COUNTRY_CODE_FIELD_NUMBER = 4;
      private int mobileCountryCode_;
      /**
       * <code>optional int32 mobile_country_code = 4;</code>
       */
      public boolean hasMobileCountryCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 mobile_country_code = 4;</code>
       */
      public int getMobileCountryCode() {
        return mobileCountryCode_;
      }
      /**
       * <code>optional int32 mobile_country_code = 4;</code>
       */
      private void setMobileCountryCode(int value) {
        bitField0_ |= 0x00000008;
        mobileCountryCode_ = value;
      }
      /**
       * <code>optional int32 mobile_country_code = 4;</code>
       */
      private void clearMobileCountryCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mobileCountryCode_ = 0;
      }

      public static final int MOBILE_NETWORK_CODE_FIELD_NUMBER = 5;
      private int mobileNetworkCode_;
      /**
       * <code>optional int32 mobile_network_code = 5;</code>
       */
      public boolean hasMobileNetworkCode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 mobile_network_code = 5;</code>
       */
      public int getMobileNetworkCode() {
        return mobileNetworkCode_;
      }
      /**
       * <code>optional int32 mobile_network_code = 5;</code>
       */
      private void setMobileNetworkCode(int value) {
        bitField0_ |= 0x00000010;
        mobileNetworkCode_ = value;
      }
      /**
       * <code>optional int32 mobile_network_code = 5;</code>
       */
      private void clearMobileNetworkCode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mobileNetworkCode_ = 0;
      }

      public static final int PRIMARY_SCRAMBLING_CODE_FIELD_NUMBER = 6;
      private int primaryScramblingCode_;
      /**
       * <code>optional int32 primary_scrambling_code = 6;</code>
       */
      public boolean hasPrimaryScramblingCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 primary_scrambling_code = 6;</code>
       */
      public int getPrimaryScramblingCode() {
        return primaryScramblingCode_;
      }
      /**
       * <code>optional int32 primary_scrambling_code = 6;</code>
       */
      private void setPrimaryScramblingCode(int value) {
        bitField0_ |= 0x00000020;
        primaryScramblingCode_ = value;
      }
      /**
       * <code>optional int32 primary_scrambling_code = 6;</code>
       */
      private void clearPrimaryScramblingCode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        primaryScramblingCode_ = 0;
      }

      public static final int PHYSICAL_CELL_ID_FIELD_NUMBER = 7;
      private int physicalCellId_;
      /**
       * <code>optional int32 physical_cell_id = 7;</code>
       */
      public boolean hasPhysicalCellId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 physical_cell_id = 7;</code>
       */
      public int getPhysicalCellId() {
        return physicalCellId_;
      }
      /**
       * <code>optional int32 physical_cell_id = 7;</code>
       */
      private void setPhysicalCellId(int value) {
        bitField0_ |= 0x00000040;
        physicalCellId_ = value;
      }
      /**
       * <code>optional int32 physical_cell_id = 7;</code>
       */
      private void clearPhysicalCellId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        physicalCellId_ = 0;
      }

      public static final int TRACKING_AREA_CODE_FIELD_NUMBER = 8;
      private int trackingAreaCode_;
      /**
       * <code>optional int32 tracking_area_code = 8;</code>
       */
      public boolean hasTrackingAreaCode() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 tracking_area_code = 8;</code>
       */
      public int getTrackingAreaCode() {
        return trackingAreaCode_;
      }
      /**
       * <code>optional int32 tracking_area_code = 8;</code>
       */
      private void setTrackingAreaCode(int value) {
        bitField0_ |= 0x00000080;
        trackingAreaCode_ = value;
      }
      /**
       * <code>optional int32 tracking_area_code = 8;</code>
       */
      private void clearTrackingAreaCode() {
        bitField0_ = (bitField0_ & ~0x00000080);
        trackingAreaCode_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, type_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, cellId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, locationAreaCode_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, mobileCountryCode_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, mobileNetworkCode_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, primaryScramblingCode_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeInt32(7, physicalCellId_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeInt32(8, trackingAreaCode_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, type_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, cellId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, locationAreaCode_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, mobileCountryCode_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, mobileNetworkCode_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, primaryScramblingCode_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, physicalCellId_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(8, trackingAreaCode_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell, Builder> implements
          // @@protoc_insertion_point(builder_implements:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell)
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.CellOrBuilder {
        // Construct using org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell.Type type = 1;</code>
         */
        public boolean hasType() {
          return instance.hasType();
        }
        /**
         * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell.Type type = 1;</code>
         */
        public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Type getType() {
          return instance.getType();
        }
        /**
         * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell.Type type = 1;</code>
         */
        public Builder setType(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Type value) {
          copyOnWrite();
          instance.setType(value);
          return this;
        }
        /**
         * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell.Type type = 1;</code>
         */
        public Builder clearType() {
          copyOnWrite();
          instance.clearType();
          return this;
        }

        /**
         * <code>optional int32 cell_id = 2;</code>
         */
        public boolean hasCellId() {
          return instance.hasCellId();
        }
        /**
         * <code>optional int32 cell_id = 2;</code>
         */
        public int getCellId() {
          return instance.getCellId();
        }
        /**
         * <code>optional int32 cell_id = 2;</code>
         */
        public Builder setCellId(int value) {
          copyOnWrite();
          instance.setCellId(value);
          return this;
        }
        /**
         * <code>optional int32 cell_id = 2;</code>
         */
        public Builder clearCellId() {
          copyOnWrite();
          instance.clearCellId();
          return this;
        }

        /**
         * <code>optional int32 location_area_code = 3;</code>
         */
        public boolean hasLocationAreaCode() {
          return instance.hasLocationAreaCode();
        }
        /**
         * <code>optional int32 location_area_code = 3;</code>
         */
        public int getLocationAreaCode() {
          return instance.getLocationAreaCode();
        }
        /**
         * <code>optional int32 location_area_code = 3;</code>
         */
        public Builder setLocationAreaCode(int value) {
          copyOnWrite();
          instance.setLocationAreaCode(value);
          return this;
        }
        /**
         * <code>optional int32 location_area_code = 3;</code>
         */
        public Builder clearLocationAreaCode() {
          copyOnWrite();
          instance.clearLocationAreaCode();
          return this;
        }

        /**
         * <code>optional int32 mobile_country_code = 4;</code>
         */
        public boolean hasMobileCountryCode() {
          return instance.hasMobileCountryCode();
        }
        /**
         * <code>optional int32 mobile_country_code = 4;</code>
         */
        public int getMobileCountryCode() {
          return instance.getMobileCountryCode();
        }
        /**
         * <code>optional int32 mobile_country_code = 4;</code>
         */
        public Builder setMobileCountryCode(int value) {
          copyOnWrite();
          instance.setMobileCountryCode(value);
          return this;
        }
        /**
         * <code>optional int32 mobile_country_code = 4;</code>
         */
        public Builder clearMobileCountryCode() {
          copyOnWrite();
          instance.clearMobileCountryCode();
          return this;
        }

        /**
         * <code>optional int32 mobile_network_code = 5;</code>
         */
        public boolean hasMobileNetworkCode() {
          return instance.hasMobileNetworkCode();
        }
        /**
         * <code>optional int32 mobile_network_code = 5;</code>
         */
        public int getMobileNetworkCode() {
          return instance.getMobileNetworkCode();
        }
        /**
         * <code>optional int32 mobile_network_code = 5;</code>
         */
        public Builder setMobileNetworkCode(int value) {
          copyOnWrite();
          instance.setMobileNetworkCode(value);
          return this;
        }
        /**
         * <code>optional int32 mobile_network_code = 5;</code>
         */
        public Builder clearMobileNetworkCode() {
          copyOnWrite();
          instance.clearMobileNetworkCode();
          return this;
        }

        /**
         * <code>optional int32 primary_scrambling_code = 6;</code>
         */
        public boolean hasPrimaryScramblingCode() {
          return instance.hasPrimaryScramblingCode();
        }
        /**
         * <code>optional int32 primary_scrambling_code = 6;</code>
         */
        public int getPrimaryScramblingCode() {
          return instance.getPrimaryScramblingCode();
        }
        /**
         * <code>optional int32 primary_scrambling_code = 6;</code>
         */
        public Builder setPrimaryScramblingCode(int value) {
          copyOnWrite();
          instance.setPrimaryScramblingCode(value);
          return this;
        }
        /**
         * <code>optional int32 primary_scrambling_code = 6;</code>
         */
        public Builder clearPrimaryScramblingCode() {
          copyOnWrite();
          instance.clearPrimaryScramblingCode();
          return this;
        }

        /**
         * <code>optional int32 physical_cell_id = 7;</code>
         */
        public boolean hasPhysicalCellId() {
          return instance.hasPhysicalCellId();
        }
        /**
         * <code>optional int32 physical_cell_id = 7;</code>
         */
        public int getPhysicalCellId() {
          return instance.getPhysicalCellId();
        }
        /**
         * <code>optional int32 physical_cell_id = 7;</code>
         */
        public Builder setPhysicalCellId(int value) {
          copyOnWrite();
          instance.setPhysicalCellId(value);
          return this;
        }
        /**
         * <code>optional int32 physical_cell_id = 7;</code>
         */
        public Builder clearPhysicalCellId() {
          copyOnWrite();
          instance.clearPhysicalCellId();
          return this;
        }

        /**
         * <code>optional int32 tracking_area_code = 8;</code>
         */
        public boolean hasTrackingAreaCode() {
          return instance.hasTrackingAreaCode();
        }
        /**
         * <code>optional int32 tracking_area_code = 8;</code>
         */
        public int getTrackingAreaCode() {
          return instance.getTrackingAreaCode();
        }
        /**
         * <code>optional int32 tracking_area_code = 8;</code>
         */
        public Builder setTrackingAreaCode(int value) {
          copyOnWrite();
          instance.setTrackingAreaCode(value);
          return this;
        }
        /**
         * <code>optional int32 tracking_area_code = 8;</code>
         */
        public Builder clearTrackingAreaCode() {
          copyOnWrite();
          instance.clearTrackingAreaCode();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell)
      }
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell();
          }
          case IS_INITIALIZED: {
            return DEFAULT_INSTANCE;
          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell other = (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell) arg1;
            type_ = visitor.visitInt(hasType(), type_,
                other.hasType(), other.type_);
            cellId_ = visitor.visitInt(
                hasCellId(), cellId_,
                other.hasCellId(), other.cellId_);
            locationAreaCode_ = visitor.visitInt(
                hasLocationAreaCode(), locationAreaCode_,
                other.hasLocationAreaCode(), other.locationAreaCode_);
            mobileCountryCode_ = visitor.visitInt(
                hasMobileCountryCode(), mobileCountryCode_,
                other.hasMobileCountryCode(), other.mobileCountryCode_);
            mobileNetworkCode_ = visitor.visitInt(
                hasMobileNetworkCode(), mobileNetworkCode_,
                other.hasMobileNetworkCode(), other.mobileNetworkCode_);
            primaryScramblingCode_ = visitor.visitInt(
                hasPrimaryScramblingCode(), primaryScramblingCode_,
                other.hasPrimaryScramblingCode(), other.primaryScramblingCode_);
            physicalCellId_ = visitor.visitInt(
                hasPhysicalCellId(), physicalCellId_,
                other.hasPhysicalCellId(), other.physicalCellId_);
            trackingAreaCode_ = visitor.visitInt(
                hasTrackingAreaCode(), trackingAreaCode_,
                other.hasTrackingAreaCode(), other.trackingAreaCode_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    int rawValue = input.readEnum();
                    org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Type value = org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Type.forNumber(rawValue);
                    if (value == null) {
                      super.mergeVarintField(1, rawValue);
                    } else {
                      bitField0_ |= 0x00000001;
                      type_ = rawValue;
                    }
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    cellId_ = input.readInt32();
                    break;
                  }
                  case 24: {
                    bitField0_ |= 0x00000004;
                    locationAreaCode_ = input.readInt32();
                    break;
                  }
                  case 32: {
                    bitField0_ |= 0x00000008;
                    mobileCountryCode_ = input.readInt32();
                    break;
                  }
                  case 40: {
                    bitField0_ |= 0x00000010;
                    mobileNetworkCode_ = input.readInt32();
                    break;
                  }
                  case 48: {
                    bitField0_ |= 0x00000020;
                    primaryScramblingCode_ = input.readInt32();
                    break;
                  }
                  case 56: {
                    bitField0_ |= 0x00000040;
                    physicalCellId_ = input.readInt32();
                    break;
                  }
                  case 64: {
                    bitField0_ |= 0x00000080;
                    trackingAreaCode_ = input.readInt32();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell)
      private static final org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Cell();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Cell> PARSER;

      public static com.google.protobuf.Parser<Cell> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    private int typeCase_ = 0;
    private java.lang.Object type_;
    public enum TypeCase
        implements com.google.protobuf.Internal.EnumLite {
      WIFI(1),
      CELL(2),
      TYPE_NOT_SET(0);
      private final int value;
      private TypeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeCase forNumber(int value) {
        switch (value) {
          case 1: return WIFI;
          case 2: return CELL;
          case 0: return TYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TypeCase
    getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    private void clearType() {
      typeCase_ = 0;
      type_ = null;
    }

    public static final int WIFI_FIELD_NUMBER = 1;
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
     */
    public boolean hasWifi() {
      return typeCase_ == 1;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
     */
    public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi getWifi() {
      if (typeCase_ == 1) {
         return (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi) type_;
      }
      return org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi.getDefaultInstance();
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
     */
    private void setWifi(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi value) {
      if (value == null) {
        throw new NullPointerException();
      }
      type_ = value;
      typeCase_ = 1;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
     */
    private void setWifi(
        org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi.Builder builderForValue) {
      type_ = builderForValue.build();
      typeCase_ = 1;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
     */
    private void mergeWifi(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi value) {
      if (typeCase_ == 1 &&
          type_ != org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi.getDefaultInstance()) {
        type_ = org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi.newBuilder((org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi) type_)
            .mergeFrom(value).buildPartial();
      } else {
        type_ = value;
      }
      typeCase_ = 1;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
     */
    private void clearWifi() {
      if (typeCase_ == 1) {
        typeCase_ = 0;
        type_ = null;
      }
    }

    public static final int CELL_FIELD_NUMBER = 2;
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
     */
    public boolean hasCell() {
      return typeCase_ == 2;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
     */
    public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell getCell() {
      if (typeCase_ == 2) {
         return (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell) type_;
      }
      return org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.getDefaultInstance();
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
     */
    private void setCell(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell value) {
      if (value == null) {
        throw new NullPointerException();
      }
      type_ = value;
      typeCase_ = 2;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
     */
    private void setCell(
        org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Builder builderForValue) {
      type_ = builderForValue.build();
      typeCase_ = 2;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
     */
    private void mergeCell(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell value) {
      if (typeCase_ == 2 &&
          type_ != org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.getDefaultInstance()) {
        type_ = org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.newBuilder((org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell) type_)
            .mergeFrom(value).buildPartial();
      } else {
        type_ = value;
      }
      typeCase_ = 2;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
     */
    private void clearCell() {
      if (typeCase_ == 2) {
        typeCase_ = 0;
        type_ = null;
      }
    }

    public static final int CONNECTED_FIELD_NUMBER = 3;
    private boolean connected_;
    /**
     * <code>optional bool connected = 3;</code>
     */
    public boolean hasConnected() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool connected = 3;</code>
     */
    public boolean getConnected() {
      return connected_;
    }
    /**
     * <code>optional bool connected = 3;</code>
     */
    private void setConnected(boolean value) {
      bitField0_ |= 0x00000004;
      connected_ = value;
    }
    /**
     * <code>optional bool connected = 3;</code>
     */
    private void clearConnected() {
      bitField0_ = (bitField0_ & ~0x00000004);
      connected_ = false;
    }

    public static final int TIMESTAMP_MS_FIELD_NUMBER = 4;
    private long timestampMs_;
    /**
     * <code>optional int64 timestamp_ms = 4;</code>
     */
    public boolean hasTimestampMs() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 timestamp_ms = 4;</code>
     */
    public long getTimestampMs() {
      return timestampMs_;
    }
    /**
     * <code>optional int64 timestamp_ms = 4;</code>
     */
    private void setTimestampMs(long value) {
      bitField0_ |= 0x00000008;
      timestampMs_ = value;
    }
    /**
     * <code>optional int64 timestamp_ms = 4;</code>
     */
    private void clearTimestampMs() {
      bitField0_ = (bitField0_ & ~0x00000008);
      timestampMs_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (typeCase_ == 1) {
        output.writeMessage(1, (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi) type_);
      }
      if (typeCase_ == 2) {
        output.writeMessage(2, (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell) type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, connected_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, timestampMs_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (typeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi) type_);
      }
      if (typeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell) type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, connected_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, timestampMs_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code org.chromium.chrome.browser.omnibox.geo.VisibleNetwork}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork)
        org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetworkOrBuilder {
      // Construct using org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public TypeCase
          getTypeCase() {
        return instance.getTypeCase();
      }

      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }


      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
       */
      public boolean hasWifi() {
        return instance.hasWifi();
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
       */
      public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi getWifi() {
        return instance.getWifi();
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
       */
      public Builder setWifi(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi value) {
        copyOnWrite();
        instance.setWifi(value);
        return this;
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
       */
      public Builder setWifi(
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi.Builder builderForValue) {
        copyOnWrite();
        instance.setWifi(builderForValue);
        return this;
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
       */
      public Builder mergeWifi(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi value) {
        copyOnWrite();
        instance.mergeWifi(value);
        return this;
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.WiFi wifi = 1;</code>
       */
      public Builder clearWifi() {
        copyOnWrite();
        instance.clearWifi();
        return this;
      }

      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
       */
      public boolean hasCell() {
        return instance.hasCell();
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
       */
      public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell getCell() {
        return instance.getCell();
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
       */
      public Builder setCell(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell value) {
        copyOnWrite();
        instance.setCell(value);
        return this;
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
       */
      public Builder setCell(
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Builder builderForValue) {
        copyOnWrite();
        instance.setCell(builderForValue);
        return this;
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
       */
      public Builder mergeCell(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell value) {
        copyOnWrite();
        instance.mergeCell(value);
        return this;
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork.Cell cell = 2;</code>
       */
      public Builder clearCell() {
        copyOnWrite();
        instance.clearCell();
        return this;
      }

      /**
       * <code>optional bool connected = 3;</code>
       */
      public boolean hasConnected() {
        return instance.hasConnected();
      }
      /**
       * <code>optional bool connected = 3;</code>
       */
      public boolean getConnected() {
        return instance.getConnected();
      }
      /**
       * <code>optional bool connected = 3;</code>
       */
      public Builder setConnected(boolean value) {
        copyOnWrite();
        instance.setConnected(value);
        return this;
      }
      /**
       * <code>optional bool connected = 3;</code>
       */
      public Builder clearConnected() {
        copyOnWrite();
        instance.clearConnected();
        return this;
      }

      /**
       * <code>optional int64 timestamp_ms = 4;</code>
       */
      public boolean hasTimestampMs() {
        return instance.hasTimestampMs();
      }
      /**
       * <code>optional int64 timestamp_ms = 4;</code>
       */
      public long getTimestampMs() {
        return instance.getTimestampMs();
      }
      /**
       * <code>optional int64 timestamp_ms = 4;</code>
       */
      public Builder setTimestampMs(long value) {
        copyOnWrite();
        instance.setTimestampMs(value);
        return this;
      }
      /**
       * <code>optional int64 timestamp_ms = 4;</code>
       */
      public Builder clearTimestampMs() {
        copyOnWrite();
        instance.clearTimestampMs();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork other = (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork) arg1;
          connected_ = visitor.visitBoolean(
              hasConnected(), connected_,
              other.hasConnected(), other.connected_);
          timestampMs_ = visitor.visitLong(
              hasTimestampMs(), timestampMs_,
              other.hasTimestampMs(), other.timestampMs_);
          switch (other.getTypeCase()) {
            case WIFI: {
              type_ = visitor.visitOneofMessage(
                  typeCase_ == 1,
                  type_,
                  other.type_);
              break;
            }
            case CELL: {
              type_ = visitor.visitOneofMessage(
                  typeCase_ == 2,
                  type_,
                  other.type_);
              break;
            }
            case TYPE_NOT_SET: {
              visitor.visitOneofNotSet(typeCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.typeCase_ != 0) {
              typeCase_ = other.typeCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi.Builder subBuilder = null;
                  if (typeCase_ == 1) {
                    subBuilder = ((org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi) type_).toBuilder();
                  }
                  type_ =
                       input.readMessage(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.WiFi) type_);
                    type_ = subBuilder.buildPartial();
                  }
                  typeCase_ = 1;
                  break;
                }
                case 18: {
                  org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.Builder subBuilder = null;
                  if (typeCase_ == 2) {
                    subBuilder = ((org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell) type_).toBuilder();
                  }
                  type_ =
                       input.readMessage(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Cell) type_);
                    type_ = subBuilder.buildPartial();
                  }
                  typeCase_ = 2;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  connected_ = input.readBool();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  timestampMs_ = input.readInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.chromium.chrome.browser.omnibox.geo.VisibleNetwork)
    private static final org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VisibleNetwork();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<VisibleNetwork> PARSER;

    public static com.google.protobuf.Parser<VisibleNetwork> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LocationDescriptorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.chromium.chrome.browser.omnibox.geo.LocationDescriptor)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationRole role = 1 [default = UNKNOWN_ROLE];</code>
     */
    boolean hasRole();
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationRole role = 1 [default = UNKNOWN_ROLE];</code>
     */
    org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationRole getRole();

    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationProducer producer = 2 [default = UNKNOWN_PRODUCER];</code>
     */
    boolean hasProducer();
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationProducer producer = 2 [default = UNKNOWN_PRODUCER];</code>
     */
    org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationProducer getProducer();

    /**
     * <code>optional int64 timestamp = 3;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional int64 timestamp = 3;</code>
     */
    long getTimestamp();

    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
     */
    boolean hasLatlng();
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
     */
    org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng getLatlng();

    /**
     * <code>optional float radius = 7;</code>
     */
    boolean hasRadius();
    /**
     * <code>optional float radius = 7;</code>
     */
    float getRadius();

    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    java.util.List<org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork> 
        getVisibleNetworkList();
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork getVisibleNetwork(int index);
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    int getVisibleNetworkCount();
  }
  /**
   * Protobuf type {@code org.chromium.chrome.browser.omnibox.geo.LocationDescriptor}
   */
  public  static final class LocationDescriptor extends
      com.google.protobuf.GeneratedMessageLite<
          LocationDescriptor, LocationDescriptor.Builder> implements
      // @@protoc_insertion_point(message_implements:org.chromium.chrome.browser.omnibox.geo.LocationDescriptor)
      LocationDescriptorOrBuilder {
    private LocationDescriptor() {
      visibleNetwork_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int ROLE_FIELD_NUMBER = 1;
    private int role_;
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationRole role = 1 [default = UNKNOWN_ROLE];</code>
     */
    public boolean hasRole() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationRole role = 1 [default = UNKNOWN_ROLE];</code>
     */
    public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationRole getRole() {
      org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationRole result = org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationRole.forNumber(role_);
      return result == null ? org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationRole.UNKNOWN_ROLE : result;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationRole role = 1 [default = UNKNOWN_ROLE];</code>
     */
    private void setRole(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationRole value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      role_ = value.getNumber();
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationRole role = 1 [default = UNKNOWN_ROLE];</code>
     */
    private void clearRole() {
      bitField0_ = (bitField0_ & ~0x00000001);
      role_ = 0;
    }

    public static final int PRODUCER_FIELD_NUMBER = 2;
    private int producer_;
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationProducer producer = 2 [default = UNKNOWN_PRODUCER];</code>
     */
    public boolean hasProducer() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationProducer producer = 2 [default = UNKNOWN_PRODUCER];</code>
     */
    public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationProducer getProducer() {
      org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationProducer result = org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationProducer.forNumber(producer_);
      return result == null ? org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationProducer.UNKNOWN_PRODUCER : result;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationProducer producer = 2 [default = UNKNOWN_PRODUCER];</code>
     */
    private void setProducer(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationProducer value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      producer_ = value.getNumber();
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationProducer producer = 2 [default = UNKNOWN_PRODUCER];</code>
     */
    private void clearProducer() {
      bitField0_ = (bitField0_ & ~0x00000002);
      producer_ = 0;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 3;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 timestamp = 3;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }
    /**
     * <code>optional int64 timestamp = 3;</code>
     */
    private void setTimestamp(long value) {
      bitField0_ |= 0x00000004;
      timestamp_ = value;
    }
    /**
     * <code>optional int64 timestamp = 3;</code>
     */
    private void clearTimestamp() {
      bitField0_ = (bitField0_ & ~0x00000004);
      timestamp_ = 0L;
    }

    public static final int LATLNG_FIELD_NUMBER = 5;
    private org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng latlng_;
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
     */
    public boolean hasLatlng() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
     */
    public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng getLatlng() {
      return latlng_ == null ? org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng.getDefaultInstance() : latlng_;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
     */
    private void setLatlng(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng value) {
      if (value == null) {
        throw new NullPointerException();
      }
      latlng_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
     */
    private void setLatlng(
        org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng.Builder builderForValue) {
      latlng_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
     */
    private void mergeLatlng(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng value) {
      if (latlng_ != null &&
          latlng_ != org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng.getDefaultInstance()) {
        latlng_ =
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng.newBuilder(latlng_).mergeFrom(value).buildPartial();
      } else {
        latlng_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
     */
    private void clearLatlng() {  latlng_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public static final int RADIUS_FIELD_NUMBER = 7;
    private float radius_;
    /**
     * <code>optional float radius = 7;</code>
     */
    public boolean hasRadius() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float radius = 7;</code>
     */
    public float getRadius() {
      return radius_;
    }
    /**
     * <code>optional float radius = 7;</code>
     */
    private void setRadius(float value) {
      bitField0_ |= 0x00000010;
      radius_ = value;
    }
    /**
     * <code>optional float radius = 7;</code>
     */
    private void clearRadius() {
      bitField0_ = (bitField0_ & ~0x00000010);
      radius_ = 0F;
    }

    public static final int VISIBLE_NETWORK_FIELD_NUMBER = 23;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork> visibleNetwork_;
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    public java.util.List<org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork> getVisibleNetworkList() {
      return visibleNetwork_;
    }
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    public java.util.List<? extends org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetworkOrBuilder> 
        getVisibleNetworkOrBuilderList() {
      return visibleNetwork_;
    }
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    public int getVisibleNetworkCount() {
      return visibleNetwork_.size();
    }
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork getVisibleNetwork(int index) {
      return visibleNetwork_.get(index);
    }
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetworkOrBuilder getVisibleNetworkOrBuilder(
        int index) {
      return visibleNetwork_.get(index);
    }
    private void ensureVisibleNetworkIsMutable() {
      if (!visibleNetwork_.isModifiable()) {
        visibleNetwork_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(visibleNetwork_);
       }
    }

    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    private void setVisibleNetwork(
        int index, org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureVisibleNetworkIsMutable();
      visibleNetwork_.set(index, value);
    }
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    private void setVisibleNetwork(
        int index, org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Builder builderForValue) {
      ensureVisibleNetworkIsMutable();
      visibleNetwork_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    private void addVisibleNetwork(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureVisibleNetworkIsMutable();
      visibleNetwork_.add(value);
    }
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    private void addVisibleNetwork(
        int index, org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureVisibleNetworkIsMutable();
      visibleNetwork_.add(index, value);
    }
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    private void addVisibleNetwork(
        org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Builder builderForValue) {
      ensureVisibleNetworkIsMutable();
      visibleNetwork_.add(builderForValue.build());
    }
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    private void addVisibleNetwork(
        int index, org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Builder builderForValue) {
      ensureVisibleNetworkIsMutable();
      visibleNetwork_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    private void addAllVisibleNetwork(
        java.lang.Iterable<? extends org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork> values) {
      ensureVisibleNetworkIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, visibleNetwork_);
    }
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    private void clearVisibleNetwork() {
      visibleNetwork_ = emptyProtobufList();
    }
    /**
     * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
     */
    private void removeVisibleNetwork(int index) {
      ensureVisibleNetworkIsMutable();
      visibleNetwork_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, role_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, producer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, getLatlng());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(7, radius_);
      }
      for (int i = 0; i < visibleNetwork_.size(); i++) {
        output.writeMessage(23, visibleNetwork_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, role_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, producer_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getLatlng());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, radius_);
      }
      for (int i = 0; i < visibleNetwork_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, visibleNetwork_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code org.chromium.chrome.browser.omnibox.geo.LocationDescriptor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor, Builder> implements
        // @@protoc_insertion_point(builder_implements:org.chromium.chrome.browser.omnibox.geo.LocationDescriptor)
        org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptorOrBuilder {
      // Construct using org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationRole role = 1 [default = UNKNOWN_ROLE];</code>
       */
      public boolean hasRole() {
        return instance.hasRole();
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationRole role = 1 [default = UNKNOWN_ROLE];</code>
       */
      public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationRole getRole() {
        return instance.getRole();
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationRole role = 1 [default = UNKNOWN_ROLE];</code>
       */
      public Builder setRole(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationRole value) {
        copyOnWrite();
        instance.setRole(value);
        return this;
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationRole role = 1 [default = UNKNOWN_ROLE];</code>
       */
      public Builder clearRole() {
        copyOnWrite();
        instance.clearRole();
        return this;
      }

      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationProducer producer = 2 [default = UNKNOWN_PRODUCER];</code>
       */
      public boolean hasProducer() {
        return instance.hasProducer();
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationProducer producer = 2 [default = UNKNOWN_PRODUCER];</code>
       */
      public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationProducer getProducer() {
        return instance.getProducer();
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationProducer producer = 2 [default = UNKNOWN_PRODUCER];</code>
       */
      public Builder setProducer(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationProducer value) {
        copyOnWrite();
        instance.setProducer(value);
        return this;
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LocationProducer producer = 2 [default = UNKNOWN_PRODUCER];</code>
       */
      public Builder clearProducer() {
        copyOnWrite();
        instance.clearProducer();
        return this;
      }

      /**
       * <code>optional int64 timestamp = 3;</code>
       */
      public boolean hasTimestamp() {
        return instance.hasTimestamp();
      }
      /**
       * <code>optional int64 timestamp = 3;</code>
       */
      public long getTimestamp() {
        return instance.getTimestamp();
      }
      /**
       * <code>optional int64 timestamp = 3;</code>
       */
      public Builder setTimestamp(long value) {
        copyOnWrite();
        instance.setTimestamp(value);
        return this;
      }
      /**
       * <code>optional int64 timestamp = 3;</code>
       */
      public Builder clearTimestamp() {
        copyOnWrite();
        instance.clearTimestamp();
        return this;
      }

      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
       */
      public boolean hasLatlng() {
        return instance.hasLatlng();
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
       */
      public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng getLatlng() {
        return instance.getLatlng();
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
       */
      public Builder setLatlng(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng value) {
        copyOnWrite();
        instance.setLatlng(value);
        return this;
        }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
       */
      public Builder setLatlng(
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng.Builder builderForValue) {
        copyOnWrite();
        instance.setLatlng(builderForValue);
        return this;
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
       */
      public Builder mergeLatlng(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng value) {
        copyOnWrite();
        instance.mergeLatlng(value);
        return this;
      }
      /**
       * <code>optional .org.chromium.chrome.browser.omnibox.geo.LatLng latlng = 5;</code>
       */
      public Builder clearLatlng() {  copyOnWrite();
        instance.clearLatlng();
        return this;
      }

      /**
       * <code>optional float radius = 7;</code>
       */
      public boolean hasRadius() {
        return instance.hasRadius();
      }
      /**
       * <code>optional float radius = 7;</code>
       */
      public float getRadius() {
        return instance.getRadius();
      }
      /**
       * <code>optional float radius = 7;</code>
       */
      public Builder setRadius(float value) {
        copyOnWrite();
        instance.setRadius(value);
        return this;
      }
      /**
       * <code>optional float radius = 7;</code>
       */
      public Builder clearRadius() {
        copyOnWrite();
        instance.clearRadius();
        return this;
      }

      /**
       * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
       */
      public java.util.List<org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork> getVisibleNetworkList() {
        return java.util.Collections.unmodifiableList(
            instance.getVisibleNetworkList());
      }
      /**
       * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
       */
      public int getVisibleNetworkCount() {
        return instance.getVisibleNetworkCount();
      }/**
       * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
       */
      public org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork getVisibleNetwork(int index) {
        return instance.getVisibleNetwork(index);
      }
      /**
       * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
       */
      public Builder setVisibleNetwork(
          int index, org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork value) {
        copyOnWrite();
        instance.setVisibleNetwork(index, value);
        return this;
      }
      /**
       * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
       */
      public Builder setVisibleNetwork(
          int index, org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Builder builderForValue) {
        copyOnWrite();
        instance.setVisibleNetwork(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
       */
      public Builder addVisibleNetwork(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork value) {
        copyOnWrite();
        instance.addVisibleNetwork(value);
        return this;
      }
      /**
       * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
       */
      public Builder addVisibleNetwork(
          int index, org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork value) {
        copyOnWrite();
        instance.addVisibleNetwork(index, value);
        return this;
      }
      /**
       * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
       */
      public Builder addVisibleNetwork(
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Builder builderForValue) {
        copyOnWrite();
        instance.addVisibleNetwork(builderForValue);
        return this;
      }
      /**
       * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
       */
      public Builder addVisibleNetwork(
          int index, org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.Builder builderForValue) {
        copyOnWrite();
        instance.addVisibleNetwork(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
       */
      public Builder addAllVisibleNetwork(
          java.lang.Iterable<? extends org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork> values) {
        copyOnWrite();
        instance.addAllVisibleNetwork(values);
        return this;
      }
      /**
       * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
       */
      public Builder clearVisibleNetwork() {
        copyOnWrite();
        instance.clearVisibleNetwork();
        return this;
      }
      /**
       * <code>repeated .org.chromium.chrome.browser.omnibox.geo.VisibleNetwork visible_network = 23;</code>
       */
      public Builder removeVisibleNetwork(int index) {
        copyOnWrite();
        instance.removeVisibleNetwork(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.chromium.chrome.browser.omnibox.geo.LocationDescriptor)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          visibleNetwork_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor other = (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor) arg1;
          role_ = visitor.visitInt(hasRole(), role_,
              other.hasRole(), other.role_);
          producer_ = visitor.visitInt(hasProducer(), producer_,
              other.hasProducer(), other.producer_);
          timestamp_ = visitor.visitLong(
              hasTimestamp(), timestamp_,
              other.hasTimestamp(), other.timestamp_);
          latlng_ = visitor.visitMessage(latlng_, other.latlng_);
          radius_ = visitor.visitFloat(
              hasRadius(), radius_,
              other.hasRadius(), other.radius_);
          visibleNetwork_= visitor.visitList(visibleNetwork_, other.visibleNetwork_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationRole value = org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationRole.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    role_ = rawValue;
                  }
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationProducer value = org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationProducer.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    producer_ = rawValue;
                  }
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  timestamp_ = input.readInt64();
                  break;
                }
                case 42: {
                  org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = latlng_.toBuilder();
                  }
                  latlng_ = input.readMessage(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LatLng.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(latlng_);
                    latlng_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
                case 61: {
                  bitField0_ |= 0x00000010;
                  radius_ = input.readFloat();
                  break;
                }
                case 186: {
                  if (!visibleNetwork_.isModifiable()) {
                    visibleNetwork_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(visibleNetwork_);
                  }
                  visibleNetwork_.add(
                      input.readMessage(org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.VisibleNetwork.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:org.chromium.chrome.browser.omnibox.geo.LocationDescriptor)
    private static final org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LocationDescriptor();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.chrome.browser.omnibox.geo.PartnerLocationDescriptor.LocationDescriptor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LocationDescriptor> PARSER;

    public static com.google.protobuf.Parser<LocationDescriptor> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
