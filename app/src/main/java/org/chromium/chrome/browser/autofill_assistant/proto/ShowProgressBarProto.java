// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Shows the progress bar.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.ShowProgressBarProto}
 */
public  final class ShowProgressBarProto extends
    com.google.protobuf.GeneratedMessageLite<
        ShowProgressBarProto, ShowProgressBarProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ShowProgressBarProto)
    ShowProgressBarProtoOrBuilder {
  private ShowProgressBarProto() {
    message_ = "";
  }
  private int bitField0_;
  public static final int DONE_FIELD_NUMBER = 2;
  private boolean done_;
  /**
   * <pre>
   * Specifies whether the progress is done and should be removed.
   * </pre>
   *
   * <code>optional bool done = 2;</code>
   */
  public boolean hasDone() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * Specifies whether the progress is done and should be removed.
   * </pre>
   *
   * <code>optional bool done = 2;</code>
   */
  public boolean getDone() {
    return done_;
  }
  /**
   * <pre>
   * Specifies whether the progress is done and should be removed.
   * </pre>
   *
   * <code>optional bool done = 2;</code>
   */
  private void setDone(boolean value) {
    bitField0_ |= 0x00000001;
    done_ = value;
  }
  /**
   * <pre>
   * Specifies whether the progress is done and should be removed.
   * </pre>
   *
   * <code>optional bool done = 2;</code>
   */
  private void clearDone() {
    bitField0_ = (bitField0_ & ~0x00000001);
    done_ = false;
  }

  public static final int MESSAGE_FIELD_NUMBER = 3;
  private java.lang.String message_;
  /**
   * <pre>
   * Message to show on the progress bar while loading.
   * </pre>
   *
   * <code>optional string message = 3;</code>
   */
  public boolean hasMessage() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * Message to show on the progress bar while loading.
   * </pre>
   *
   * <code>optional string message = 3;</code>
   */
  public java.lang.String getMessage() {
    return message_;
  }
  /**
   * <pre>
   * Message to show on the progress bar while loading.
   * </pre>
   *
   * <code>optional string message = 3;</code>
   */
  public com.google.protobuf.ByteString
      getMessageBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(message_);
  }
  /**
   * <pre>
   * Message to show on the progress bar while loading.
   * </pre>
   *
   * <code>optional string message = 3;</code>
   */
  private void setMessage(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    message_ = value;
  }
  /**
   * <pre>
   * Message to show on the progress bar while loading.
   * </pre>
   *
   * <code>optional string message = 3;</code>
   */
  private void clearMessage() {
    bitField0_ = (bitField0_ & ~0x00000002);
    message_ = getDefaultInstance().getMessage();
  }
  /**
   * <pre>
   * Message to show on the progress bar while loading.
   * </pre>
   *
   * <code>optional string message = 3;</code>
   */
  private void setMessageBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
    message_ = value.toStringUtf8();
  }

  public static final int PROGRESS_FIELD_NUMBER = 6;
  private int progress_;
  /**
   * <pre>
   * Value between 0 and 100 indicating the current progress. Values above 100
   * will be capped to 100, values below 0 will be capped to 0 by the client.
   * NOTE: Setting |progress| to 100 is an equivalent of setting |done| to true.
   * </pre>
   *
   * <code>optional int32 progress = 6;</code>
   */
  public boolean hasProgress() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * Value between 0 and 100 indicating the current progress. Values above 100
   * will be capped to 100, values below 0 will be capped to 0 by the client.
   * NOTE: Setting |progress| to 100 is an equivalent of setting |done| to true.
   * </pre>
   *
   * <code>optional int32 progress = 6;</code>
   */
  public int getProgress() {
    return progress_;
  }
  /**
   * <pre>
   * Value between 0 and 100 indicating the current progress. Values above 100
   * will be capped to 100, values below 0 will be capped to 0 by the client.
   * NOTE: Setting |progress| to 100 is an equivalent of setting |done| to true.
   * </pre>
   *
   * <code>optional int32 progress = 6;</code>
   */
  private void setProgress(int value) {
    bitField0_ |= 0x00000004;
    progress_ = value;
  }
  /**
   * <pre>
   * Value between 0 and 100 indicating the current progress. Values above 100
   * will be capped to 100, values below 0 will be capped to 0 by the client.
   * NOTE: Setting |progress| to 100 is an equivalent of setting |done| to true.
   * </pre>
   *
   * <code>optional int32 progress = 6;</code>
   */
  private void clearProgress() {
    bitField0_ = (bitField0_ & ~0x00000004);
    progress_ = 0;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeBool(2, done_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeString(3, getMessage());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(6, progress_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, done_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getMessage());
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, progress_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Shows the progress bar.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.ShowProgressBarProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ShowProgressBarProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Specifies whether the progress is done and should be removed.
     * </pre>
     *
     * <code>optional bool done = 2;</code>
     */
    public boolean hasDone() {
      return instance.hasDone();
    }
    /**
     * <pre>
     * Specifies whether the progress is done and should be removed.
     * </pre>
     *
     * <code>optional bool done = 2;</code>
     */
    public boolean getDone() {
      return instance.getDone();
    }
    /**
     * <pre>
     * Specifies whether the progress is done and should be removed.
     * </pre>
     *
     * <code>optional bool done = 2;</code>
     */
    public Builder setDone(boolean value) {
      copyOnWrite();
      instance.setDone(value);
      return this;
    }
    /**
     * <pre>
     * Specifies whether the progress is done and should be removed.
     * </pre>
     *
     * <code>optional bool done = 2;</code>
     */
    public Builder clearDone() {
      copyOnWrite();
      instance.clearDone();
      return this;
    }

    /**
     * <pre>
     * Message to show on the progress bar while loading.
     * </pre>
     *
     * <code>optional string message = 3;</code>
     */
    public boolean hasMessage() {
      return instance.hasMessage();
    }
    /**
     * <pre>
     * Message to show on the progress bar while loading.
     * </pre>
     *
     * <code>optional string message = 3;</code>
     */
    public java.lang.String getMessage() {
      return instance.getMessage();
    }
    /**
     * <pre>
     * Message to show on the progress bar while loading.
     * </pre>
     *
     * <code>optional string message = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      return instance.getMessageBytes();
    }
    /**
     * <pre>
     * Message to show on the progress bar while loading.
     * </pre>
     *
     * <code>optional string message = 3;</code>
     */
    public Builder setMessage(
        java.lang.String value) {
      copyOnWrite();
      instance.setMessage(value);
      return this;
    }
    /**
     * <pre>
     * Message to show on the progress bar while loading.
     * </pre>
     *
     * <code>optional string message = 3;</code>
     */
    public Builder clearMessage() {
      copyOnWrite();
      instance.clearMessage();
      return this;
    }
    /**
     * <pre>
     * Message to show on the progress bar while loading.
     * </pre>
     *
     * <code>optional string message = 3;</code>
     */
    public Builder setMessageBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setMessageBytes(value);
      return this;
    }

    /**
     * <pre>
     * Value between 0 and 100 indicating the current progress. Values above 100
     * will be capped to 100, values below 0 will be capped to 0 by the client.
     * NOTE: Setting |progress| to 100 is an equivalent of setting |done| to true.
     * </pre>
     *
     * <code>optional int32 progress = 6;</code>
     */
    public boolean hasProgress() {
      return instance.hasProgress();
    }
    /**
     * <pre>
     * Value between 0 and 100 indicating the current progress. Values above 100
     * will be capped to 100, values below 0 will be capped to 0 by the client.
     * NOTE: Setting |progress| to 100 is an equivalent of setting |done| to true.
     * </pre>
     *
     * <code>optional int32 progress = 6;</code>
     */
    public int getProgress() {
      return instance.getProgress();
    }
    /**
     * <pre>
     * Value between 0 and 100 indicating the current progress. Values above 100
     * will be capped to 100, values below 0 will be capped to 0 by the client.
     * NOTE: Setting |progress| to 100 is an equivalent of setting |done| to true.
     * </pre>
     *
     * <code>optional int32 progress = 6;</code>
     */
    public Builder setProgress(int value) {
      copyOnWrite();
      instance.setProgress(value);
      return this;
    }
    /**
     * <pre>
     * Value between 0 and 100 indicating the current progress. Values above 100
     * will be capped to 100, values below 0 will be capped to 0 by the client.
     * NOTE: Setting |progress| to 100 is an equivalent of setting |done| to true.
     * </pre>
     *
     * <code>optional int32 progress = 6;</code>
     */
    public Builder clearProgress() {
      copyOnWrite();
      instance.clearProgress();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ShowProgressBarProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto other = (org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto) arg1;
        done_ = visitor.visitBoolean(
            hasDone(), done_,
            other.hasDone(), other.done_);
        message_ = visitor.visitString(
            hasMessage(), message_,
            other.hasMessage(), other.message_);
        progress_ = visitor.visitInt(
            hasProgress(), progress_,
            other.hasProgress(), other.progress_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000001;
                done_ = input.readBool();
                break;
              }
              case 26: {
                String s = input.readString();
                bitField0_ |= 0x00000002;
                message_ = s;
                break;
              }
              case 48: {
                bitField0_ |= 0x00000004;
                progress_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ShowProgressBarProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ShowProgressBarProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ShowProgressBarProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ShowProgressBarProto> PARSER;

  public static com.google.protobuf.Parser<ShowProgressBarProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

