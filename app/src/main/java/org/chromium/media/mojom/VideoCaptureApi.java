
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     media/capture/mojom/video_capture_types.mojom
//

package org.chromium.media.mojom;

import org.chromium.mojo.bindings.DeserializationException;

public final class VideoCaptureApi {


    public static final int LINUX_V4L2_SINGLE_PLANE = 0;

    public static final int WIN_MEDIA_FOUNDATION = LINUX_V4L2_SINGLE_PLANE + 1;

    public static final int WIN_MEDIA_FOUNDATION_SENSOR = WIN_MEDIA_FOUNDATION + 1;

    public static final int WIN_DIRECT_SHOW = WIN_MEDIA_FOUNDATION_SENSOR + 1;

    public static final int MACOSX_AVFOUNDATION = WIN_DIRECT_SHOW + 1;

    public static final int MACOSX_DECKLINK = MACOSX_AVFOUNDATION + 1;

    public static final int ANDROID_API1 = MACOSX_DECKLINK + 1;

    public static final int ANDROID_API2_LEGACY = ANDROID_API1 + 1;

    public static final int ANDROID_API2_FULL = ANDROID_API2_LEGACY + 1;

    public static final int ANDROID_API2_LIMITED = ANDROID_API2_FULL + 1;

    public static final int VIRTUAL_DEVICE = ANDROID_API2_LIMITED + 1;

    public static final int UNKNOWN = VIRTUAL_DEVICE + 1;

    public static final int MIN_VALUE = (int) (0);
    public static final int MAX_VALUE = (int) (11);

    private static final boolean IS_EXTENSIBLE = false;

    public static boolean isKnownValue(int value) {
        switch (value) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
                return true;
        }
        return false;
    }

    public static void validate(int value) {
        if (IS_EXTENSIBLE || isKnownValue(value))
            return;

        throw new DeserializationException("Invalid enum value.");
    }

    private VideoCaptureApi() {}

}