
// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     java_cpp_enum.py
// From
//     ../../components/sync/base/model_type.h

package org.chromium.components.sync;

import android.support.annotation.IntDef;

import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;

@IntDef({
    ModelType.UNSPECIFIED, ModelType.TOP_LEVEL_FOLDER, ModelType.BOOKMARKS,
    ModelType.FIRST_USER_MODEL_TYPE, ModelType.FIRST_REAL_MODEL_TYPE, ModelType.PREFERENCES,
    ModelType.PASSWORDS, ModelType.AUTOFILL_PROFILE, ModelType.AUTOFILL,
    ModelType.AUTOFILL_WALLET_DATA, ModelType.AUTOFILL_WALLET_METADATA, ModelType.THEMES,
    ModelType.TYPED_URLS, ModelType.EXTENSIONS, ModelType.SEARCH_ENGINES, ModelType.SESSIONS,
    ModelType.APPS, ModelType.APP_SETTINGS, ModelType.EXTENSION_SETTINGS,
    ModelType.APP_NOTIFICATIONS, ModelType.HISTORY_DELETE_DIRECTIVES,
    ModelType.SYNCED_NOTIFICATIONS, ModelType.SYNCED_NOTIFICATION_APP_INFO, ModelType.DICTIONARY,
    ModelType.FAVICON_IMAGES, ModelType.FAVICON_TRACKING, ModelType.DEVICE_INFO,
    ModelType.PRIORITY_PREFERENCES, ModelType.SUPERVISED_USER_SETTINGS,
    ModelType.DEPRECATED_SUPERVISED_USERS, ModelType.DEPRECATED_SUPERVISED_USER_SHARED_SETTINGS,
    ModelType.DEPRECATED_ARTICLES, ModelType.APP_LIST, ModelType.DEPRECATED_WIFI_CREDENTIALS,
    ModelType.SUPERVISED_USER_WHITELISTS, ModelType.ARC_PACKAGE, ModelType.PRINTERS,
    ModelType.READING_LIST, ModelType.USER_EVENTS, ModelType.MOUNTAIN_SHARES,
    ModelType.USER_CONSENTS, ModelType.SEND_TAB_TO_SELF, ModelType.PROXY_TABS,
    ModelType.FIRST_PROXY_TYPE, ModelType.LAST_PROXY_TYPE, ModelType.LAST_USER_MODEL_TYPE,
    ModelType.NIGORI, ModelType.FIRST_CONTROL_MODEL_TYPE, ModelType.EXPERIMENTS,
    ModelType.LAST_CONTROL_MODEL_TYPE, ModelType.LAST_REAL_MODEL_TYPE, ModelType.MODEL_TYPE_COUNT
})
@Retention(RetentionPolicy.SOURCE)
public @interface ModelType {
  /**
   * Object type unknown.  Objects may transition through the unknown state during their initial
   * creation, before their properties are set.  After deletion, object types are generally
   * preserved.
   */
  int UNSPECIFIED = 0;
  /**
   * A permanent folder whose children may be of mixed datatypes (e.g. the "Google Chrome" folder).
   */
  int TOP_LEVEL_FOLDER = 1;
  /**
   * ------------------------------------ Start of "real" model types. The model types declared
   * before here are somewhat special, as they they do not correspond to any browser data model.
   * The remaining types are bona fide model types; all have a related browser data model and can be
   * represented in the protocol using a specific Message type in the EntitySpecifics protocol
   * buffer. A bookmark folder or a bookmark URL object.
   */
  int BOOKMARKS = 2;
  int FIRST_USER_MODEL_TYPE = 2;
  int FIRST_REAL_MODEL_TYPE = 2;
  /**
   * A preference object.
   */
  int PREFERENCES = 3;
  /**
   * A password object.
   */
  int PASSWORDS = 4;
  /**
   * An AutofillProfile Object
   */
  int AUTOFILL_PROFILE = 5;
  /**
   * An autofill object.
   */
  int AUTOFILL = 6;
  /**
   * Credit cards and addresses synced from the user's account. These are read-only on the client.
   */
  int AUTOFILL_WALLET_DATA = 7;
  /**
   * Usage counts and last use dates for Wallet cards and addresses. This data is both readable and
   * writable.
   */
  int AUTOFILL_WALLET_METADATA = 8;
  /**
   * A themes object.
   */
  int THEMES = 9;
  /**
   * A typed_url object.
   */
  int TYPED_URLS = 10;
  /**
   * An extension object.
   */
  int EXTENSIONS = 11;
  /**
   * An object representing a custom search engine.
   */
  int SEARCH_ENGINES = 12;
  /**
   * An object representing a browser session.
   */
  int SESSIONS = 13;
  /**
   * An app object.
   */
  int APPS = 14;
  /**
   * An app setting from the extension settings API.
   */
  int APP_SETTINGS = 15;
  /**
   * An extension setting from the extension settings API.
   */
  int EXTENSION_SETTINGS = 16;
  /**
   * App notifications. Deprecated.
   */
  int APP_NOTIFICATIONS = 17;
  /**
   * History delete directives.
   */
  int HISTORY_DELETE_DIRECTIVES = 18;
  /**
   * Synced push notifications. Deprecated.
   */
  int SYNCED_NOTIFICATIONS = 19;
  /**
   * Synced Notification app info. Deprecated.
   */
  int SYNCED_NOTIFICATION_APP_INFO = 20;
  /**
   * Custom spelling dictionary.
   */
  int DICTIONARY = 21;
  /**
   * Favicon images.
   */
  int FAVICON_IMAGES = 22;
  /**
   * Favicon tracking information.
   */
  int FAVICON_TRACKING = 23;
  /**
   * Client-specific metadata, synced before other user types.
   */
  int DEVICE_INFO = 24;
  /**
   * These preferences are synced before other user types and are never encrypted.
   */
  int PRIORITY_PREFERENCES = 25;
  /**
   * Supervised user settings. Cannot be encrypted.
   */
  int SUPERVISED_USER_SETTINGS = 26;
  /**
   * Deprecated supervised user types that are not used anymore.
   */
  int DEPRECATED_SUPERVISED_USERS = 27;
  int DEPRECATED_SUPERVISED_USER_SHARED_SETTINGS = 28;
  /**
   * Distilled articles.
   */
  int DEPRECATED_ARTICLES = 29;
  /**
   * App List items
   */
  int APP_LIST = 30;
  /**
   * WiFi credentials. Each item contains the information for connecting to one WiFi network. This
   * includes, e.g., network name and password.
   */
  int DEPRECATED_WIFI_CREDENTIALS = 31;
  /**
   * Supervised user whitelists. Each item contains a CRX ID (like an extension ID) and a name.
   */
  int SUPERVISED_USER_WHITELISTS = 32;
  /**
   * ARC Package items.
   */
  int ARC_PACKAGE = 33;
  /**
   * Printer device information.
   */
  int PRINTERS = 34;
  /**
   * Reading list items.
   */
  int READING_LIST = 35;
  /**
   * Commit only user events.
   */
  int USER_EVENTS = 36;
  /**
   * Shares in project Mountain.
   */
  int MOUNTAIN_SHARES = 37;
  /**
   * Commit only user consents.
   */
  int USER_CONSENTS = 38;
  /**
   * Tabs sent between devices.
   */
  int SEND_TAB_TO_SELF = 39;
  /**
   * ---- Proxy types ---- Proxy types are excluded from the sync protocol, but are still considered
   * real user types. By convention, we prefix them with 'PROXY_' to distinguish them from normal
   * protocol types. Tab sync. This is a placeholder type, so that Sessions can be implicitly
   * enabled for history sync and tabs sync.
   */
  int PROXY_TABS = 40;
  int FIRST_PROXY_TYPE = 40;
  int LAST_PROXY_TYPE = 40;
  int LAST_USER_MODEL_TYPE = 40;
  /**
   * ---- Control Types ---- An object representing a set of Nigori keys.
   */
  int NIGORI = 41;
  int FIRST_CONTROL_MODEL_TYPE = 41;
  /**
   * Flags to enable experimental features.
   */
  int EXPERIMENTS = 42;
  int LAST_CONTROL_MODEL_TYPE = 42;
  int LAST_REAL_MODEL_TYPE = 42;
  int MODEL_TYPE_COUNT = 43;
}
