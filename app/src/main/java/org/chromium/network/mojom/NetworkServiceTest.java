
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     services/network/public/mojom/network_service_test.mojom
//

package org.chromium.network.mojom;

import org.chromium.mojo.bindings.DeserializationException;


public interface NetworkServiceTest extends org.chromium.mojo.bindings.Interface {



    public static final class ShouldRequireCt {


        public static final int RESET = (int) (0L);

        public static final int REQUIRE = (int) (1L);

        public static final int DONT_REQUIRE = (int) (2L);

        public static final int MIN_VALUE = (int) (0);
        public static final int MAX_VALUE = (int) (2);

        private static final boolean IS_EXTENSIBLE = false;

        public static boolean isKnownValue(int value) {
            switch (value) {
                case 0:
                case 1:
                case 2:
                    return true;
            }
            return false;
        }

        public static void validate(int value) {
            if (IS_EXTENSIBLE || isKnownValue(value))
                return;

            throw new DeserializationException("Invalid enum value.");
        }

        private ShouldRequireCt() {}

    }


    public interface Proxy extends NetworkServiceTest, org.chromium.mojo.bindings.Interface.Proxy {
    }

    Manager<NetworkServiceTest, NetworkServiceTest.Proxy> MANAGER = NetworkServiceTest_Internal.MANAGER;


    void addRules(
Rule[] rules, 
AddRulesResponse callback);

    interface AddRulesResponse extends org.chromium.mojo.bindings.Callbacks.Callback0 { }



    void simulateNetworkChange(
int type, 
SimulateNetworkChangeResponse callback);

    interface SimulateNetworkChangeResponse extends org.chromium.mojo.bindings.Callbacks.Callback0 { }



    void simulateNetworkQualityChange(
int type, 
SimulateNetworkQualityChangeResponse callback);

    interface SimulateNetworkQualityChangeResponse extends org.chromium.mojo.bindings.Callbacks.Callback0 { }



    void simulateCrash(
);



    void mockCertVerifierSetDefaultResult(
int defaultResult, 
MockCertVerifierSetDefaultResultResponse callback);

    interface MockCertVerifierSetDefaultResultResponse extends org.chromium.mojo.bindings.Callbacks.Callback0 { }



    void mockCertVerifierAddResultForCertAndHost(
X509Certificate cert, String hostPattern, CertVerifyResult verifyResult, int rv, 
MockCertVerifierAddResultForCertAndHostResponse callback);

    interface MockCertVerifierAddResultForCertAndHostResponse extends org.chromium.mojo.bindings.Callbacks.Callback0 { }



    void setShouldRequireCt(
int required, 
SetShouldRequireCtResponse callback);

    interface SetShouldRequireCtResponse extends org.chromium.mojo.bindings.Callbacks.Callback0 { }



    void setTransportSecurityStateSource(
short reportingPort, 
SetTransportSecurityStateSourceResponse callback);

    interface SetTransportSecurityStateSourceResponse extends org.chromium.mojo.bindings.Callbacks.Callback0 { }



    void crashOnResolveHost(
String host);



    void getLatestMemoryPressureLevel(

GetLatestMemoryPressureLevelResponse callback);

    interface GetLatestMemoryPressureLevelResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<Integer> { }


}
