
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/background_fetch/background_fetch.mojom
//

package org.chromium.blink.mojom;

import org.chromium.mojo.bindings.DeserializationException;


public interface BackgroundFetchService extends org.chromium.mojo.bindings.Interface {



    public interface Proxy extends BackgroundFetchService, org.chromium.mojo.bindings.Interface.Proxy {
    }

    Manager<BackgroundFetchService, BackgroundFetchService.Proxy> MANAGER = BackgroundFetchService_Internal.MANAGER;


    void fetch(
long serviceWorkerRegistrationId, String developerId, FetchApiRequest[] requests, BackgroundFetchOptions options, org.chromium.skia.mojom.Bitmap icon, BackgroundFetchUkmData ukmData, 
FetchResponse callback);

    interface FetchResponse extends org.chromium.mojo.bindings.Callbacks.Callback2<Integer, BackgroundFetchRegistration> { }



    void updateUi(
long serviceWorkerRegistrationId, String developerId, String uniqueId, String title, org.chromium.skia.mojom.Bitmap icon, 
UpdateUiResponse callback);

    interface UpdateUiResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<Integer> { }



    void abort(
long serviceWorkerRegistrationId, String developerId, String uniqueId, 
AbortResponse callback);

    interface AbortResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<Integer> { }



    void getRegistration(
long serviceWorkerRegistrationId, String developerId, 
GetRegistrationResponse callback);

    interface GetRegistrationResponse extends org.chromium.mojo.bindings.Callbacks.Callback2<Integer, BackgroundFetchRegistration> { }



    void getDeveloperIds(
long serviceWorkerRegistrationId, 
GetDeveloperIdsResponse callback);

    interface GetDeveloperIdsResponse extends org.chromium.mojo.bindings.Callbacks.Callback2<Integer, String[]> { }



    void getIconDisplaySize(

GetIconDisplaySizeResponse callback);

    interface GetIconDisplaySizeResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<org.chromium.gfx.mojom.Size> { }



    void matchRequests(
long serviceWorkerRegistrationId, String developerId, String uniqueId, FetchApiRequest requestToMatch, QueryParams cacheQueryParams, boolean matchAll, 
MatchRequestsResponse callback);

    interface MatchRequestsResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<BackgroundFetchSettledFetch[]> { }



    void addRegistrationObserver(
String uniqueId, BackgroundFetchRegistrationObserver observer);


}
