
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/mediastream/media_stream.mojom
//

package org.chromium.blink.mojom;

import org.chromium.mojo.bindings.DeserializationException;

public final class MediaStreamRequestResult {


    public static final int OK = 0;

    public static final int PERMISSION_DENIED = OK + 1;

    public static final int PERMISSION_DISMISSED = PERMISSION_DENIED + 1;

    public static final int INVALID_STATE = PERMISSION_DISMISSED + 1;

    public static final int NO_HARDWARE = INVALID_STATE + 1;

    public static final int INVALID_SECURITY_ORIGIN = NO_HARDWARE + 1;

    public static final int TAB_CAPTURE_FAILURE = INVALID_SECURITY_ORIGIN + 1;

    public static final int SCREEN_CAPTURE_FAILURE = TAB_CAPTURE_FAILURE + 1;

    public static final int CAPTURE_FAILURE = SCREEN_CAPTURE_FAILURE + 1;

    public static final int CONSTRAINT_NOT_SATISFIED = CAPTURE_FAILURE + 1;

    public static final int TRACK_START_FAILURE_AUDIO = CONSTRAINT_NOT_SATISFIED + 1;

    public static final int TRACK_START_FAILURE_VIDEO = TRACK_START_FAILURE_AUDIO + 1;

    public static final int NOT_SUPPORTED = TRACK_START_FAILURE_VIDEO + 1;

    public static final int FAILED_DUE_TO_SHUTDOWN = NOT_SUPPORTED + 1;

    public static final int KILL_SWITCH_ON = FAILED_DUE_TO_SHUTDOWN + 1;

    public static final int SYSTEM_PERMISSION_DENIED = KILL_SWITCH_ON + 1;

    public static final int MIN_VALUE = (int) (0);
    public static final int MAX_VALUE = (int) (15);

    private static final boolean IS_EXTENSIBLE = false;

    public static boolean isKnownValue(int value) {
        switch (value) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
                return true;
        }
        return false;
    }

    public static void validate(int value) {
        if (IS_EXTENSIBLE || isKnownValue(value))
            return;

        throw new DeserializationException("Invalid enum value.");
    }

    private MediaStreamRequestResult() {}

}