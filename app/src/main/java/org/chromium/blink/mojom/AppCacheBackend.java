
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     third_party/blink/public/mojom/appcache/appcache.mojom
//

package org.chromium.blink.mojom;

import org.chromium.mojo.bindings.DeserializationException;


public interface AppCacheBackend extends org.chromium.mojo.bindings.Interface {



    public interface Proxy extends AppCacheBackend, org.chromium.mojo.bindings.Interface.Proxy {
    }

    Manager<AppCacheBackend, AppCacheBackend.Proxy> MANAGER = AppCacheBackend_Internal.MANAGER;


    void registerHost(
int hostId);



    void unregisterHost(
int hostId);



    void setSpawningHostId(
int hostId, int spawningHostId);



    void selectCache(
int hostId, org.chromium.url.mojom.Url documentUrl, long appcacheDocumentWasLoadedFrom, org.chromium.url.mojom.Url optManifestUrl);



    void selectCacheForSharedWorker(
int hostId, long appcacheId);



    void markAsForeignEntry(
int hostId, org.chromium.url.mojom.Url documentUrl, long appcacheDocumentWasLoadedFrom);



    void getStatus(
int hostId, 
GetStatusResponse callback);

    interface GetStatusResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<Integer> { }



    void startUpdate(
int hostId, 
StartUpdateResponse callback);

    interface StartUpdateResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<Boolean> { }



    void swapCache(
int hostId, 
SwapCacheResponse callback);

    interface SwapCacheResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<Boolean> { }



    void getResourceList(
int hostId, 
GetResourceListResponse callback);

    interface GetResourceListResponse extends org.chromium.mojo.bindings.Callbacks.Callback1<AppCacheResourceInfo[]> { }


}
